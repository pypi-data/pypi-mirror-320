[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "backtesterrb30"
version = "0.1.17"
description = "Backtesting and data loading engine"
license = "Unlicense"
authors = [
    "pazerny kormoran",
]
readme = "README.md"
repository = "https://github.com/threeal/python-starter"
keywords = ["backtesting", "market", "finance", "trading"]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: The Unlicense (Unlicense)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries :: Python Modules"
]


[tool.poetry.dependencies]
python = "^3.10"
pydantic = "1.10.2"
numpy = "2.1.2"
asyncio = "3.4.3"
pyzmq = "26.2.0"
python-binance = "1.0.16"
pandas = "2.2.3"
matplotlib = "^3.9.2"
python-dotenv = "0.21.0"
keyboard = "0.13.5"
pycoingecko = "3.1.0"
websocket-client = "~0.57.0"
backoff = "2.2.1"
jwt = "1.3.1"
deepdiff = "4.0.5"
inflection = "0.3.1"
appdirs = "1.4.4"
requests = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
poethepoet = "^0.29.0"
pytest-cov = "^5.0.0"
pydoctor = "^24.3.3"
ruff = "^0.6.8"
ipykernel = "^6.29.5"

[tool.poetry.scripts]
strategy1 = "strategies.basic_example:main"
basic_example = "examples.basic_example.basic_example:main"
live_reloading_example = "examples.live_reloading_example.live_reloading_strategy:main"

[tool.poe.tasks]
docs = "pydoctor --make-html backtesterrb30"
format = "ruff format backtesterrb30"
lint = "ruff check backtesterrb30"
test = "pytest -v --cov=backtesterrb30"
lint-fix  = ["format", "lint"]

[tool.coverage.report]
fail_under = 0

[tool.ruff.lint]
extend-select = []

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"