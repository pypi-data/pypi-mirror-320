# generated by datamodel-codegen:
#   filename:  https://demo.mediascout.ru/swagger/v1/swagger.json
#   timestamp: 2024-09-30T15:27:42+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import Any, Dict, List, Optional
from uuid import UUID

from pydantic import BaseModel, Extra, Field


class ClearInvoiceDataWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Идентификатор акта')


class CreateMode(Enum):
    DirectClient = 'DirectClient'
    InitialContractClient = 'InitialContractClient'


class LegalForm(Enum):
    JuridicalPerson = 'JuridicalPerson'
    IndividualEntrepreneur = 'IndividualEntrepreneur'
    PhysicalPerson = 'PhysicalPerson'
    InternationalJuridicalPerson = 'InternationalJuridicalPerson'
    InternationalPhysicalPerson = 'InternationalPhysicalPerson'


class Status(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Blocked = 'Blocked'


class CreateClientRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    createMode: Optional[CreateMode] = Field(
        None, description='Тип отношения заказчика к агентству'
    )
    legalForm: Optional[LegalForm] = Field(
        None,
        description='Юридическая форма заказчика<p>Members:</p><ul><li><i>JuridicalPerson</i> - Юрлицо РФ</li><li><i>IndividualEntrepreneur</i> - Индивидуальный предприниматель РФ</li><li><i>PhysicalPerson</i> - Физлицо РФ</li><li><i>InternationalJuridicalPerson</i> - Иностранное юрлицо</li><li><i>InternationalPhysicalPerson</i> - Иностранное физлицо</li></ul>',
    )
    inn: Optional[str] = Field(
        None,
        description='Для РФ-контрагентов - ИНН. Для иностранных физ.и юр.лиц - номер налогоплательщика либо его аналог в стране регистрации',
        example='1234567890',
    )
    name: Optional[str] = Field(
        None, description='Наименование контрагента', example='Наименование контрагента'
    )
    mobilePhone: Optional[str] = Field(
        None, description='Номер мобильного телефона', example='79999999999'
    )
    epayNumber: Optional[str] = Field(
        None, description='Номер электронного средства платежа'
    )
    regNumber: Optional[str] = Field(
        None, description='Регистрационный номер либо его аналог'
    )
    oksmNumber: Optional[str] = Field(
        None, description='Код страны регистрации юр. лица в соответствии с ОКСМ'
    )


class Type(Enum):
    CPM = 'CPM'
    CPC = 'CPC'
    CPA = 'CPA'
    Other = 'Other'


class Form(Enum):
    Banner = 'Banner'
    Text = 'Text'
    TextGraphic = 'TextGraphic'
    Video = 'Video'
    Audio = 'Audio'
    AudioBroadcast = 'AudioBroadcast'
    VideoBroadcast = 'VideoBroadcast'
    Other = 'Other'
    TextVideoBlock = 'TextVideoBlock'
    TextAudioBlock = 'TextAudioBlock'
    TextAudioVideoBlock = 'TextAudioVideoBlock'
    TextGraphicVideoBlock = 'TextGraphicVideoBlock'
    TextGraphicAudioBlock = 'TextGraphicAudioBlock'
    TextGraphicAudioVideoBlock = 'TextGraphicAudioVideoBlock'
    BannerHtml5 = 'BannerHtml5'


class Type1(Enum):
    ServiceAgreement = 'ServiceAgreement'
    MediationContract = 'MediationContract'
    AdditionalAgreement = 'AdditionalAgreement'
    SelfPromotionContract = 'SelfPromotionContract'
    VirtualFinalContract = 'VirtualFinalContract'
    EcidContract = 'EcidContract'


class SubjectType(Enum):
    Distribution = 'Distribution'
    OrgDistribution = 'OrgDistribution'
    Representation = 'Representation'
    Mediation = 'Mediation'
    Other = 'Other'


class ActionType(Enum):
    Contracting = 'Contracting'
    Distribution = 'Distribution'
    CommercialRepresentation = 'CommercialRepresentation'
    Other = 'Other'


class CreateFinalContractRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type1] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по доходному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )


class CreateInitialContractRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type1] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id или Cid доходного договора',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )


class ContractorRole(Enum):
    Rr = 'Rr'
    Ors = 'Ors'
    Rd = 'Rd'
    Ra = 'Ra'


class ClientRole(Enum):
    Rr = 'Rr'
    Ors = 'Ors'
    Rd = 'Rd'
    Ra = 'Ra'


class CreateOuterContractRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type1] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    isRegReport: Optional[bool] = Field(
        None,
        description='Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах',
    )


class Type4(Enum):
    Site = 'Site'
    Application = 'Application'
    InformationSystem = 'InformationSystem'


class CreatePlatformRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None, description='Наименование площадки', example='Тестовая площадка'
    )
    type: Optional[Type4] = Field(
        None,
        description='Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>',
    )
    url: Optional[str] = Field(
        None, description='Url площадки', example='https://example.com'
    )
    isOwner: Optional[bool] = Field(
        None, description='Признак принадлежности агентству'
    )


class CreatedCreativeResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Id креатива')
    nativeCustomerId: Optional[str] = Field(
        None, description='Id креатива в системе клиента'
    )
    erid: Optional[str] = Field(None, description='Erid креатива')
    creativeGroupId: Optional[str] = Field(
        None, description='Id брони (группы) креативов'
    )
    creativeGroupName: Optional[str] = Field(
        None, description='Наименование брони (группы) креативов'
    )


class Type5(Enum):
    CPM = 'CPM'
    CPC = 'CPC'
    CPA = 'CPA'
    Other = 'Other'


class FileType(Enum):
    Image = 'Image'
    Video = 'Video'
    Audio = 'Audio'
    Zip = 'Zip'
    Other = 'Other'


class CreativeMediaDataItem(BaseModel):
    class Config:
        extra = Extra.forbid

    fileName: Optional[str] = Field(
        None,
        description='Имя файла\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
        example='file.txt',
    )
    fileType: Optional[FileType] = Field(
        None,
        description='Тип файла медиаданных креатива\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Image</i> - Изображение</li><li><i>Video</i> - Видео</li><li><i>Audio</i> - Аудио</li><li><i>Zip</i> - Архив</li><li><i>Other</i> - Иное</li></ul>',
        example='image',
    )
    fileContentBase64: Optional[str] = Field(
        None,
        description='Содержимое файла в кодировке Base64\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Обязательно, если не заполнено поле `srcUrl`</p>',
    )
    srcUrl: Optional[str] = Field(
        None,
        description='URL, откуда можно скачать файл. URL должен быть доступен без авторизации\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Обязательно, если не заполнено поле `fileContentBase64`</p>',
        example='https://example.com',
    )
    description: Optional[str] = Field(
        None,
        description='Описание изображения креатива\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Обязательно для `fileType = image`</p>',
        example='Описание',
    )
    isArchive: Optional[bool] = Field(
        None,
        description='Признак того, что это архив\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )


class Status1(Enum):
    Creating = 'Creating'
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class CreativeTextDataItem(BaseModel):
    class Config:
        extra = Extra.forbid

    textData: Optional[str] = Field(
        None, description='Текстовые данные креатива', example='Некий текст'
    )


class Kind(Enum):
    FinalContract = 'FinalContract'
    InitialContract = 'InitialContract'
    OuterContract = 'OuterContract'


class DeleteContractWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Id удаляемого договора')
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора, заполняется только при удалении изначального договора',
    )
    kind: Optional[Kind] = Field(
        None,
        description='Вид удаляемой связи (т.е. чем этот договор был - конечным, изначальным, внешним для агентства)<p>Members:</p><ul><li><i>FinalContract</i> - Конечный договор</li><li><i>InitialContract</i> - Изначальный договор</li><li><i>OuterContract</i> - Внешний договор</li></ul>',
    )


class DeleteRestoreCreativeWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    erid: Optional[str] = Field(None, description='Фильтр по маркеру креатива')
    nativeCustomerId: Optional[str] = Field(
        None, description='Пользовательский Id креатива'
    )


class EditCreativeRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(
        None,
        description='Id креатива. Должно быть заполнено либо Id креатива, либо NativeCustomerId, либо Erid\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `NativeCustomerId`, `Erid`</p>',
        example='CR5pxRa__aRkSgUqt0JeNkoA',
    )
    nativeCustomerId: Optional[str] = Field(
        None,
        description='Id креатива в системе клиента\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `Erid`</p>',
    )
    erid: Optional[str] = Field(
        None,
        description='Erid креатива\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `NativeCustomerId`</p>',
        example='2SDnjcX1BkW',
    )
    creativeGroupId: Optional[str] = Field(
        None,
        description='Id брони, если пусто, значит - создаем новую бронь, иначе добавляем в существующую. При этом бронь остается текущая или все поля новой брони обязаны совпадать с текущей\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupName: Optional[str] = Field(
        None,
        description='Наименование создаваемой брони, заполняется только если CreativeGroupId = NULL\r\n<p style="color: blue">Поле условно-обязательно для заполнения</p>',
        example='ТестоваяГруппа',
    )
    creativeGroupStartDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-01-01',
    )
    creativeGroupEndDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-30-01',
    )
    advertiserUrls: Optional[List[str]] = Field(
        None,
        description='Целевые ссылки (сайты рекламодателя, на который осуществляется переход с креатива)\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example=['http://test1.ru', 'http://test2.ru'],
    )
    mediaData: Optional[List[CreativeMediaDataItem]] = Field(
        None,
        description='Медиаданные креатива (массив)\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    textData: Optional[List[CreativeTextDataItem]] = Field(
        None,
        description='Текстовые медиаданные креатива (массив)\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )


class Type7(Enum):
    ServiceAgreement = 'ServiceAgreement'
    MediationContract = 'MediationContract'
    AdditionalAgreement = 'AdditionalAgreement'
    SelfPromotionContract = 'SelfPromotionContract'
    VirtualFinalContract = 'VirtualFinalContract'
    EcidContract = 'EcidContract'


class EditFinalContractWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type7] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по доходному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    id: Optional[str] = Field(
        None, description='Id доходного договора', example='CT0N4ufC76TEu1xBEIwJ3CaA'
    )


class EditInitialContractWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type7] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id или Cid доходного договора',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    id: Optional[str] = Field(
        None, description='Id изначального договора', example='CT0N4ufC76TEu1xBEIwJ3CaA'
    )


class EditInvoiceDataWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер акта. Допускается null, в таком случае считаем, что акт без номера',
        example='Тест',
    )
    date: Optional[date] = Field(None, description='Дата акта', example='2022-12-31')
    contractorRole: Optional[ContractorRole] = Field(
        None,
        description='Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Ra',
    )
    clientRole: Optional[ClientRole] = Field(
        None,
        description='Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Rd',
    )
    amount: Optional[float] = Field(
        None, description='Общая стоимость по акту в руб.', example=100
    )
    startDate: Optional[date] = Field(
        None, description='Дата начала оказания услуг по акту', example='2022-12-01'
    )
    endDate: Optional[date] = Field(
        None,
        description='Дата окончания оказания услуг по акту (включительно)',
        example='2022-12-31',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД',
        example='CT3at_SU7y3ECdCb-AfHV3sA',
    )
    id: Optional[str] = Field(
        None, description='Идентификатор акта', example='INUFNs1ibfg0erF1PNpTOAyg'
    )


class EditOuterContractWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type7] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    isRegReport: Optional[bool] = Field(
        None,
        description='Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах',
    )
    id: Optional[str] = Field(
        None, description='Id расходного договора', example='CT0N4ufC76TEu1xBEIwJ3CaA'
    )


class Type10(Enum):
    Site = 'Site'
    Application = 'Application'
    InformationSystem = 'InformationSystem'


class EditPlatformWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None, description='Наименование площадки', example='Тестовая площадка'
    )
    type: Optional[Type10] = Field(
        None,
        description='Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>',
    )
    url: Optional[str] = Field(
        None, description='Url площадки', example='https://example.com'
    )
    isOwner: Optional[bool] = Field(
        None, description='Признак принадлежности агентству'
    )
    id: Optional[str] = Field(
        None, description='Идентификатор площадки', example='PLCqwqXBhLMk6eTsIQoUT48A'
    )


class EntityIdResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(
        None, description='Идентификатор акта', example='INUFNs1ibfg0erF1PNpTOAyg'
    )


class Stage(Enum):
    EntityHeader = 'EntityHeader'
    First = 'First'
    Second = 'Second'


class ErirValidationError(BaseModel):
    class Config:
        extra = Extra.forbid

    stage: Optional[Stage] = Field(
        None,
        description='Тип запроса ЕРИР-интеграции<p>Members:</p><ul><li><i>EntityHeader</i> - Отправлена заголовочная информация (например шапка акта)</li><li><i>First</i> - Первоначальный быстрый запрос, проверяются лишь атрибуты сущности</li><li><i>Second</i> - Запрос на получение уточненных результатов логической проверки</li></ul>',
    )
    code: Optional[str] = Field(None, description='Код ошибки от ЕРИР', example='I_82')
    message: Optional[str] = Field(
        None,
        description='Подробный текст ошибки от ЕРИР',
        example='В разаллокации присутствует более одного договора',
    )
    responseDt: Optional[datetime] = Field(
        None, description='Дата-время ответа, полученного от ЕРИР'
    )


class FiasResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Идентификатор адресного объекта')
    parentId: Optional[str] = Field(
        None, description='Идентификатор родительского объекта'
    )
    objectGuid: Optional[UUID] = Field(
        None,
        description='Глобальный уникальный идентификатор адресного объекта типа UUID',
        example='3fa85f64-5717-4562-b3fc-2c963f66afa6',
    )
    name: Optional[str] = Field(
        None, description='Краткое наименование типа объекта', example='город'
    )
    fullName: Optional[str] = Field(
        None,
        description='Полное наименование адресного объекта',
        example='Нижний Новгород',
    )


class Type11(Enum):
    ServiceAgreement = 'ServiceAgreement'
    MediationContract = 'MediationContract'
    AdditionalAgreement = 'AdditionalAgreement'
    SelfPromotionContract = 'SelfPromotionContract'
    VirtualFinalContract = 'VirtualFinalContract'
    EcidContract = 'EcidContract'


class Status2(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Testing = 'Testing'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class FinalContractResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type11] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по доходному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    id: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    status: Optional[Status2] = Field(
        None,
        description='Статус доходного договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    contractorId: Optional[str] = Field(
        None, description='Id исполнителя', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    contractorInn: Optional[str] = Field(
        None, description='ИНН исполнителя', example='7722643959'
    )
    contractorName: Optional[str] = Field(
        None, description='Наименование исполнителя', example='ООО "Ромашка"'
    )
    cid: Optional[str] = Field(
        None,
        description='Cid доходного договора',
        example='763acd99-687b-46cd-8f40-45eced77413c',
    )
    erirValidationError: Optional[ErirValidationError] = None


class Status3(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Blocked = 'Blocked'


class GetClientRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Фильтр по Id заказчика в ОРД')
    inn: Optional[str] = Field(None, description='Фильтр по ИНН заказчика')
    status: Optional[Status3] = Field(None, description='Фильтр по статусу заказчика')


class GetCreativeGroupsRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    initialContractId: Optional[str] = Field(
        None,
        description='Фильтр по Id или Cid изначального договора изначального договора\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Фильтр по Id доходного договора в ОРД\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupName: Optional[str] = Field(
        None,
        description='Фильтр по номеру доходного договора\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupStartDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupEndDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )


class Status4(Enum):
    Creating = 'Creating'
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class GetCreativesWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    nativeCustomerId: Optional[str] = Field(
        None, description='Пользовательский Id креатива'
    )
    creativeId: Optional[str] = Field(None, description='Фильтр по Id креатива в ОРД')
    erid: Optional[str] = Field(None, description='Фильтр по маркеру креатива')
    creativeGroupStartDate: Optional[date] = Field(
        None, description='Дата начала рекламной компании'
    )
    creativeGroupEndDate: Optional[date] = Field(
        None, description='Дата окончания рекламной компании'
    )
    initialContractId: Optional[str] = Field(
        None, description='Фильтр по Id или Cid изначального договора'
    )
    initialContractNumber: Optional[str] = Field(
        None, description='Фильтр по номеру изначального договора'
    )
    finalContractId: Optional[str] = Field(
        None, description='Фильтр по Id доходного договора в ОРД'
    )
    finalContractNumber: Optional[str] = Field(
        None, description='Фильтр по номеру доходного договора'
    )
    status: Optional[Status4] = Field(None, description='Фильтр по статусу креатива')


class Status5(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Testing = 'Testing'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class GetFinalContractsRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    finalContractId: Optional[str] = Field(
        None, description='Фильтр по Id или Cid доходного договора'
    )
    clientId: Optional[str] = Field(
        None, description='Фильтр по Id контрагента-заказчика по договору в ОРД'
    )
    status: Optional[Status5] = Field(
        None, description='Фильтр по статусу доходного договора'
    )


class GetInitialContractRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    initialContractId: Optional[str] = Field(
        None, description='Фильтр по Id или Cid изначального договора'
    )
    finalContractId: Optional[str] = Field(
        None, description='Фильтр по Id или Cid доходного договора'
    )
    contractorId: Optional[str] = Field(
        None,
        description='Фильтр по Id контрагента-исполнителя по изначальному договору в ОРД',
    )
    contractorInn: Optional[str] = Field(
        None,
        description='Фильтр по ИНН контрагента-исполнителя по изначальному договору в ОРД',
    )
    contractorName: Optional[str] = Field(
        None,
        description='Фильтр по наименованию контрагента-исполнителя по изначальному договору в ОРД',
    )
    clientId: Optional[str] = Field(
        None,
        description='Фильтр по Id контрагента-заказчика по изначальному договору в ОРД',
    )
    clientInn: Optional[str] = Field(
        None,
        description='Фильтр по ИНН контрагента-заказчика по изначальному договору в ОРД',
    )
    clientName: Optional[str] = Field(
        None,
        description='Фильтр по наименованию контрагента-заказчика по изначальному договору в ОРД',
    )
    status: Optional[Status5] = Field(
        None, description='Фильтр по статусу изначального договора'
    )


class Status7(Enum):
    Creating = 'Creating'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'


class GetInvoicelessPeriodsRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    dateStart: Optional[date] = Field(
        None, description='Начало диапазона дат периодов статистики'
    )
    dateEnd: Optional[date] = Field(
        None, description='Конец диапазона дат периодов статистики'
    )
    status: Optional[Status7] = Field(None, description='Фильтр по статусу акта')


class Status8(Enum):
    Creating = 'Creating'
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Transferring = 'Transferring'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    DeletionRequired = 'DeletionRequired'
    DeletionTransferring = 'DeletionTransferring'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class GetInvoicesWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    invoiceId: Optional[str] = Field(None, description='Фильтр по Id акта в ОРД')
    number: Optional[str] = Field(None, description='Номер акта')
    dateStart: Optional[date] = Field(None, description='Начало диапазона дат актов')
    dateEnd: Optional[date] = Field(None, description='Конец диапазона дат актов')
    finalContractId: Optional[str] = Field(
        None, description='Фильтр по Id доходного договора в ОРД'
    )
    status: Optional[Status8] = Field(None, description='Фильтр по статусу акта')


class Status9(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Testing = 'Testing'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class GetOuterContractsRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    outerContractId: Optional[str] = Field(
        None, description='Фильтр по Id или Cid расходного договора'
    )
    status: Optional[Status9] = Field(
        None, description='Фильтр по статусу расходного договора'
    )
    contractorId: Optional[str] = Field(
        None,
        description='Фильтр по Id контрагента-исполнителя по расходному договору в ОРД',
    )
    clientId: Optional[str] = Field(
        None,
        description='Фильтр по Id контрагента-заказчика по расходному договору в ОРД',
    )


class InitialContractResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type11] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    clientId: Optional[str] = Field(
        None,
        description='Id контрагента-заказчика по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id или Cid доходного договора',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    id: Optional[str] = Field(
        None,
        description='Id изначального договора в ОРД',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    status: Optional[Status9] = Field(
        None,
        description='Статус изначального договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    contractorInn: Optional[str] = Field(
        None, description='ИНН исполнителя', example='7722643959'
    )
    contractorName: Optional[str] = Field(
        None, description='Наименование исполнителя', example='ООО «Ромашка»'
    )
    clientInn: Optional[str] = Field(
        None, description='ИНН заказчика', example='7722643959'
    )
    clientName: Optional[str] = Field(
        None, description='Наименование заказчика', example='ООО «Ромашка»'
    )
    cid: Optional[str] = Field(
        None,
        description='Cid изначального договора',
        example='763acd99-687b-46cd-8f40-45eced77413c',
    )
    erirValidationError: Optional[ErirValidationError] = None


class InvoiceInitialContractItem(BaseModel):
    class Config:
        extra = Extra.forbid

    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора',
        example='CT7ae_PK9R0hCdAb-NfHH2fN',
    )
    amount: Optional[float] = Field(
        None,
        description='Стоимость услуг по изначальному договору в составе акта в руб.',
        example=1500,
    )


class Status11(Enum):
    Creating = 'Creating'
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Transferring = 'Transferring'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    DeletionRequired = 'DeletionRequired'
    DeletionTransferring = 'DeletionTransferring'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class InvoiceResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер акта. Допускается null, в таком случае считаем, что акт без номера',
        example='Тест',
    )
    date: Optional[date] = Field(None, description='Дата акта', example='2022-12-31')
    contractorRole: Optional[ContractorRole] = Field(
        None,
        description='Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Ra',
    )
    clientRole: Optional[ClientRole] = Field(
        None,
        description='Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Rd',
    )
    amount: Optional[float] = Field(
        None, description='Общая стоимость по акту в руб.', example=100
    )
    startDate: Optional[date] = Field(
        None, description='Дата начала оказания услуг по акту', example='2022-12-01'
    )
    endDate: Optional[date] = Field(
        None,
        description='Дата окончания оказания услуг по акту (включительно)',
        example='2022-12-31',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД',
        example='CT3at_SU7y3ECdCb-AfHV3sA',
    )
    id: Optional[str] = Field(
        None, description='Идентификатор акта', example='INUFNs1ibfg0erF1PNpTOAyg'
    )
    status: Optional[Status11] = Field(
        None,
        description='Статус акта в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>Created</i> - Черновик (загрузка в ОРД завершена), нужно послать в ЕРИР</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Transferring</i> - Идет передача в ЕРИР, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Registering</i> - Идет регистрация, удаленные креативы и статистика переданы, также передана остальная информация по акту, быстрый контроль ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации в ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>DeletionTransferring</i> - Идет передача в ЕРИР удаленных креативов и строк, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Deleting</i> - Идет передача креативов и статистики для удаления, либо быстрый контроль всего ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    erirValidationError: Optional[ErirValidationError] = None


class PlatformType(Enum):
    Site = 'Site'
    Application = 'Application'
    InformationSystem = 'InformationSystem'


class InvoiceStatisticsByPlatformsItem(BaseModel):
    class Config:
        extra = Extra.forbid

    erid: Optional[str] = Field(
        None,
        description='Маркер креатива',
        example='Pb3MmBtzsrbL19RgOqsipS1ANueaCUzJSdpiY5g',
    )
    platformUrl: Optional[str] = Field(
        None, description='URL площадки', example='https://example.ru'
    )
    platformName: Optional[str] = Field(
        None, description='Наименование площадки', example='test'
    )
    platformType: Optional[PlatformType] = Field(
        None, description='Значение из справочника "Типы площадок"', example='Site'
    )
    platformOwnedByAgency: Optional[bool] = Field(
        None, description='Принадлежит ли площадка агентству', example=False
    )
    impsPlan: Optional[int] = Field(
        None, description='Количество показов по акту', example=100
    )
    impsFact: Optional[int] = Field(
        None, description='Количество показов фактическое', example=100
    )
    startDatePlan: Optional[date] = Field(
        None, description='Дата начала показов по акту', example='2022-12-01'
    )
    startDateFact: Optional[date] = Field(
        None, description='Дата начала показов фактическая', example='2022-12-01'
    )
    endDatePlan: Optional[date] = Field(
        None, description='Дата окончания показов по акту', example='2022-12-31'
    )
    endDateFact: Optional[date] = Field(
        None, description='Дата окончания показов фактическая', example='2022-12-31'
    )
    amount: Optional[float] = Field(
        None,
        description='Стоимость услуг по показу креатива на данной площадке в руб.',
        example=100,
    )
    price: Optional[float] = Field(
        None,
        description='Стоимость единицы оказания услуг на данной площадке в руб.',
        example=10,
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора',
        example='CT7ae_PK9R0hCdAb-NfHH2fN',
    )


class InvoiceSummaryResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(
        None, description='Id акта в ОРД', example='INUFNs1ibfg0erF1PNpTOAyg'
    )
    status: Optional[Status11] = Field(
        None,
        description='Статус акта в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>Created</i> - Черновик (загрузка в ОРД завершена), нужно послать в ЕРИР</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Transferring</i> - Идет передача в ЕРИР, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Registering</i> - Идет регистрация, удаленные креативы и статистика переданы, также передана остальная информация по акту, быстрый контроль ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации в ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>DeletionTransferring</i> - Идет передача в ЕРИР удаленных креативов и строк, после чего перадача шапки акта, разаллокации и статистики</li><li><i>Deleting</i> - Идет передача креативов и статистики для удаления, либо быстрый контроль всего ЕРИР пройден, через сутки ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    amount: Optional[float] = Field(
        None, description='Общая стоимость по акту в руб.', example=100
    )
    initialContractsCount: Optional[int] = Field(
        None, description='Кол-во изначальных договоров в акте', example=12
    )
    initialContractsAmount: Optional[float] = Field(
        None,
        description='Сумма стоимостей услуг по всем изначальным договорам в составе акта в руб.',
        example=1000,
    )
    creativesCount: Optional[int] = Field(
        None, description='Кол-во креативов в акте', example=50
    )
    platformsCount: Optional[int] = Field(
        None, description='Кол-во уникальных площадок в акте', example=500
    )
    impsFactCount: Optional[int] = Field(
        None, description='Общее число фактических показов', example=1500
    )
    impsPlanCount: Optional[int] = Field(
        None, description='Общее число показов по акту', example=1400
    )
    impsAmount: Optional[float] = Field(
        None, description='Общая стоимость показов по акту', example=2000
    )


class InvoicelessStatisticsByPlatforms(BaseModel):
    class Config:
        extra = Extra.forbid

    erid: Optional[str] = Field(
        None,
        description='Маркер креатива',
        example='Pb3MmBtzsrbL19RgOqsipS1ANueaCUzJSdpiY5g',
    )
    platformUrl: Optional[str] = Field(
        None, description='URL площадки', example='https://example.ru'
    )
    platformName: Optional[str] = Field(
        None, description='Наименование площадки', example='test'
    )
    platformType: Optional[PlatformType] = Field(
        None, description='Значение из справочника "Типы площадок"', example='Site'
    )
    platformOwnedByAgency: Optional[bool] = Field(
        None, description='Принадлежит ли площадка агентству', example=False
    )
    impsPlan: Optional[int] = Field(
        None, description='Количество показов по акту', example=100
    )
    impsFact: Optional[int] = Field(
        None, description='Количество показов фактическое', example=100
    )
    startDatePlan: Optional[date] = Field(
        None, description='Дата начала показов по акту', example='2022-12-01'
    )
    startDateFact: Optional[date] = Field(
        None, description='Дата начала показов фактическая', example='2022-12-01'
    )
    endDatePlan: Optional[date] = Field(
        None, description='Дата окончания показов по акту', example='2022-12-31'
    )
    endDateFact: Optional[date] = Field(
        None, description='Дата окончания показов фактическая', example='2022-12-31'
    )
    amount: Optional[float] = Field(
        None,
        description='Стоимость услуг по показу креатива на данной площадке в руб.',
        example=100,
    )
    price: Optional[float] = Field(
        None,
        description='Стоимость единицы оказания услуг на данной площадке в руб.',
        example=10,
    )


class Status13(Enum):
    Creating = 'Creating'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'


class InvoicelessStatisticsResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Id акта в ОРД')
    status: Optional[Status13] = Field(
        None,
        description='Статус периода в ОРД<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (технический статус)</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа, включая ответ по креативам и статистике</li><li><i>Active</i> - Активный, зарегистрирован в ЕРИР</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li></ul>',
    )
    erirValidationError: Optional[ErirValidationError] = None
    year: Optional[int] = Field(None, description='Год периода')
    month: Optional[int] = Field(None, description='Месяц периода')
    amount: Optional[float] = Field(None, description='Общая стоимость по акту в руб.')
    creativesCount: Optional[int] = Field(None, description='Кол-во креативов в акте')
    platformsCount: Optional[int] = Field(
        None, description='Кол-во уникальных площадок в акте'
    )
    impsFactCount: Optional[int] = Field(
        None, description='Общее число фактических показов'
    )
    impsPlanCount: Optional[int] = Field(
        None, description='Общее число показов по акту'
    )


class Status14(Enum):
    Created = 'Created'
    RegistrationRequired = 'RegistrationRequired'
    Registering = 'Registering'
    Active = 'Active'
    RegistrationError = 'RegistrationError'
    Testing = 'Testing'
    DeletionRequired = 'DeletionRequired'
    Deleting = 'Deleting'
    DeletionError = 'DeletionError'
    Deleted = 'Deleted'


class OuterContractResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер договора, без начального символа № и т.п. Допускается null, в таком случае считаем, что договор без номера',
        example='Тест',
    )
    date: Optional[date] = Field(
        None, description='Дата заключения договора', example='2023-04-01'
    )
    amount: Optional[float] = Field(
        None, description='Стоимость услуг по договору в руб.', example=100
    )
    vatIncluded: Optional[bool] = Field(
        None, description='Включен ли НДС в Amount', example=True
    )
    isAgentActingForPublisher: Optional[bool] = Field(
        None,
        description='Направление денежных средств в сторону заказчика',
        example=True,
    )
    type: Optional[Type11] = Field(
        None,
        description='Значение из справочника "Типы договоров"<p>Members:</p><ul><li><i>ServiceAgreement</i> - Договор оказания услуг</li><li><i>MediationContract</i> - Посреднический договор</li><li><i>AdditionalAgreement</i> - Дополнительное соглашение к основному договору</li><li><i>SelfPromotionContract</i> - Самореклама</li><li><i>VirtualFinalContract</i> - Служебный договор, не доступен для создания ни через интерфейсе, ни через WebApi, не передается в ЕРИР</li><li><i>EcidContract</i> - Договор, про который мы знаем только его ecid; не может быть родительским договором, дополнительным соглашением и т.д.; не регистрируется в ЕРИР</li></ul>',
    )
    subjectType: Optional[SubjectType] = Field(
        None, description='Значение из справочника "Сведения о предмете договора"'
    )
    actionType: Optional[ActionType] = Field(
        None,
        description='Значение из справочника "Типы взаимодействия сторон посреднического договора"',
    )
    parentMainContractId: Optional[str] = Field(
        None,
        description='Id основного договора для доп.соглашения',
        example='CT0N4ufC76TEu1xBEIwJ3CaA',
    )
    contractorId: Optional[str] = Field(
        None,
        description='Id контрагента-исполнителя по изначальному договору',
        example='CLhOO5UT6sIk-fIRu-QEsEuQ',
    )
    partnerId: Optional[str] = Field(
        None, description='Id партнера', example='CLhOO5UT6sIk-fIRu-QEsEuQ'
    )
    isRegReport: Optional[bool] = Field(
        None,
        description='Признак того, что исполнитель по договору (Агентство, к которому относится договор) должен регистрировать креативы и предоставлять разаллокацию по ним в актах',
    )
    id: Optional[str] = Field(
        None, description='Id договора в ОРД', example='CT0N4ufC76TEu1xBEIwJ3CaA'
    )
    status: Optional[Status14] = Field(
        None,
        description='Статус договора в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Testing</i> - Тестирование - для тестирования массовой загрузки креативов на продовом контуре</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    cid: Optional[str] = Field(
        None,
        description='Cid расходного договора',
        example='763acd99-687b-46cd-8f40-45eced77413c',
    )
    erirValidationError: Optional[ErirValidationError] = None


class PartialClearInvoiceStatisticsItem(BaseModel):
    class Config:
        extra = Extra.forbid

    erid: Optional[str] = Field(
        None, description='Маркер креатива', example='2SDnjegvUsB'
    )
    platformUrl: Optional[str] = Field(
        None, description='URL площадки', example='https://example.com'
    )
    startDatePlan: Optional[date] = Field(
        None, description='Дата начала показов по акту', example='2024-05-22'
    )
    startDateFact: Optional[date] = Field(
        None, description='Дата начала показов фактическая', example='2024-05-22'
    )
    endDatePlan: Optional[date] = Field(
        None, description='Дата окончания показов по акту', example='2024-05-22'
    )
    endDateFact: Optional[date] = Field(
        None, description='Дата окончания показов фактическая', example='2024-05-22'
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора',
        example='CTRl8rP7sBCU6KfyeCWdYBcw',
    )


class PartialClearInvoiceWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Идентификатор акта')
    initialContracts: Optional[List[str]] = Field(
        None,
        description='Список Id или Cid изначальных договоров из разаллокации для удаления',
    )
    statisticsByPlatforms: Optional[List[PartialClearInvoiceStatisticsItem]] = Field(
        None, description='Список строк статистики для удаления'
    )


class Type14(Enum):
    Site = 'Site'
    Application = 'Application'
    InformationSystem = 'InformationSystem'


class PlatformResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None, description='Наименование площадки', example='Тестовая площадка'
    )
    type: Optional[Type14] = Field(
        None,
        description='Тип площадки<p>Members:</p><ul><li><i>Site</i> - Сайт</li><li><i>Application</i> - Приложение</li><li><i>InformationSystem</i> - Информационная система, не поддерживается начиная с ЕРИР v.5</li></ul>',
    )
    url: Optional[str] = Field(
        None, description='Url площадки', example='https://example.com'
    )
    isOwner: Optional[bool] = Field(
        None, description='Признак принадлежности агентству'
    )
    id: Optional[str] = Field(
        None, description='Идентификатор площадки', example='PLCqwqXBhLMk6eTsIQoUT48A'
    )


class Type15(Enum):
    CPM = 'CPM'
    CPC = 'CPC'
    CPA = 'CPA'
    Other = 'Other'


class SupplementInvoiceWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    invoiceId: Optional[str] = Field(None, description='Id акта в ОРД')
    initialContractsData: Optional[List[InvoiceInitialContractItem]] = Field(
        None,
        description='Данные по изначальным договорам для добавления к акту (массив)',
    )
    statisticsByPlatforms: Optional[List[InvoiceStatisticsByPlatformsItem]] = Field(
        None, description='Статистика по площадкам для добавления к акту (массив)'
    )


class Type16(Enum):
    Geo = 'Geo'
    Sex = 'Sex'
    Age = 'Age'


class TargetAudienceParam(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[Type16] = Field(
        None,
        description='Тип параметра: регион, пол, возраст<p>Members:</p><ul><li><i>Geo</i> - Код региона</li><li><i>Sex</i> - Пол</li><li><i>Age</i> - Возраст</li></ul>',
    )
    values: Optional[List[str]] = Field(
        None,
        description='Коллекция значений\n<ul><li>Для типа "geo":\r\n<ul><li>Максимальная длина: 2</li><li>Длина строки 2, может содержать цифры 0-9</li><li>В элементах массива передаются коды регионов. Если массив пустой, то геотаргетинг направлен на всю Россию</li></ul></li><li>Для типа "sex":\n<ul><li>male - мужчины</li><li>female - женщины</li></ul>\r\nЕсли таргетинг на аудиторию не зависящую от пола, то параметр не передается.\r\n</li><li>Для типа "age":\n<ul><li>"<минимальный возраст>:<максимальный возраст>".</li><li>Например, "25:45" - означает, что реклама таргетируется на аудиторию от 25 до 45 лет.</li></ul>\r\nЕсли таргетинг на любой возраст, то параметр не передается\r\n</li></ul>',
    )


class Severity(Enum):
    Error = 'Error'
    Warning = 'Warning'
    Info = 'Info'


class ValidationFailure(BaseModel):
    class Config:
        extra = Extra.forbid

    propertyName: Optional[str] = None
    errorMessage: Optional[str] = None
    attemptedValue: Optional[Any] = None
    customState: Optional[Any] = None
    severity: Optional[Severity] = None
    errorCode: Optional[str] = None
    formattedMessagePlaceholderValues: Optional[Dict[str, Any]] = None


class BadRequestResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    errorType: Optional[str] = Field(
        None, description='Тип ошибки.', example='Unauthorized'
    )
    traceId: Optional[str] = Field(
        None,
        description='Идентификатор запроса. Значение атрибута TraceId необходимо использовать при взаимодействии с техподдержкой ОРД Медиаскаут. Данное поле содержит в себе идентификатор логов текущего процесса.',
        example='00-982607166a542147b435be3a847ddd71-fc75498eb9f09d48-00',
    )
    errorItems: Optional[List[ValidationFailure]] = Field(
        None, description='Список ошибок.', example=['Unauthorized']
    )


class ClientResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    createMode: Optional[CreateMode] = Field(
        None, description='Тип отношения заказчика к агентству'
    )
    legalForm: Optional[LegalForm] = Field(
        None,
        description='Юридическая форма заказчика<p>Members:</p><ul><li><i>JuridicalPerson</i> - Юрлицо РФ</li><li><i>IndividualEntrepreneur</i> - Индивидуальный предприниматель РФ</li><li><i>PhysicalPerson</i> - Физлицо РФ</li><li><i>InternationalJuridicalPerson</i> - Иностранное юрлицо</li><li><i>InternationalPhysicalPerson</i> - Иностранное физлицо</li></ul>',
    )
    inn: Optional[str] = Field(
        None,
        description='Для РФ-контрагентов - ИНН. Для иностранных физ.и юр.лиц - номер налогоплательщика либо его аналог в стране регистрации',
        example='1234567890',
    )
    name: Optional[str] = Field(
        None, description='Наименование контрагента', example='Наименование контрагента'
    )
    mobilePhone: Optional[str] = Field(
        None, description='Номер мобильного телефона', example='79999999999'
    )
    epayNumber: Optional[str] = Field(
        None, description='Номер электронного средства платежа'
    )
    regNumber: Optional[str] = Field(
        None, description='Регистрационный номер либо его аналог'
    )
    oksmNumber: Optional[str] = Field(
        None, description='Код страны регистрации юр. лица в соответствии с ОКСМ'
    )
    id: Optional[str] = Field(
        None, description='Id контрагента в ОРД', example='CLfFpx6Ee4qkawO6JwEDJqFQ'
    )
    status: Optional[Status] = Field(
        None,
        description='Статус контрагента в ОРД<p>Members:</p><ul><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный (оба этапа ЕРИР-регистрации завершены успешно)</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>Blocked</i> - Заблокирован (применимо только к TopLevelAgency)</li></ul>',
    )
    erirValidationError: Optional[ErirValidationError] = None


class CreateCreativeRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    nativeCustomerId: Optional[str] = Field(
        None,
        description='Id креатива в системе клиента\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupId: Optional[str] = Field(
        None,
        description='Id группы (брони) креативов\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='CG3oAF-jsLEkGx83pCs9-FPQ',
    )
    creativeGroupName: Optional[str] = Field(
        None,
        description='Имя группы (брони) креативов.\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Обязательно при создании новой группы (брони) креативов</p>',
        example='ТестоваяГруппа',
    )
    creativeGroupStartDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-01-01',
    )
    creativeGroupEndDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-30-01',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='CT6WFbMXPGcE2lx5Ffm-npAg',
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='AAADgMygKIOkyGuPfl83W1ow',
    )
    isSelfPromotion: Optional[bool] = Field(
        None,
        description='Является креативом саморекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    type: Optional[Type] = Field(
        None,
        description='Тип рекламной кампании\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>',
    )
    form: Optional[Form] = Field(
        None,
        description='Форма распространения рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>',
    )
    advertiserUrls: Optional[List[str]] = Field(
        None,
        description='Целевые ссылки (массив)\n\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example=['http://test.ru'],
    )
    description: Optional[str] = Field(
        None,
        description='Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style="color: blue">Поле обязательно для заполнения</p>',
        example='Описание креатива 4H67RLFG',
    )
    targetAudienceParams: Optional[List[TargetAudienceParam]] = Field(
        None,
        description='Параметры целевой аудитории рекламы\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    isNative: Optional[bool] = Field(
        None,
        description='Признак нативной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    isSocial: Optional[bool] = Field(
        None,
        description='Признак социальной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    mediaData: Optional[List[CreativeMediaDataItem]] = Field(
        None,
        description='Медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li><li>Banner</li><li>BannerHtml5</li><li>Video</li><li>Audio</li><li>AudioBroadcast</li><li>VideoBroadcast</li></ul><p style="color: blue">Поле условно-обязательно для заполнения</p>',
    )
    textData: Optional[List[CreativeTextDataItem]] = Field(
        None,
        description='Текстовые медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>Text</li><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li></ul><p style="color: blue">Поле условно-обязательно для заполнения</p>',
    )


class CreateInvoiceRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    number: Optional[str] = Field(
        None,
        description='Номер акта. Допускается null, в таком случае считаем, что акт без номера',
        example='Тест',
    )
    date: Optional[date] = Field(None, description='Дата акта', example='2022-12-31')
    contractorRole: Optional[ContractorRole] = Field(
        None,
        description='Роль исполнителя в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Ra',
    )
    clientRole: Optional[ClientRole] = Field(
        None,
        description='Роль заказчика в акте<p>Members:</p><ul><li><i>Rr</i> - Рекламораспространитель</li><li><i>Ors</i> - Оператор рекламной системы</li><li><i>Rd</i> - Рекламодатель</li><li><i>Ra</i> - Рекламное агентство</li></ul>',
        example='Rd',
    )
    amount: Optional[float] = Field(
        None, description='Общая стоимость по акту в руб.', example=100
    )
    startDate: Optional[date] = Field(
        None, description='Дата начала оказания услуг по акту', example='2022-12-01'
    )
    endDate: Optional[date] = Field(
        None,
        description='Дата окончания оказания услуг по акту (включительно)',
        example='2022-12-31',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД',
        example='CT3at_SU7y3ECdCb-AfHV3sA',
    )
    initialContractsData: Optional[List[InvoiceInitialContractItem]] = Field(
        None, description='Данные по изначальным договорам (массив)'
    )
    statisticsByPlatforms: Optional[List[InvoiceStatisticsByPlatformsItem]] = Field(
        None, description='Статистика по площадкам (массив)'
    )


class CreateInvoicelessStatisticsRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    statistics: Optional[List[InvoicelessStatisticsByPlatforms]] = Field(
        None, description='Статистика по площадкам (массив)'
    )


class CreativeGroupResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    creativeGroupId: Optional[str] = Field(
        None,
        description='Id группы креативов\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id конечного договора, к которому привязана группа креативов\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора, к которому относится группа креативов\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
    )
    isSelfPromotion: Optional[bool] = Field(
        None,
        description='Креативы относятся к саморекламе\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    creativeGroupName: Optional[str] = Field(
        None,
        description='Наименование\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    startDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    endDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    type: Optional[Type5] = Field(
        None,
        description='Тип рекламной кампании\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>',
    )
    form: Optional[Form] = Field(
        None,
        description='Форма распространения рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>',
    )
    isSocial: Optional[bool] = Field(
        None,
        description='Признак социальной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    isNative: Optional[bool] = Field(
        None,
        description='Признак нативной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    targetAudienceParams: Optional[List[TargetAudienceParam]] = Field(
        None,
        description='Параметры целевой аудитории\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    description: Optional[str] = Field(
        None,
        description='Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style="color: blue">Поле обязательно для заполнения</p>',
    )


class CreativeResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    nativeCustomerId: Optional[str] = Field(
        None,
        description='Id креатива в системе клиента\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    creativeGroupId: Optional[str] = Field(
        None,
        description='Id группы (брони) креативов\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='CG3oAF-jsLEkGx83pCs9-FPQ',
    )
    creativeGroupName: Optional[str] = Field(
        None,
        description='Имя группы (брони) креативов.\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Обязательно при создании новой группы (брони) креативов</p>',
        example='ТестоваяГруппа',
    )
    creativeGroupStartDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-01-01',
    )
    creativeGroupEndDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example='2023-30-01',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='CT6WFbMXPGcE2lx5Ffm-npAg',
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='AAADgMygKIOkyGuPfl83W1ow',
    )
    isSelfPromotion: Optional[bool] = Field(
        None,
        description='Является креативом саморекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    type: Optional[Type5] = Field(
        None,
        description='Тип рекламной кампании\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>',
    )
    form: Optional[Form] = Field(
        None,
        description='Форма распространения рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>',
    )
    advertiserUrls: Optional[List[str]] = Field(
        None,
        description='Целевые ссылки (массив)\n\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example=['http://test.ru'],
    )
    description: Optional[str] = Field(
        None,
        description='Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style="color: blue">Поле обязательно для заполнения</p>',
        example='Описание креатива 4H67RLFG',
    )
    targetAudienceParams: Optional[List[TargetAudienceParam]] = Field(
        None,
        description='Параметры целевой аудитории рекламы\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    isNative: Optional[bool] = Field(
        None,
        description='Признак нативной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    isSocial: Optional[bool] = Field(
        None,
        description='Признак социальной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    mediaData: Optional[List[CreativeMediaDataItem]] = Field(
        None,
        description='Медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li><li>Banner</li><li>BannerHtml5</li><li>Video</li><li>Audio</li><li>AudioBroadcast</li><li>VideoBroadcast</li></ul><p style="color: blue">Поле условно-обязательно для заполнения</p>',
    )
    textData: Optional[List[CreativeTextDataItem]] = Field(
        None,
        description='Текстовые медиаданные креатива (массив)\n\r\nДолжен быть добавлен хотя бы один элемент при значениях поля form:\r\n<ul><li>Text</li><li>TextGraphic</li><li>TextVideoBlock</li><li>TextAudioBlock</li><li>TextAudioVideoBlock</li><li>TextGraphicVideoBlock</li><li>TextGraphicAudioBlock</li><li>TextGraphicAudioVideoBlock</li></ul><p style="color: blue">Поле условно-обязательно для заполнения</p>',
    )
    id: Optional[str] = Field(None, description='Id креатива в ОРД')
    erid: Optional[str] = Field(
        None,
        description='Маркер креатива для добавления в кликовые ссылки. Формируется в момент регистрации креатива в ЕРИР, в дальнейшем передаётся Агентствам',
    )
    status: Optional[Status1] = Field(
        None,
        description='Статус креатива<p>Members:</p><ul><li><i>Creating</i> - Идет загрузка в ОРД (элемент фида создан, но медиа-данные еще не загружены)</li><li><i>Created</i> - Создан в БД (наша валидация пройдена). Пока не используется, сущность сразу переходит в статус [Ожидает регистрации].</li><li><i>RegistrationRequired</i> - Ожидает регистрации в ЕРИР</li><li><i>Registering</i> - Идет регистрация, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>Active</i> - Активный</li><li><i>RegistrationError</i> - Ошибка регистрации ЕРИР (любого этапа)</li><li><i>DeletionRequired</i> - Ожидает удаления в ЕРИР</li><li><i>Deleting</i> - Идет удаление, быстрый контроль ЕРИР пройден, ждем уточненного ответа</li><li><i>DeletionError</i> - Ошибка удаления в ЕРИР (любого этапа)</li><li><i>Deleted</i> - Удален в ЕРИР</li></ul>',
    )
    erirValidationError: Optional[ErirValidationError] = None


class EditInvoiceStatisticsWebApiDto(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(None, description='Идентификатор акта')
    initialContractsData: Optional[List[InvoiceInitialContractItem]] = Field(
        None, description='Данные по изначальным договорам (массив)'
    )
    statisticsByPlatforms: Optional[List[InvoiceStatisticsByPlatformsItem]] = Field(
        None, description='Статистика по площадкам (массив)'
    )


class SimpleEditCreativeRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Optional[str] = Field(
        None,
        description='Id креатива\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `NativeCustomerId`, `Erid`</p>',
        example='CR5pxRa__aRkSgUqt0JeNkoA',
    )
    nativeCustomerId: Optional[str] = Field(
        None,
        description='Id креатива в системе клиента\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `Erid`</p>',
    )
    erid: Optional[str] = Field(
        None,
        description='Erid креатива\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Не должно заполняться одновременно с полями `Id`, `NativeCustomerId`</p>',
        example='2SDnjcX1BkW',
    )
    startDate: Optional[date] = Field(
        None,
        description='Дата начала рекламной компании\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    endDate: Optional[date] = Field(
        None,
        description='Дата окончания рекламной компании\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    finalContractId: Optional[str] = Field(
        None,
        description='Id доходного договора в ОРД\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='CTRl8rP7sBCU6KfyeCWdYBcw',
    )
    initialContractId: Optional[str] = Field(
        None,
        description='Id или Cid изначального договора. Если креатив создается на доходный договор, то нужно указать InitialContractId = FinalContractId.\r\n<p style="color: blue">Поле условно-обязательно для заполнения. Для креатива саморекламы не должно заполняться</p>',
        example='CTRl8rP7sBCU6KfyeCWdYBcw',
    )
    isSelfPromotion: Optional[bool] = Field(
        None,
        description='Креативы относятся к саморекламе\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    type: Optional[Type15] = Field(
        None,
        description='Тип рекламной кампании\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>CPM</i> - Cost Per Millennium, оплата за тысячу показов</li><li><i>CPC</i> - Cost Per Click, оплата за клик баннера</li><li><i>CPA</i> - Cost Per Action, оплата за совершенное целевое действие</li><li><i>Other</i> - Иное</li></ul>',
    )
    form: Optional[Form] = Field(
        None,
        description='Форма распространения рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p><p>Members:</p><ul><li><i>Banner</i> - Баннер</li><li><i>Text</i> - Текстовый блок</li><li><i>TextGraphic</i> - Текстово-графический блок</li><li><i>Video</i> - Видеоролик</li><li><i>Audio</i> - Аудиозапись</li><li><i>AudioBroadcast</i> - Аудиотрансляции в прямом эфире</li><li><i>VideoBroadcast</i> - Видеотрансляции в прямом эфире</li><li><i>Other</i> - Иное - не поддерживается начиная с ЕРИР v.5</li><li><i>TextVideoBlock</i> - Текстовый блок с видео</li><li><i>TextAudioBlock</i> - Текстовый блок с аудио</li><li><i>TextAudioVideoBlock</i> - Текстовый блок с аудио и видео</li><li><i>TextGraphicVideoBlock</i> - Текстово-графический блок с видео</li><li><i>TextGraphicAudioBlock</i> - Текстово-графический блок с аудио</li><li><i>TextGraphicAudioVideoBlock</i> - Текстово-графический блок с аудио и видео</li><li><i>BannerHtml5</i> - </li></ul>',
    )
    advertiserUrls: Optional[List[str]] = Field(
        None,
        description='Целевые ссылки (массив)\r\nПроверка URL:\r\n<ul><li>Проверить протокол http, https, ftp, sftp</li><li>Проверить хост: в нем не должно содержаться punycode или urlencode</li></ul><p style="color: lightblue">Поле не обязательно для заполнения</p>',
        example=['http://test1.ru', 'http://test2.ru'],
    )
    description: Optional[str] = Field(
        None,
        description='Общее описание объекта рекламирования\r\n<ul><li>Минимальная длина: 1</li><li>Максимальная длина: 1000</li><li>Длина строки от 1 до 1000, может содержать цифры и буквы, а также все спец символы</li><li>В начале и в конце не должно быть пробела и переноса на другую строку</li></ul><p style="color: blue">Поле обязательно для заполнения</p>',
        example='Описание',
    )
    targetAudienceParams: Optional[List[TargetAudienceParam]] = Field(
        None,
        description='Параметры целевой аудитории\r\n<p style="color: lightblue">Поле не обязательно для заполнения</p>',
    )
    isNative: Optional[bool] = Field(
        None,
        description='Признак нативной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    isSocial: Optional[bool] = Field(
        None,
        description='Признак социальной рекламы\r\n<p style="color: blue">Поле обязательно для заполнения</p>',
    )
    mediaData: Optional[List[CreativeMediaDataItem]] = Field(
        None,
        description='Медиаданные креатива (массив)\r\n<p style="color: blue">Поле не обязательно для заполнения</p>',
    )
    textData: Optional[List[CreativeTextDataItem]] = Field(
        None,
        description='Текстовые медиаданные креатива (массив)\r\n<p style="color: blue">Поле не обязательно для заполнения</p>',
    )
