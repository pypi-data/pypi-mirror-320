# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# (C) British Crown Copyright 2017-2020 Met Office.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------

import pytest
import numpy as np

nan = np.nan

@pytest.fixture
def seed():
    return np.asarray(
        [
            [
                13.012449799196787,
                16.016828819353144,
                85.58064516129032,
                26.599290780141843,
                14.620881670533644,
                7.297290930506478,
                22.978243978243977,
                16.929721362229103,
            ],
            [
                133.87927107061503,
                133.13720316622693,
                222.97309417040358,
                10.113749190589251,
                14.572604194319087,
                23.508944870390653,
                7497.428571428572,
                11.398487355235169,
            ],
            [
                19.98438239469948,
                48.66097838452787,
                14.793333333333333,
                23.078239608801955,
                40.04036697247707,
                12.486349625715544,
                8.359946390963048,
                9.415140415140415,
            ],
            [
                20.858936240502146,
                16.07314578005115,
                30.083386378103118,
                10.938779414578152,
                85.81402936378467,
                12.57285368802902,
                12.81214514934584,
                10.742527049330644,
            ],
        ]
    )


@pytest.fixture
def air_pressure():
    return np.asarray(
        [
            [
                [
                    13.012449799196787,
                    16.016828819353144,
                    85.58064516129032,
                    26.599290780141843,
                    14.620881670533644,
                    7.297290930506478,
                    22.978243978243977,
                    16.929721362229103,
                ],
                [
                    133.87927107061503,
                    133.13720316622693,
                    222.97309417040358,
                    10.113749190589251,
                    14.572604194319087,
                    23.508944870390653,
                    7497.428571428572,
                    11.398487355235169,
                ],
                [
                    19.98438239469948,
                    48.66097838452787,
                    14.793333333333333,
                    23.078239608801955,
                    40.04036697247707,
                    12.486349625715544,
                    8.359946390963048,
                    9.415140415140415,
                ],
                [
                    20.858936240502146,
                    16.07314578005115,
                    30.083386378103118,
                    10.938779414578152,
                    85.81402936378467,
                    12.57285368802902,
                    12.81214514934584,
                    10.742527049330644,
                ],
            ],
            [
                [
                    13.012449799196787,
                    16.016828819353144,
                    85.58064516129032,
                    26.599290780141843,
                    14.620881670533644,
                    7.297290930506478,
                    22.978243978243977,
                    16.929721362229103,
                ],
                [
                    133.87927107061503,
                    133.13720316622693,
                    222.97309417040358,
                    10.113749190589251,
                    14.572604194319087,
                    23.508944870390653,
                    7497.428571428572,
                    11.398487355235169,
                ],
                [
                    19.98438239469948,
                    48.66097838452787,
                    14.793333333333333,
                    23.078239608801955,
                    40.04036697247707,
                    12.486349625715544,
                    8.359946390963048,
                    9.415140415140415,
                ],
                [
                    20.858936240502146,
                    16.07314578005115,
                    30.083386378103118,
                    10.938779414578152,
                    85.81402936378467,
                    12.57285368802902,
                    12.81214514934584,
                    10.742527049330644,
                ],
            ],
        ]
    )


@pytest.fixture
def x_wind():
    return np.asarray(
        [
            [
                2.3967886743481226,
                2.191450430317617,
                3.12293299278464,
                -0.3138983383544718,
                -0.12964440758559748,
                0.29994375141220614,
                150.47478140724198,
                -0.07326074143534508,
            ],
            [
                0.055805721570942296,
                0.3181580439444729,
                -0.7394960751753223,
                -0.0338289059351568,
                0.2593056979109924,
                0.05087865089030112,
                -1.0961239335928592,
                -0.07595408204614795,
            ],
            [
                1.1530108398789773,
                1.1900204731416342,
                1.9695703258007853,
                -0.009954041756364981,
                -0.7209214418084913,
                0.1115680521020655,
                76.34978523773009,
                0.0068595112238635375,
            ],
            [
                -0.5897046244050721,
                0.0631557933298056,
                -1.2840703982113815,
                0.2484463343399506,
                -0.5604341987160958,
                -0.05709892672579031,
                -37.97657830568163,
                -0.030030114143972258,
            ],
        ]
    )


@pytest.fixture
def y_wind():
    return np.asarray(
        [
            [
                40502.6945019999,
                -48541.27950626585,
                -7078.669124202871,
                47465.39026021895,
                12911.21771826329,
                -5590.287283423426,
                -6443.187619320943,
                22626.752633728505,
            ],
            [
                1.4257387244583404,
                -1.3797699703956205,
                1.9052282363244994,
                3.2274374124215766,
                -0.2074474761967217,
                -115.88480095664455,
                0.1875511121409709,
                463.5482791916377,
            ],
            [
                1.8568164644263105,
                -0.08039225796496755,
                -0.39619239017365626,
                0.3909934229472751,
                -0.16403350109008558,
                -0.4906254041755242,
                -0.04756291843971372,
                0.11292884289334128,
            ],
            [
                -18975.25734454905,
                6170.287275116599,
                -3434.4069270730183,
                37278.544750404726,
                1093.0415955181793,
                -48831.376451565404,
                -1224.3159212379248,
                -4313.201453323708,
            ],
        ]
    )


@pytest.fixture
def relative_vorticity():
    return np.asarray(
        [
            [
                -3069.841500256377,
                -473.3306308557195,
                955.056646578574,
                198.85570797527808,
                -527.788096317518,
                -192.53405514942364,
                280.69791565483126,
                876.0317097897536,
            ],
            [
                -0.0003623736605947406,
                -0.0020586681923789522,
                0.004785886303304104,
                0.00021864043970743575,
                -0.0016916360886888124,
                -0.0003291757135056701,
                0.007165213063932639,
                0.0006382037311169833,
            ],
            [
                0.007460536355955109,
                0.007700369726273439,
                0.012745162928676314,
                -0.00006440694021799705,
                -0.0046651148260556845,
                0.0007219772228490236,
                0.49406147621858343,
                0.00004438873568074683,
            ],
            [
                845.975449383843,
                154.59751438911755,
                309.45920932315306,
                45.03822299372963,
                -856.6056167877862,
                -23.0526452020598,
                442.8586181960327,
                -565.769249859092,
            ],
        ]
    )


@pytest.fixture
def wind_speed():
    return np.asarray(
        [
            [
                40502.694572916116,
                48541.27955573359,
                7078.669813083071,
                47465.390261256885,
                12911.217718914184,
                5590.287291470083,
                6444.944480568489,
                22626.752633847107,
            ],
            [
                1.426830469600418,
                1.4159765930735242,
                2.0437096363446225,
                3.2276146991199632,
                0.3320751426251237,
                115.8848121256545,
                1.1120535497269894,
                463.54828541431476,
            ],
            [
                2.185680987574136,
                1.1927328458782984,
                2.0090235634025118,
                0.3911201090909469,
                0.7393474925494135,
                0.5031507899946552,
                76.349800052644,
                0.1131369809189695,
            ],
            [
                18975.25735371234,
                6170.287275439813,
                3434.4071671198103,
                37278.54475123262,
                1093.041739193622,
                48831.376451598786,
                1224.904769970497,
                4313.201453428248,
            ],
        ]
    )


@pytest.fixture
def divergence():
    return np.asarray(
        [
            [
                -0.015394035853425928,
                0.007223268780382808,
                -0.02492212922100279,
                -0.032355226857959274,
                0.006106304705195546,
                1.4981504279084692,
                -0.003712493061616879,
                -5.9866454236723925,
            ],
            [
                0.0061922352505204975,
                -0.005292345691720239,
                0.012858904309024543,
                0.01732922387091129,
                -0.0023095728062978715,
                -0.7494707343156177,
                0.0016962824127630526,
                2.9979214873675857,
            ],
            [
                -0.013437061754942952,
                0.0009826325433302259,
                0.0023062024965019574,
                0.0002618680275799012,
                0.0011433685430052138,
                -0.0004654627810776373,
                0.00021603931002539407,
                -0.0011241782829135042,
            ],
            [
                0.03288506531660321,
                -0.006907486484415925,
                0.0018434892153544476,
                0.00719882207754941,
                -0.003039471607243831,
                -0.37221760531549186,
                0.00026930073366728885,
                1.5097066303621216,
            ],
        ]
    )


@pytest.fixture
def relative_humidity():
    return np.asarray(
        [
            [
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                2.7480178824028680e11,
                -0.0000000000000000e00,
            ],
            [
                -0.0000000000000000e00,
                0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                0.0000000000000000e00,
                0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
            ],
            [
                -0.0000000000000000e00,
                0.0000000000000000e00,
                0.0000000000000000e00,
                -0.0000000000000000e00,
                0.0000000000000000e00,
                0.0000000000000000e00,
                -2.7341334097848162e32,
                -0.0000000000000000e00,
            ],
            [
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
                -0.0000000000000000e00,
            ],
        ]
    )


@pytest.fixture
def wet_bulb_potential_temperature():
    return np.asarray(
        [
            [nan, nan, nan, nan, nan, nan, nan, nan],
            [nan, nan, nan, nan, nan, nan, nan, nan],
            [nan, nan, nan, nan, nan, nan, nan, nan],
            [nan, nan, nan, nan, nan, nan, nan, nan],
        ]
    )


@pytest.fixture
def thickness():
    return np.asarray(
        [
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
        ]
    )
