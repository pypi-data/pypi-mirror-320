import{d as A,f as y,W as b,L as w,i as C,c as g,j as a,k as h,u as k,o as v,l as u,m as e,G as P,H as m,C as B,K as E,P as d,Y as I}from"./index-Bjo-kBX5.js";import{_ as K}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-Dfpmxv5f.js";import{u as N}from"./usePageTitle-D7LXNzIC.js";import{u as T}from"./usePrefectApi-BiV7mqJz.js";import"./mapper-Fr2XiNEs.js";import"./api-xofaoTi_.js";const G=A({__name:"AutomationEdit",async setup(U){let o,r;const i=T(),c=y(),_=k(),p=b("automationId"),s=([o,r]=w(()=>i.automations.getAutomation(p.value)),o=await o,r(),o);N(`Edit Automation: ${s.name}`);const f=C(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(m.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=I(t,m.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=h("p-layout-default");return v(),g(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(E),{crumbs:f.value},{actions:a(()=>[u(e(P),{to:e(m).docs.automations},{default:a(()=>t[0]||(t[0]=[B(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(K,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-By8yT0gF.js.map
