{
  "hash": "a03769725496e6d9087b92b2a61f589b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: did.estimation.event_study\n---\n\n\n\n```python\ndid.estimation.event_study(\n    data,\n    yname,\n    idname,\n    tname,\n    gname,\n    xfml=None,\n    estimator='twfe',\n    att=True,\n    cluster='idname',\n)\n```\n\nEstimate Event Study Model.\n\nThis function allows for the estimation of treatment effects using different\nestimators. Currently, it supports \"twfe\" for the two-way fixed effects\nestimator and \"did2s\" for Gardner's two-step DID2S estimator. Other estimators\nare in development.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name      | Type            | Description                                                                                                                                                          | Default    |\n|-----------|-----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|\n| data      | DataFrame       | The DataFrame containing all variables.                                                                                                                              | _required_ |\n| yname     | str             | The name of the dependent variable.                                                                                                                                  | _required_ |\n| idname    | str             | The name of the id variable.                                                                                                                                         | _required_ |\n| tname     | str             | Variable name for calendar period.                                                                                                                                   | _required_ |\n| gname     | str             | Unit-specific time of initial treatment.                                                                                                                             | _required_ |\n| xfml      | str             | The formula for the covariates.                                                                                                                                      | `None`     |\n| estimator | str             | The estimator to use. Options are \"did2s\" and \"twfe\".                                                                                                                | `'twfe'`   |\n| att       | bool            | If True, estimates the average treatment effect on the treated (ATT). If False, estimates the canonical event study design with all leads and lags. Default is True. | `True`     |\n| cluster   | Optional\\[str\\] | The name of the cluster variable.                                                                                                                                    | `'idname'` |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type   | Description                                                  |\n|--------|--------|--------------------------------------------------------------|\n|        | object | A fitted model object of class [Feols(/reference/Feols.qmd). |\n\n## Examples {.doc-section .doc-section-examples}\n\n\n::: {#eda12492 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport pyfixest as pf\n\nurl = \"https://raw.githubusercontent.com/py-econometrics/pyfixest/master/pyfixest/did/data/df_het.csv\"\ndf_het = pd.read_csv(url)\n\nfit_twfe = pf.event_study(\n    df_het,\n    yname=\"dep_var\",\n    idname=\"unit\",\n    tname=\"year\",\n    gname=\"g\",\n    estimator=\"twfe\",\n    att=True,\n)\n\nfit_twfe.tidy()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"FYLSvw\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"FYLSvw\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"FYLSvw\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"XWGlsw\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"XWGlsw\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"XWGlsw\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ATT</th>\n      <td>1.98254</td>\n      <td>0.019093</td>\n      <td>103.83491</td>\n      <td>0.0</td>\n      <td>1.945088</td>\n      <td>2.019993</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "did.estimation.event_study_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}