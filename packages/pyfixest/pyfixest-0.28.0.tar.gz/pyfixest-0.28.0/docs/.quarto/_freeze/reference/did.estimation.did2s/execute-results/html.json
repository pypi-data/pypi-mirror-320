{
  "hash": "419677cd89022478b36691a868ada32a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: did.estimation.did2s\n---\n\n\n\n```python\ndid.estimation.did2s(\n    data,\n    yname,\n    first_stage,\n    second_stage,\n    treatment,\n    cluster,\n    weights=None,\n)\n```\n\nEstimate a Difference-in-Differences model using Gardner's two-step DID2S estimator.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name         | Type         | Description                                          | Default    |\n|--------------|--------------|------------------------------------------------------|------------|\n| data         | pd.DataFrame | The DataFrame containing all variables.              | _required_ |\n| yname        | str          | The name of the dependent variable.                  | _required_ |\n| first_stage  | str          | The formula for the first stage, starting with '~'.  | _required_ |\n| second_stage | str          | The formula for the second stage, starting with '~'. | _required_ |\n| treatment    | str          | The name of the treatment variable.                  | _required_ |\n| cluster      | str          | The name of the cluster variable.                    | _required_ |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type   | Description                                                  |\n|--------|--------|--------------------------------------------------------------|\n|        | object | A fitted model object of class [Feols(/reference/Feols.qmd). |\n\n## Examples {.doc-section .doc-section-examples}\n\n\n::: {#5d2987df .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport pyfixest as pf\n\nurl = \"https://raw.githubusercontent.com/py-econometrics/pyfixest/master/pyfixest/did/data/df_het.csv\"\ndf_het = pd.read_csv(url)\ndf_het.head()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"gWkEXM\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"gWkEXM\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"gWkEXM\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"MjTAkf\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"MjTAkf\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"MjTAkf\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unit</th>\n      <th>state</th>\n      <th>group</th>\n      <th>unit_fe</th>\n      <th>g</th>\n      <th>year</th>\n      <th>year_fe</th>\n      <th>treat</th>\n      <th>rel_year</th>\n      <th>rel_year_binned</th>\n      <th>error</th>\n      <th>te</th>\n      <th>te_dynamic</th>\n      <th>dep_var</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1990</td>\n      <td>0.066159</td>\n      <td>False</td>\n      <td>-20.0</td>\n      <td>-6</td>\n      <td>-0.086466</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.022709</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1991</td>\n      <td>-0.030980</td>\n      <td>False</td>\n      <td>-19.0</td>\n      <td>-6</td>\n      <td>0.766593</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.778628</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1992</td>\n      <td>-0.119607</td>\n      <td>False</td>\n      <td>-18.0</td>\n      <td>-6</td>\n      <td>1.512968</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8.436377</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1993</td>\n      <td>0.126321</td>\n      <td>False</td>\n      <td>-17.0</td>\n      <td>-6</td>\n      <td>0.021870</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.191207</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1994</td>\n      <td>-0.106921</td>\n      <td>False</td>\n      <td>-16.0</td>\n      <td>-6</td>\n      <td>-0.017603</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6.918492</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIn a first step, we estimate a classical event study model:\n\n::: {#3bd1f95b .cell execution_count=2}\n``` {.python .cell-code}\n# estimate the model\nfit = pf.did2s(\n    df_het,\n    yname=\"dep_var\",\n    first_stage=\"~ 0 | unit + year\",\n    second_stage=\"~i(rel_year, ref=-1.0)\",\n    treatment=\"treat\",\n    cluster=\"state\",\n)\n\nfit.tidy().head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(rel_year, contr.treatment(base=-1.0))[T.-inf]</th>\n      <td>1.905043e-09</td>\n      <td>3.134439e-10</td>\n      <td>6.077778</td>\n      <td>4.038252e-07</td>\n      <td>1.271042e-09</td>\n      <td>2.539043e-09</td>\n    </tr>\n    <tr>\n      <th>C(rel_year, contr.treatment(base=-1.0))[T.-20.0]</th>\n      <td>-5.822583e-02</td>\n      <td>3.580900e-02</td>\n      <td>-1.626011</td>\n      <td>1.120020e-01</td>\n      <td>-1.306564e-01</td>\n      <td>1.420471e-02</td>\n    </tr>\n    <tr>\n      <th>C(rel_year, contr.treatment(base=-1.0))[T.-19.0]</th>\n      <td>-6.032229e-03</td>\n      <td>3.034072e-02</td>\n      <td>-0.198816</td>\n      <td>8.434394e-01</td>\n      <td>-6.740213e-02</td>\n      <td>5.533768e-02</td>\n    </tr>\n    <tr>\n      <th>C(rel_year, contr.treatment(base=-1.0))[T.-18.0]</th>\n      <td>-6.152383e-03</td>\n      <td>3.509400e-02</td>\n      <td>-0.175312</td>\n      <td>8.617419e-01</td>\n      <td>-7.713670e-02</td>\n      <td>6.483193e-02</td>\n    </tr>\n    <tr>\n      <th>C(rel_year, contr.treatment(base=-1.0))[T.-17.0]</th>\n      <td>-1.253330e-02</td>\n      <td>2.483369e-02</td>\n      <td>-0.504690</td>\n      <td>6.166168e-01</td>\n      <td>-6.276418e-02</td>\n      <td>3.769757e-02</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWe can also inspect the model visually:\n\n::: {#9fdecec2 .cell execution_count=3}\n``` {.python .cell-code}\nfit.iplot(figsize= [1200, 400], coord_flip=False).show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n   <div id=\"9QIJwG\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   var containerDiv = document.getElementById(\"9QIJwG\");\n   var observer = new ResizeObserver(function(entries) {\n       for (let entry of entries) {\n           var width = containerDiv.clientWidth\n           if (entry.contentBoxSize && width > 0) {\n           \n               // Render plot\n               if (observer) {\n                   observer.disconnect();\n                   observer = null;\n               }\n\n               var plotSpec={\n\"data\":{\n\"Coefficient\":[\"C(rel_year, contr.treatment(base=-1.0))[T.-inf]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-20.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-19.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-18.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-17.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-16.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-15.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-14.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-13.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-12.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-11.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-10.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-9.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-8.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-7.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-6.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-5.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-4.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-3.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.-2.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.0.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.1.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.2.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.3.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.4.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.5.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.6.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.7.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.8.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.9.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.10.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.11.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.12.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.13.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.14.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.15.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.16.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.17.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.18.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.19.0]\",\"C(rel_year, contr.treatment(base=-1.0))[T.20.0]\"],\n\"Estimate\":[1.9050426469299687E-9,-0.05822583126876468,-0.006032228519587948,-0.006152382771768064,-0.012533302740263362,-0.034697610977925765,0.03782826263549059,2.1314605039775243E-4,-0.0011267151685777517,0.026530155471752546,-0.026841657482164858,0.007378444005224325,0.002339776433271778,0.009000054333581248,0.032752268331932434,2.5897134118919786E-4,-0.03932608451658178,0.005630431470304498,0.024642898227010067,0.0011694426542087787,1.3730783530292716,1.602102117875054,1.6657198257074155,1.7874633462008356,1.9149127546209184,2.0592033307222035,2.147498955942693,2.234015617543331,2.3275664958570528,2.3463791353572456,2.5013383633461093,2.5534424511933733,2.604402960718019,2.578508741603023,2.7234333005851803,2.909739180351093,2.8597896096317243,2.908407625120869,2.874142636151205,2.883271704387497,2.911965475198139],\n\"2.5%\":[1.2710424539283373E-9,-0.13065636915511908,-0.06740213375865813,-0.07713670017033801,-0.06276417950066712,-0.0949852216633886,-0.027520271314755124,-0.07353936733744013,-0.05567975287054094,-0.03945975531328235,-0.1083693181405622,-0.039715721397632776,-0.04255921234897926,-0.037883948851218714,-0.017081165645584775,-0.04034486936217694,-0.08682366414946094,-0.0345521440451152,-0.018444696360839057,-0.04958885148889839,1.2931107314041044,1.4999337153182983,1.5741195903500078,1.6852474190042193,1.8369902875896456,1.973731113399489,2.0501524540233778,2.143908514383116,2.242343338932634,2.2609345010137023,2.414650235617447,2.4259298304965125,2.46136921674546,2.4302145275208185,2.5942705684234126,2.7689686813711685,2.7250499014842333,2.7903059940464585,2.71442352710707,2.7356758825451943,2.772479691342805],\n\"97.5%\":[2.5390428399316E-9,0.014204706617589713,0.05533767671948223,0.06483193462680188,0.0376975740201404,0.025589999707537066,0.10317679658573631,0.07396565943823563,0.05342632253338544,0.09252006625678744,0.0546860031762325,0.05447260940808143,0.04723876521552281,0.05588405751838121,0.08258570230944964,0.04086281204455534,0.008171495116297382,0.04581300698572419,0.06773049281485918,0.051927736797315945,1.4530459746544389,1.7042705204318098,1.7573200610648232,1.889679273397452,1.9928352216521912,2.144675548044918,2.2448454578620085,2.324122720703546,2.4127896527814716,2.431823769700789,2.5880264910747717,2.680955071890234,2.7474367046905774,2.726802955685227,2.852596032746948,3.050509679331017,2.9945293177792154,3.026509256195279,3.03386174519534,3.0308675262297995,3.051451259053473],\n\"Model\":[\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\",\"dep_var_hat~i(rel_year,ref=-1.0): 95.0%\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"ggsize\":{\n\"width\":1200.0,\n\"height\":400.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"1\"\n};\n               window.letsPlotCall(function() {\n       \n               var toolbar = null;\n               var plotContainer = containerDiv;               \n               \n                   var options = {\n                       sizing: {\n                           width_mode: \"min\",\n                           height_mode: \"scaled\",\n                           width: width\n                       }\n                   };\n                   var fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer, options);\n                   if (toolbar) {\n                     toolbar.bind(fig);\n                   }\n               });\n               \n               break;\n           }\n       }\n   });\n   \n   observer.observe(containerDiv);\n   \n   // ----------\n   })();\n   \n   </script>\n```\n:::\n:::\n\n\nTo estimate a pooled effect, we need to slightly update the second stage formula:\n\n::: {#b5b4d91f .cell execution_count=4}\n``` {.python .cell-code}\nfit = pf.did2s(\n    df_het,\n    yname=\"dep_var\",\n    first_stage=\"~ 0 | unit + year\",\n    second_stage=\"~i(treat)\",\n    treatment=\"treat\",\n    cluster=\"state\"\n)\nfit.tidy().head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(treat)[T.True]</th>\n      <td>2.230482</td>\n      <td>0.024709</td>\n      <td>90.271437</td>\n      <td>0.0</td>\n      <td>2.180504</td>\n      <td>2.28046</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "did.estimation.did2s_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}