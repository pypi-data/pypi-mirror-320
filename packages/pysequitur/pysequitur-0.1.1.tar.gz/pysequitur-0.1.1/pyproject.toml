[tool.poetry]
name = "pysequitur"
version = "0.1.1"
description = "parsing and manipulation tool for file sequences"
authors = ["arcadeperfect <alexander.harding@gmail.com>"]
readme = "README.md"
packages = [{include = "pysequitur", from = "src"}]
license = "MIT"
repository = "https://github.com/arcadeperfect/pysequitur"
keywords = ["vfx", "file-sequence", "image-sequence", "file-management"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = ">=3.12"





[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^4.1.0"
pyyaml = "^6.0.2"
ruff = "^0.9.1"
mypy = "^1.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pysequitur = "pysequitur.main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=pysequitur --cov-report=xml --cov-report=term-missing"
python_files = "test_*.py"

[tool.ruff]
line-length = 88
target-version = "py312"

# Linting rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"