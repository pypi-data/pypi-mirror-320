[tool.poetry]
name = "process-pilot"
version = "0.3.1"
description = "Process manager for Python"
authors = ["James Armes <jamesleearmes@gmail.com>"]
readme = "README.md"
documentation = "https://process-pilot.readthedocs.io/"
repository = "https://github.com/engineerjames/process-pilot"
keywords = ["process", "management", "monitoring"]

[tool.poetry.scripts]
process-graph = "process_pilot.graph:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pydantic = "^2.10.2"
pyyaml = { version = "!=6.0.0,!=5.4.0,!=5.4.1" }
psutil = "^5.4.0"
pywin32 = {version = "^300", platform = "win32"}
graphviz = "^0.20.3"

[tool.poetry.group.dev.dependencies]
pylint = "^3.3.1"
pytest = "^8.3.3"
ruff = "^0.8.0"
mypy = "^1.13.0"
autopep8 = "^2.3.1"
types-pyyaml = "^6.0.12.20240917"
pytest-mock = "^3.14.0"
types-psutil = "^6.1.0.20241221"
types-pywin32 = {version="^308.0.0.20241221", platform="win32"}

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
myst-parser = "^4.0.0"
sphinxcontrib-mermaid = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# Global options
strict = true                # Enable strict mode for maximum type checking
disallow_untyped_defs = true # Disallow functions and methods without type annotations
warn_unused_ignores = true   # Warn about unused # type: ignore comments
no_implicit_optional = true  # Don't assume that variables can be None unless explicitly annotated

# Module-specific settings
[[tool.mypy.overrides]]
module = "graphviz"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "win32file"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "win32pipe"
ignore_missing_imports = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101", "D101","D102", "D103", "D107", "SLF001", "FBT003", "D100", "PLR2004", "S108"]

[tool.ruff]
line-length = 120
target-version = "py311"
fix = true

[tool.ruff.lint]
ignore = [
    "D212",
    "D203",
    "TD003",
    "TD002",
    "FIX002",
    "D211",
]

select = [
    "ALL", # include all the rules, including new ones
]

[tool.pytest.ini_options]
    log_cli = true 
    log_cli_level = "INFO" 