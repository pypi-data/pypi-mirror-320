"use strict";(self.webpackChunk_jupytergis_jupytergis_qgis=self.webpackChunk_jupytergis_jupytergis_qgis||[]).push([[4],{4:(e,t,r)=>{r.r(t),r.d(t,{default:()=>G});var o,a=r(903),n=r(883),i=r(594),s=r(727),c=r(948),l=r(597),d=r(251),g=r(256),p=r(521),m=r(64);class y{constructor(){this.collaborative=void 0===document.querySelectorAll("[data-jupyter-lite-root]")[0],this._disposed=!1}get name(){throw"Not implemented"}get contentType(){throw"Not implemented"}get fileFormat(){return"base64"}get isDisposed(){return this._disposed}dispose(){this._disposed=!0}preferredLanguage(e){return""}createNew(e){return new n.JupyterGISModel({sharedModel:e.sharedModel,languagePreference:e.languagePreference})}}class u extends y{get name(){return"jupytergis-qgzmodel"}get contentType(){return"QGZ"}}class h extends y{get name(){return"jupytergis-qgsmodel"}get contentType(){return"QGS"}}!function(e){e.exportQgis="jupytergis:export"}(o||(o={}));const G=[{id:"@jupytergis/jupytergis-qgis:qgisplugin",requires:[n.IJupyterGISDocTracker,i.IThemeManager,a.ICollaborativeDrive,n.IJGISExternalCommandRegistryToken,c.ConsolePanel.IContentFactory,s.IEditorServices,d.IRenderMimeRegistry,c.IConsoleTracker],optional:[i.ICommandPalette],autoStart:!0,activate:async(e,t,r,a,s,c,d,y,G,S)=>{const x=await(0,p.requestAPI)("jupytergis_qgis/backend-check",{method:"POST",body:JSON.stringify({})}),{installed:w}=x,f=()=>(w||(0,i.showErrorMessage)("QGIS is not installed","QGIS is required to open QGIS files"),w),I=new m.JupyterGISWidgetFactory({name:"JupyterGIS QGS Factory",modelName:"jupytergis-qgsmodel",fileTypes:["QGS"],defaultFor:["QGS"],tracker:t,commands:e.commands,externalCommandRegistry:s,backendCheck:f,manager:e.serviceManager,contentFactory:c,rendermime:y,mimeTypeService:d.mimeTypeService,consoleTracker:G}),Q=new m.JupyterGISWidgetFactory({name:"JupyterGIS QGZ Factory",modelName:"jupytergis-qgzmodel",fileTypes:["QGZ"],defaultFor:["QGZ"],tracker:t,commands:e.commands,externalCommandRegistry:s,backendCheck:f,manager:e.serviceManager,contentFactory:c,rendermime:y,mimeTypeService:d.mimeTypeService,consoleTracker:G});e.docRegistry.addWidgetFactory(I),e.docRegistry.addWidgetFactory(Q),e.docRegistry.addModelFactory(new h),e.docRegistry.addModelFactory(new u),e.docRegistry.addFileType({name:"QGS",displayName:"QGS",mimeTypes:["application/octet-stream"],extensions:[".qgs",".QGS"],fileFormat:"base64",contentType:"QGS",icon:p.logoMiniIcon}),e.docRegistry.addFileType({name:"QGZ",displayName:"QGZ",mimeTypes:["application/octet-stream"],extensions:[".qgz",".QGZ"],fileFormat:"base64",contentType:"QGZ",icon:p.logoMiniIcon});const T=()=>new n.JupyterGISDoc;a.sharedModelFactory.registerDocumentFactory("QGS",T),a.sharedModelFactory.registerDocumentFactory("QGZ",T);const j=(o,a)=>{a.context.pathChanged.connect((()=>{t.save(a)})),r.themeChanged.connect(((e,t)=>a.context.model.themeChanged.emit(t))),t.add(a),e.shell.activateById("jupytergis::leftControlPanel"),e.shell.activateById("jupytergis::rightControlPanel")};I.widgetCreated.connect(j),Q.widgetCreated.connect(j),w&&(e.commands.addCommand(o.exportQgis,{label:"Export To QGZ",isEnabled:()=>!!t.currentWidget&&t.currentWidget.context.model.sharedModel.editable,execute:async e=>{var r,o;const n=".jGIS",s=".qgz",c=null===(r=t.currentWidget)||void 0===r?void 0:r.context.model.sharedModel;if(!c)return;const d=t.currentWidget.context.localPath;let m=null!==(o=e.filepath)&&void 0!==o?o:null;if(m||(m=(await i.InputDialog.getText({label:"File name",placeholder:l.PathExt.basename(d,n),title:"Export the project to QGZ file"})).value),null===m)return;m?m.endsWith(s)||(m=`${m}${s}`):m=`${l.PathExt.basename(d,n)}${s}`;let y=l.PathExt.dirname(d);y.includes(":")&&(y=y.split(":")[1]);const u=l.PathExt.join(y,m),h={layers:c.layers,sources:c.sources,layerTree:c.layerTree.slice().reverse(),options:c.options};let G=!0;if(await a.get(u,{content:!1}).catch((()=>{G=!1})),G&&!(await(0,i.showDialog)({title:"Export the project to QGZ file",body:`The file ${m} already exists.\nDo you want to overwrite it ?`})).button.accept)return;const S=await(0,p.requestAPI)("jupytergis_qgis/export",{method:"POST",body:JSON.stringify({path:u,virtual_file:h})});if(S.exported){if(S.logs.warnings.length){const e=document.createElement("pre");e.textContent=`${m} has been exported with warnings\n  - ${S.logs.warnings.join("\n  - ")}`;const t=new g.Widget({node:e});await(0,i.showDialog)({title:"Export the project to QGZ file",body:t,buttons:[i.Dialog.okButton()]})}}else(0,i.showErrorMessage)("Export the project to QGZ file",S.logs.errors.length?S.logs.errors.join("\n"):"Unknown error")}}),S&&S.addItem({command:o.exportQgis,category:"JupyterGIS"})),console.log("@jupytergis/jupytergis-qgis:qgisplugin is activated!")}}]}}]);