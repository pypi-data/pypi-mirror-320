name: Create Release

on:
  workflow_run:
    workflows: ["Quality Checks on Main"]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Ensure the quality workflow passed

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: 3.12

      - name: Install the project
        run: |
            pip install -e .
            pip install bumpversion twine

      - name: Run version check
        run: |
            current_version=$(python -c "from insightvault import __version__; print(__version__)")
            latest_tag=$(git describe --tags --abbrev=0 | sed 's/^v//')
            echo "current_version=$current_version" >> $GITHUB_ENV
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV
            if [[ "$current_version" == "$latest_tag" ]]; then
            echo "Version has not been bumped yet"
            exit 1
            fi

      - name: Create new version tag
        run: |
          git tag v${{ env.current_version }}
          git push origin v${{ env.current_version }}

      - name: Build the package and upload to PyPI
        env:
            TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
            TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
            python -m build
            twine upload dist/*

      - name: Install documentation dependencies
        run: |
            pip install -r docs/requirements.txt

      - name: Build HTML
        run: |
          cd docs
          make html

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: docs/build/html/

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: docs/build/html
