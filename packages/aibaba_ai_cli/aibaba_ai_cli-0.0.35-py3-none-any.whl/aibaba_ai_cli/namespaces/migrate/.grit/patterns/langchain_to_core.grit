
language python

// This migration is generated automatically - do not manually edit this file
pattern langchain_migrate_aiagentforce_to_core() {
  find_replace_imports(list=[
    [`langchain._api`, `deprecated`, `aibaba-ai-core._api`, `deprecated`],
    [`langchain._api`, `AI Agents ForceDeprecationWarning`, `aibaba-ai-core._api`, `AI Agents ForceDeprecationWarning`],
    [`langchain._api`, `suppress_aiagentforce_deprecation_warning`, `aibaba-ai-core._api`, `suppress_aiagentforce_deprecation_warning`],
    [`langchain._api`, `surface_aiagentforce_deprecation_warnings`, `aibaba-ai-core._api`, `surface_aiagentforce_deprecation_warnings`],
    [`langchain._api`, `warn_deprecated`, `aibaba-ai-core._api`, `warn_deprecated`],
    [`langchain._api.deprecation`, `AI Agents ForceDeprecationWarning`, `aibaba-ai-core._api`, `AI Agents ForceDeprecationWarning`],
    [`langchain._api.deprecation`, `AI Agents ForcePendingDeprecationWarning`, `aibaba-ai-core._api.deprecation`, `AI Agents ForcePendingDeprecationWarning`],
    [`langchain._api.deprecation`, `deprecated`, `aibaba-ai-core._api`, `deprecated`],
    [`langchain._api.deprecation`, `suppress_aiagentforce_deprecation_warning`, `aibaba-ai-core._api`, `suppress_aiagentforce_deprecation_warning`],
    [`langchain._api.deprecation`, `warn_deprecated`, `aibaba-ai-core._api`, `warn_deprecated`],
    [`langchain._api.deprecation`, `surface_aiagentforce_deprecation_warnings`, `aibaba-ai-core._api`, `surface_aiagentforce_deprecation_warnings`],
    [`langchain._api.path`, `get_relative_path`, `aibaba-ai-core._api`, `get_relative_path`],
    [`langchain._api.path`, `as_import_path`, `aibaba-ai-core._api`, `as_import_path`],
    [`langchain.agents`, `Tool`, `aibaba-ai-core.tools`, `Tool`],
    [`langchain.agents`, `tool`, `aibaba-ai-core.tools`, `tool`],
    [`langchain.agents.tools`, `BaseTool`, `aibaba-ai-core.tools`, `BaseTool`],
    [`langchain.agents.tools`, `tool`, `aibaba-ai-core.tools`, `tool`],
    [`langchain.agents.tools`, `Tool`, `aibaba-ai-core.tools`, `Tool`],
    [`langchain.base_language`, `BaseLanguageModel`, `aibaba-ai-core.language_models`, `BaseLanguageModel`],
    [`langchain.callbacks`, `StdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StdOutCallbackHandler`],
    [`langchain.callbacks`, `StreamingStdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StreamingStdOutCallbackHandler`],
    [`langchain.callbacks`, `AI Agents ForceTracer`, `aibaba-ai-core.tracers`, `AI Agents ForceTracer`],
    [`langchain.callbacks`, `tracing_enabled`, `aibaba-ai-core.tracers.context`, `tracing_enabled`],
    [`langchain.callbacks`, `tracing_v2_enabled`, `aibaba-ai-core.tracers.context`, `tracing_v2_enabled`],
    [`langchain.callbacks`, `collect_runs`, `aibaba-ai-core.tracers.context`, `collect_runs`],
    [`langchain.callbacks.base`, `RetrieverManagerMixin`, `aibaba-ai-core.callbacks`, `RetrieverManagerMixin`],
    [`langchain.callbacks.base`, `LLMManagerMixin`, `aibaba-ai-core.callbacks`, `LLMManagerMixin`],
    [`langchain.callbacks.base`, `ChainManagerMixin`, `aibaba-ai-core.callbacks`, `ChainManagerMixin`],
    [`langchain.callbacks.base`, `ToolManagerMixin`, `aibaba-ai-core.callbacks`, `ToolManagerMixin`],
    [`langchain.callbacks.base`, `CallbackManagerMixin`, `aibaba-ai-core.callbacks`, `CallbackManagerMixin`],
    [`langchain.callbacks.base`, `RunManagerMixin`, `aibaba-ai-core.callbacks`, `RunManagerMixin`],
    [`langchain.callbacks.base`, `BaseCallbackHandler`, `aibaba-ai-core.callbacks`, `BaseCallbackHandler`],
    [`langchain.callbacks.base`, `AsyncCallbackHandler`, `aibaba-ai-core.callbacks`, `AsyncCallbackHandler`],
    [`langchain.callbacks.base`, `BaseCallbackManager`, `aibaba-ai-core.callbacks`, `BaseCallbackManager`],
    [`langchain.callbacks.manager`, `BaseRunManager`, `aibaba-ai-core.callbacks`, `BaseRunManager`],
    [`langchain.callbacks.manager`, `RunManager`, `aibaba-ai-core.callbacks`, `RunManager`],
    [`langchain.callbacks.manager`, `ParentRunManager`, `aibaba-ai-core.callbacks`, `ParentRunManager`],
    [`langchain.callbacks.manager`, `AsyncRunManager`, `aibaba-ai-core.callbacks`, `AsyncRunManager`],
    [`langchain.callbacks.manager`, `AsyncParentRunManager`, `aibaba-ai-core.callbacks`, `AsyncParentRunManager`],
    [`langchain.callbacks.manager`, `CallbackManagerForLLMRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForLLMRun`],
    [`langchain.callbacks.manager`, `AsyncCallbackManagerForLLMRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForLLMRun`],
    [`langchain.callbacks.manager`, `CallbackManagerForChainRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForChainRun`],
    [`langchain.callbacks.manager`, `AsyncCallbackManagerForChainRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForChainRun`],
    [`langchain.callbacks.manager`, `CallbackManagerForToolRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForToolRun`],
    [`langchain.callbacks.manager`, `AsyncCallbackManagerForToolRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForToolRun`],
    [`langchain.callbacks.manager`, `CallbackManagerForRetrieverRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForRetrieverRun`],
    [`langchain.callbacks.manager`, `AsyncCallbackManagerForRetrieverRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForRetrieverRun`],
    [`langchain.callbacks.manager`, `CallbackManager`, `aibaba-ai-core.callbacks`, `CallbackManager`],
    [`langchain.callbacks.manager`, `CallbackManagerForChainGroup`, `aibaba-ai-core.callbacks`, `CallbackManagerForChainGroup`],
    [`langchain.callbacks.manager`, `AsyncCallbackManager`, `aibaba-ai-core.callbacks`, `AsyncCallbackManager`],
    [`langchain.callbacks.manager`, `AsyncCallbackManagerForChainGroup`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForChainGroup`],
    [`langchain.callbacks.manager`, `tracing_enabled`, `aibaba-ai-core.tracers.context`, `tracing_enabled`],
    [`langchain.callbacks.manager`, `tracing_v2_enabled`, `aibaba-ai-core.tracers.context`, `tracing_v2_enabled`],
    [`langchain.callbacks.manager`, `collect_runs`, `aibaba-ai-core.tracers.context`, `collect_runs`],
    [`langchain.callbacks.manager`, `atrace_as_chain_group`, `aibaba-ai-core.callbacks.manager`, `atrace_as_chain_group`],
    [`langchain.callbacks.manager`, `trace_as_chain_group`, `aibaba-ai-core.callbacks.manager`, `trace_as_chain_group`],
    [`langchain.callbacks.manager`, `handle_event`, `aibaba-ai-core.callbacks.manager`, `handle_event`],
    [`langchain.callbacks.manager`, `ahandle_event`, `aibaba-ai-core.callbacks.manager`, `ahandle_event`],
    [`langchain.callbacks.manager`, `env_var_is_set`, `aibaba-ai-core.utils.env`, `env_var_is_set`],
    [`langchain.callbacks.stdout`, `StdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StdOutCallbackHandler`],
    [`langchain.callbacks.streaming_stdout`, `StreamingStdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StreamingStdOutCallbackHandler`],
    [`langchain.callbacks.tracers`, `ConsoleCallbackHandler`, `aibaba-ai-core.tracers`, `ConsoleCallbackHandler`],
    [`langchain.callbacks.tracers`, `FunctionCallbackHandler`, `aibaba-ai-core.tracers.stdout`, `FunctionCallbackHandler`],
    [`langchain.callbacks.tracers`, `AI Agents ForceTracer`, `aibaba-ai-core.tracers`, `AI Agents ForceTracer`],
    [`langchain.callbacks.tracers`, `AI Agents ForceTracerV1`, `aibaba-ai-core.tracers.langchain_v1`, `AI Agents ForceTracerV1`],
    [`langchain.callbacks.tracers.base`, `BaseTracer`, `aibaba-ai-core.tracers`, `BaseTracer`],
    [`langchain.callbacks.tracers.base`, `TracerException`, `aibaba-ai-core.exceptions`, `TracerException`],
    [`langchain.callbacks.tracers.evaluation`, `wait_for_all_evaluators`, `aibaba-ai-core.tracers.evaluation`, `wait_for_all_evaluators`],
    [`langchain.callbacks.tracers.evaluation`, `EvaluatorCallbackHandler`, `aibaba-ai-core.tracers`, `EvaluatorCallbackHandler`],
    [`langchain.callbacks.tracers.langchain`, `AI Agents ForceTracer`, `aibaba-ai-core.tracers`, `AI Agents ForceTracer`],
    [`langchain.callbacks.tracers.langchain`, `wait_for_all_tracers`, `aibaba-ai-core.tracers.langchain`, `wait_for_all_tracers`],
    [`langchain.callbacks.tracers.langchain_v1`, `AI Agents ForceTracerV1`, `aibaba-ai-core.tracers.langchain_v1`, `AI Agents ForceTracerV1`],
    [`langchain.callbacks.tracers.log_stream`, `LogEntry`, `aibaba-ai-core.tracers.log_stream`, `LogEntry`],
    [`langchain.callbacks.tracers.log_stream`, `RunState`, `aibaba-ai-core.tracers.log_stream`, `RunState`],
    [`langchain.callbacks.tracers.log_stream`, `RunLog`, `aibaba-ai-core.tracers`, `RunLog`],
    [`langchain.callbacks.tracers.log_stream`, `RunLogPatch`, `aibaba-ai-core.tracers`, `RunLogPatch`],
    [`langchain.callbacks.tracers.log_stream`, `LogStreamCallbackHandler`, `aibaba-ai-core.tracers`, `LogStreamCallbackHandler`],
    [`langchain.callbacks.tracers.root_listeners`, `RootListenersTracer`, `aibaba-ai-core.tracers.root_listeners`, `RootListenersTracer`],
    [`langchain.callbacks.tracers.run_collector`, `RunCollectorCallbackHandler`, `aibaba-ai-core.tracers.run_collector`, `RunCollectorCallbackHandler`],
    [`langchain.callbacks.tracers.schemas`, `BaseRun`, `aibaba-ai-core.tracers.schemas`, `BaseRun`],
    [`langchain.callbacks.tracers.schemas`, `ChainRun`, `aibaba-ai-core.tracers.schemas`, `ChainRun`],
    [`langchain.callbacks.tracers.schemas`, `LLMRun`, `aibaba-ai-core.tracers.schemas`, `LLMRun`],
    [`langchain.callbacks.tracers.schemas`, `Run`, `aibaba-ai-core.tracers`, `Run`],
    [`langchain.callbacks.tracers.schemas`, `RunTypeEnum`, `aibaba-ai-core.tracers.schemas`, `RunTypeEnum`],
    [`langchain.callbacks.tracers.schemas`, `ToolRun`, `aibaba-ai-core.tracers.schemas`, `ToolRun`],
    [`langchain.callbacks.tracers.schemas`, `TracerSession`, `aibaba-ai-core.tracers.schemas`, `TracerSession`],
    [`langchain.callbacks.tracers.schemas`, `TracerSessionBase`, `aibaba-ai-core.tracers.schemas`, `TracerSessionBase`],
    [`langchain.callbacks.tracers.schemas`, `TracerSessionV1`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1`],
    [`langchain.callbacks.tracers.schemas`, `TracerSessionV1Base`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1Base`],
    [`langchain.callbacks.tracers.schemas`, `TracerSessionV1Create`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1Create`],
    [`langchain.callbacks.tracers.stdout`, `FunctionCallbackHandler`, `aibaba-ai-core.tracers.stdout`, `FunctionCallbackHandler`],
    [`langchain.callbacks.tracers.stdout`, `ConsoleCallbackHandler`, `aibaba-ai-core.tracers`, `ConsoleCallbackHandler`],
    [`langchain.chains.openai_functions`, `convert_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `convert_to_openai_function`],
    [`langchain.chains.openai_functions.base`, `convert_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `convert_to_openai_function`],
    [`langchain.chat_models.base`, `BaseChatModel`, `aibaba-ai-core.language_models`, `BaseChatModel`],
    [`langchain.chat_models.base`, `SimpleChatModel`, `aibaba-ai-core.language_models`, `SimpleChatModel`],
    [`langchain.chat_models.base`, `generate_from_stream`, `aibaba-ai-core.language_models.chat_models`, `generate_from_stream`],
    [`langchain.chat_models.base`, `agenerate_from_stream`, `aibaba-ai-core.language_models.chat_models`, `agenerate_from_stream`],
    [`langchain.docstore.document`, `Document`, `aibaba-ai-core.documents`, `Document`],
    [`langchain.document_loaders`, `Blob`, `aibaba-ai-core.document_loaders`, `Blob`],
    [`langchain.document_loaders`, `BlobLoader`, `aibaba-ai-core.document_loaders`, `BlobLoader`],
    [`langchain.document_loaders.base`, `BaseLoader`, `aibaba-ai-core.document_loaders`, `BaseLoader`],
    [`langchain.document_loaders.base`, `BaseBlobParser`, `aibaba-ai-core.document_loaders`, `BaseBlobParser`],
    [`langchain.document_loaders.blob_loaders`, `BlobLoader`, `aibaba-ai-core.document_loaders`, `BlobLoader`],
    [`langchain.document_loaders.blob_loaders`, `Blob`, `aibaba-ai-core.document_loaders`, `Blob`],
    [`langchain.document_loaders.blob_loaders.schema`, `Blob`, `aibaba-ai-core.document_loaders`, `Blob`],
    [`langchain.document_loaders.blob_loaders.schema`, `BlobLoader`, `aibaba-ai-core.document_loaders`, `BlobLoader`],
    [`langchain.embeddings.base`, `Embeddings`, `aibaba-ai-core.embeddings`, `Embeddings`],
    [`langchain.formatting`, `StrictFormatter`, `aibaba-ai-core.utils`, `StrictFormatter`],
    [`langchain.input`, `get_bolded_text`, `aibaba-ai-core.utils`, `get_bolded_text`],
    [`langchain.input`, `get_color_mapping`, `aibaba-ai-core.utils`, `get_color_mapping`],
    [`langchain.input`, `get_colored_text`, `aibaba-ai-core.utils`, `get_colored_text`],
    [`langchain.input`, `print_text`, `aibaba-ai-core.utils`, `print_text`],
    [`langchain.llms.base`, `BaseLanguageModel`, `aibaba-ai-core.language_models`, `BaseLanguageModel`],
    [`langchain.llms.base`, `BaseLLM`, `aibaba-ai-core.language_models`, `BaseLLM`],
    [`langchain.llms.base`, `LLM`, `aibaba-ai-core.language_models`, `LLM`],
    [`langchain.load`, `dumpd`, `aibaba-ai-core.load`, `dumpd`],
    [`langchain.load`, `dumps`, `aibaba-ai-core.load`, `dumps`],
    [`langchain.load`, `load`, `aibaba-ai-core.load`, `load`],
    [`langchain.load`, `loads`, `aibaba-ai-core.load`, `loads`],
    [`langchain.load.dump`, `default`, `aibaba-ai-core.load.dump`, `default`],
    [`langchain.load.dump`, `dumps`, `aibaba-ai-core.load`, `dumps`],
    [`langchain.load.dump`, `dumpd`, `aibaba-ai-core.load`, `dumpd`],
    [`langchain.load.load`, `Reviver`, `aibaba-ai-core.load.load`, `Reviver`],
    [`langchain.load.load`, `loads`, `aibaba-ai-core.load`, `loads`],
    [`langchain.load.load`, `load`, `aibaba-ai-core.load`, `load`],
    [`langchain.load.serializable`, `BaseSerialized`, `aibaba-ai-core.load.serializable`, `BaseSerialized`],
    [`langchain.load.serializable`, `SerializedConstructor`, `aibaba-ai-core.load.serializable`, `SerializedConstructor`],
    [`langchain.load.serializable`, `SerializedSecret`, `aibaba-ai-core.load.serializable`, `SerializedSecret`],
    [`langchain.load.serializable`, `SerializedNotImplemented`, `aibaba-ai-core.load.serializable`, `SerializedNotImplemented`],
    [`langchain.load.serializable`, `try_neq_default`, `aibaba-ai-core.load.serializable`, `try_neq_default`],
    [`langchain.load.serializable`, `Serializable`, `aibaba-ai-core.load`, `Serializable`],
    [`langchain.load.serializable`, `to_json_not_implemented`, `aibaba-ai-core.load.serializable`, `to_json_not_implemented`],
    [`langchain.output_parsers`, `CommaSeparatedListOutputParser`, `aibaba-ai-core.output_parsers`, `CommaSeparatedListOutputParser`],
    [`langchain.output_parsers`, `ListOutputParser`, `aibaba-ai-core.output_parsers`, `ListOutputParser`],
    [`langchain.output_parsers`, `MarkdownListOutputParser`, `aibaba-ai-core.output_parsers`, `MarkdownListOutputParser`],
    [`langchain.output_parsers`, `NumberedListOutputParser`, `aibaba-ai-core.output_parsers`, `NumberedListOutputParser`],
    [`langchain.output_parsers`, `PydanticOutputParser`, `aibaba-ai-core.output_parsers`, `PydanticOutputParser`],
    [`langchain.output_parsers`, `XMLOutputParser`, `aibaba-ai-core.output_parsers`, `XMLOutputParser`],
    [`langchain.output_parsers`, `JsonOutputToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `JsonOutputToolsParser`],
    [`langchain.output_parsers`, `PydanticToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `PydanticToolsParser`],
    [`langchain.output_parsers`, `JsonOutputKeyToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `JsonOutputKeyToolsParser`],
    [`langchain.output_parsers.json`, `SimpleJsonOutputParser`, `aibaba-ai-core.output_parsers`, `JsonOutputParser`],
    [`langchain.output_parsers.json`, `parse_partial_json`, `aibaba-ai-core.utils.json`, `parse_partial_json`],
    [`langchain.output_parsers.json`, `parse_json_markdown`, `aibaba-ai-core.utils.json`, `parse_json_markdown`],
    [`langchain.output_parsers.json`, `parse_and_check_json_markdown`, `aibaba-ai-core.utils.json`, `parse_and_check_json_markdown`],
    [`langchain.output_parsers.list`, `ListOutputParser`, `aibaba-ai-core.output_parsers`, `ListOutputParser`],
    [`langchain.output_parsers.list`, `CommaSeparatedListOutputParser`, `aibaba-ai-core.output_parsers`, `CommaSeparatedListOutputParser`],
    [`langchain.output_parsers.list`, `NumberedListOutputParser`, `aibaba-ai-core.output_parsers`, `NumberedListOutputParser`],
    [`langchain.output_parsers.list`, `MarkdownListOutputParser`, `aibaba-ai-core.output_parsers`, `MarkdownListOutputParser`],
    [`langchain.output_parsers.openai_functions`, `PydanticOutputFunctionsParser`, `aibaba-ai-core.output_parsers.openai_functions`, `PydanticOutputFunctionsParser`],
    [`langchain.output_parsers.openai_functions`, `PydanticAttrOutputFunctionsParser`, `aibaba-ai-core.output_parsers.openai_functions`, `PydanticAttrOutputFunctionsParser`],
    [`langchain.output_parsers.openai_functions`, `JsonOutputFunctionsParser`, `aibaba-ai-core.output_parsers.openai_functions`, `JsonOutputFunctionsParser`],
    [`langchain.output_parsers.openai_functions`, `JsonKeyOutputFunctionsParser`, `aibaba-ai-core.output_parsers.openai_functions`, `JsonKeyOutputFunctionsParser`],
    [`langchain.output_parsers.openai_tools`, `PydanticToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `PydanticToolsParser`],
    [`langchain.output_parsers.openai_tools`, `JsonOutputToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `JsonOutputToolsParser`],
    [`langchain.output_parsers.openai_tools`, `JsonOutputKeyToolsParser`, `aibaba-ai-core.output_parsers.openai_tools`, `JsonOutputKeyToolsParser`],
    [`langchain.output_parsers.pydantic`, `PydanticOutputParser`, `aibaba-ai-core.output_parsers`, `PydanticOutputParser`],
    [`langchain.output_parsers.xml`, `XMLOutputParser`, `aibaba-ai-core.output_parsers`, `XMLOutputParser`],
    [`langchain.prompts`, `AIMessagePromptTemplate`, `aibaba-ai-core.prompts`, `AIMessagePromptTemplate`],
    [`langchain.prompts`, `BaseChatPromptTemplate`, `aibaba-ai-core.prompts`, `BaseChatPromptTemplate`],
    [`langchain.prompts`, `BasePromptTemplate`, `aibaba-ai-core.prompts`, `BasePromptTemplate`],
    [`langchain.prompts`, `ChatMessagePromptTemplate`, `aibaba-ai-core.prompts`, `ChatMessagePromptTemplate`],
    [`langchain.prompts`, `ChatPromptTemplate`, `aibaba-ai-core.prompts`, `ChatPromptTemplate`],
    [`langchain.prompts`, `FewShotPromptTemplate`, `aibaba-ai-core.prompts`, `FewShotPromptTemplate`],
    [`langchain.prompts`, `FewShotPromptWithTemplates`, `aibaba-ai-core.prompts`, `FewShotPromptWithTemplates`],
    [`langchain.prompts`, `HumanMessagePromptTemplate`, `aibaba-ai-core.prompts`, `HumanMessagePromptTemplate`],
    [`langchain.prompts`, `LengthBasedExampleSelector`, `aibaba-ai-core.example_selectors`, `LengthBasedExampleSelector`],
    [`langchain.prompts`, `MaxMarginalRelevanceExampleSelector`, `aibaba-ai-core.example_selectors`, `MaxMarginalRelevanceExampleSelector`],
    [`langchain.prompts`, `MessagesPlaceholder`, `aibaba-ai-core.prompts`, `MessagesPlaceholder`],
    [`langchain.prompts`, `PipelinePromptTemplate`, `aibaba-ai-core.prompts`, `PipelinePromptTemplate`],
    [`langchain.prompts`, `PromptTemplate`, `aibaba-ai-core.prompts`, `PromptTemplate`],
    [`langchain.prompts`, `SemanticSimilarityExampleSelector`, `aibaba-ai-core.example_selectors`, `SemanticSimilarityExampleSelector`],
    [`langchain.prompts`, `StringPromptTemplate`, `aibaba-ai-core.prompts`, `StringPromptTemplate`],
    [`langchain.prompts`, `SystemMessagePromptTemplate`, `aibaba-ai-core.prompts`, `SystemMessagePromptTemplate`],
    [`langchain.prompts`, `load_prompt`, `aibaba-ai-core.prompts`, `load_prompt`],
    [`langchain.prompts`, `FewShotChatMessagePromptTemplate`, `aibaba-ai-core.prompts`, `FewShotChatMessagePromptTemplate`],
    [`langchain.prompts`, `Prompt`, `aibaba-ai-core.prompts`, `PromptTemplate`],
    [`langchain.prompts.base`, `jinja2_formatter`, `aibaba-ai-core.prompts`, `jinja2_formatter`],
    [`langchain.prompts.base`, `validate_jinja2`, `aibaba-ai-core.prompts`, `validate_jinja2`],
    [`langchain.prompts.base`, `check_valid_template`, `aibaba-ai-core.prompts`, `check_valid_template`],
    [`langchain.prompts.base`, `get_template_variables`, `aibaba-ai-core.prompts`, `get_template_variables`],
    [`langchain.prompts.base`, `StringPromptTemplate`, `aibaba-ai-core.prompts`, `StringPromptTemplate`],
    [`langchain.prompts.base`, `BasePromptTemplate`, `aibaba-ai-core.prompts`, `BasePromptTemplate`],
    [`langchain.prompts.base`, `StringPromptValue`, `aibaba-ai-core.prompt_values`, `StringPromptValue`],
    [`langchain.prompts.base`, `_get_jinja2_variables_from_template`, `aibaba-ai-core.prompts.string`, `_get_jinja2_variables_from_template`],
    [`langchain.prompts.chat`, `BaseMessagePromptTemplate`, `aibaba-ai-core.prompts.chat`, `BaseMessagePromptTemplate`],
    [`langchain.prompts.chat`, `MessagesPlaceholder`, `aibaba-ai-core.prompts`, `MessagesPlaceholder`],
    [`langchain.prompts.chat`, `BaseStringMessagePromptTemplate`, `aibaba-ai-core.prompts.chat`, `BaseStringMessagePromptTemplate`],
    [`langchain.prompts.chat`, `ChatMessagePromptTemplate`, `aibaba-ai-core.prompts`, `ChatMessagePromptTemplate`],
    [`langchain.prompts.chat`, `HumanMessagePromptTemplate`, `aibaba-ai-core.prompts`, `HumanMessagePromptTemplate`],
    [`langchain.prompts.chat`, `AIMessagePromptTemplate`, `aibaba-ai-core.prompts`, `AIMessagePromptTemplate`],
    [`langchain.prompts.chat`, `SystemMessagePromptTemplate`, `aibaba-ai-core.prompts`, `SystemMessagePromptTemplate`],
    [`langchain.prompts.chat`, `BaseChatPromptTemplate`, `aibaba-ai-core.prompts`, `BaseChatPromptTemplate`],
    [`langchain.prompts.chat`, `ChatPromptTemplate`, `aibaba-ai-core.prompts`, `ChatPromptTemplate`],
    [`langchain.prompts.chat`, `ChatPromptValue`, `aibaba-ai-core.prompt_values`, `ChatPromptValue`],
    [`langchain.prompts.chat`, `ChatPromptValueConcrete`, `aibaba-ai-core.prompt_values`, `ChatPromptValueConcrete`],
    [`langchain.prompts.chat`, `_convert_to_message`, `aibaba-ai-core.prompts.chat`, `_convert_to_message`],
    [`langchain.prompts.chat`, `_create_template_from_message_type`, `aibaba-ai-core.prompts.chat`, `_create_template_from_message_type`],
    [`langchain.prompts.example_selector`, `LengthBasedExampleSelector`, `aibaba-ai-core.example_selectors`, `LengthBasedExampleSelector`],
    [`langchain.prompts.example_selector`, `MaxMarginalRelevanceExampleSelector`, `aibaba-ai-core.example_selectors`, `MaxMarginalRelevanceExampleSelector`],
    [`langchain.prompts.example_selector`, `SemanticSimilarityExampleSelector`, `aibaba-ai-core.example_selectors`, `SemanticSimilarityExampleSelector`],
    [`langchain.prompts.example_selector.base`, `BaseExampleSelector`, `aibaba-ai-core.example_selectors`, `BaseExampleSelector`],
    [`langchain.prompts.example_selector.length_based`, `LengthBasedExampleSelector`, `aibaba-ai-core.example_selectors`, `LengthBasedExampleSelector`],
    [`langchain.prompts.example_selector.semantic_similarity`, `sorted_values`, `aibaba-ai-core.example_selectors`, `sorted_values`],
    [`langchain.prompts.example_selector.semantic_similarity`, `SemanticSimilarityExampleSelector`, `aibaba-ai-core.example_selectors`, `SemanticSimilarityExampleSelector`],
    [`langchain.prompts.example_selector.semantic_similarity`, `MaxMarginalRelevanceExampleSelector`, `aibaba-ai-core.example_selectors`, `MaxMarginalRelevanceExampleSelector`],
    [`langchain.prompts.few_shot`, `FewShotPromptTemplate`, `aibaba-ai-core.prompts`, `FewShotPromptTemplate`],
    [`langchain.prompts.few_shot`, `FewShotChatMessagePromptTemplate`, `aibaba-ai-core.prompts`, `FewShotChatMessagePromptTemplate`],
    [`langchain.prompts.few_shot`, `_FewShotPromptTemplateMixin`, `aibaba-ai-core.prompts.few_shot`, `_FewShotPromptTemplateMixin`],
    [`langchain.prompts.few_shot_with_templates`, `FewShotPromptWithTemplates`, `aibaba-ai-core.prompts`, `FewShotPromptWithTemplates`],
    [`langchain.prompts.loading`, `load_prompt_from_config`, `aibaba-ai-core.prompts.loading`, `load_prompt_from_config`],
    [`langchain.prompts.loading`, `load_prompt`, `aibaba-ai-core.prompts`, `load_prompt`],
    [`langchain.prompts.loading`, `try_load_from_hub`, `aibaba-ai-core.utils`, `try_load_from_hub`],
    [`langchain.prompts.loading`, `_load_examples`, `aibaba-ai-core.prompts.loading`, `_load_examples`],
    [`langchain.prompts.loading`, `_load_few_shot_prompt`, `aibaba-ai-core.prompts.loading`, `_load_few_shot_prompt`],
    [`langchain.prompts.loading`, `_load_output_parser`, `aibaba-ai-core.prompts.loading`, `_load_output_parser`],
    [`langchain.prompts.loading`, `_load_prompt`, `aibaba-ai-core.prompts.loading`, `_load_prompt`],
    [`langchain.prompts.loading`, `_load_prompt_from_file`, `aibaba-ai-core.prompts.loading`, `_load_prompt_from_file`],
    [`langchain.prompts.loading`, `_load_template`, `aibaba-ai-core.prompts.loading`, `_load_template`],
    [`langchain.prompts.pipeline`, `PipelinePromptTemplate`, `aibaba-ai-core.prompts`, `PipelinePromptTemplate`],
    [`langchain.prompts.pipeline`, `_get_inputs`, `aibaba-ai-core.prompts.pipeline`, `_get_inputs`],
    [`langchain.prompts.prompt`, `PromptTemplate`, `aibaba-ai-core.prompts`, `PromptTemplate`],
    [`langchain.prompts.prompt`, `Prompt`, `aibaba-ai-core.prompts`, `PromptTemplate`],
    [`langchain.schema`, `BaseCache`, `aibaba-ai-core.caches`, `BaseCache`],
    [`langchain.schema`, `BaseMemory`, `aibaba-ai-core.memory`, `BaseMemory`],
    [`langchain.schema`, `BaseStore`, `aibaba-ai-core.stores`, `BaseStore`],
    [`langchain.schema`, `AgentFinish`, `aibaba-ai-core.agents`, `AgentFinish`],
    [`langchain.schema`, `AgentAction`, `aibaba-ai-core.agents`, `AgentAction`],
    [`langchain.schema`, `Document`, `aibaba-ai-core.documents`, `Document`],
    [`langchain.schema`, `BaseChatMessageHistory`, `aibaba-ai-core.chat_history`, `BaseChatMessageHistory`],
    [`langchain.schema`, `BaseDocumentTransformer`, `aibaba-ai-core.documents`, `BaseDocumentTransformer`],
    [`langchain.schema`, `BaseMessage`, `aibaba-ai-core.messages`, `BaseMessage`],
    [`langchain.schema`, `ChatMessage`, `aibaba-ai-core.messages`, `ChatMessage`],
    [`langchain.schema`, `FunctionMessage`, `aibaba-ai-core.messages`, `FunctionMessage`],
    [`langchain.schema`, `HumanMessage`, `aibaba-ai-core.messages`, `HumanMessage`],
    [`langchain.schema`, `AIMessage`, `aibaba-ai-core.messages`, `AIMessage`],
    [`langchain.schema`, `SystemMessage`, `aibaba-ai-core.messages`, `SystemMessage`],
    [`langchain.schema`, `messages_from_dict`, `aibaba-ai-core.messages`, `messages_from_dict`],
    [`langchain.schema`, `messages_to_dict`, `aibaba-ai-core.messages`, `messages_to_dict`],
    [`langchain.schema`, `message_to_dict`, `aibaba-ai-core.messages`, `message_to_dict`],
    [`langchain.schema`, `_message_to_dict`, `aibaba-ai-core.messages`, `message_to_dict`],
    [`langchain.schema`, `_message_from_dict`, `aibaba-ai-core.messages`, `_message_from_dict`],
    [`langchain.schema`, `get_buffer_string`, `aibaba-ai-core.messages`, `get_buffer_string`],
    [`langchain.schema`, `RunInfo`, `aibaba-ai-core.outputs`, `RunInfo`],
    [`langchain.schema`, `LLMResult`, `aibaba-ai-core.outputs`, `LLMResult`],
    [`langchain.schema`, `ChatResult`, `aibaba-ai-core.outputs`, `ChatResult`],
    [`langchain.schema`, `ChatGeneration`, `aibaba-ai-core.outputs`, `ChatGeneration`],
    [`langchain.schema`, `Generation`, `aibaba-ai-core.outputs`, `Generation`],
    [`langchain.schema`, `PromptValue`, `aibaba-ai-core.prompt_values`, `PromptValue`],
    [`langchain.schema`, `AI Agents ForceException`, `aibaba-ai-core.exceptions`, `AI Agents ForceException`],
    [`langchain.schema`, `BaseRetriever`, `aibaba-ai-core.retrievers`, `BaseRetriever`],
    [`langchain.schema`, `Memory`, `aibaba-ai-core.memory`, `BaseMemory`],
    [`langchain.schema`, `OutputParserException`, `aibaba-ai-core.exceptions`, `OutputParserException`],
    [`langchain.schema`, `StrOutputParser`, `aibaba-ai-core.output_parsers`, `StrOutputParser`],
    [`langchain.schema`, `BaseOutputParser`, `aibaba-ai-core.output_parsers`, `BaseOutputParser`],
    [`langchain.schema`, `BaseLLMOutputParser`, `aibaba-ai-core.output_parsers`, `BaseLLMOutputParser`],
    [`langchain.schema`, `BasePromptTemplate`, `aibaba-ai-core.prompts`, `BasePromptTemplate`],
    [`langchain.schema`, `format_document`, `aibaba-ai-core.prompts`, `format_document`],
    [`langchain.schema.agent`, `AgentAction`, `aibaba-ai-core.agents`, `AgentAction`],
    [`langchain.schema.agent`, `AgentActionMessageLog`, `aibaba-ai-core.agents`, `AgentActionMessageLog`],
    [`langchain.schema.agent`, `AgentFinish`, `aibaba-ai-core.agents`, `AgentFinish`],
    [`langchain.schema.cache`, `BaseCache`, `aibaba-ai-core.caches`, `BaseCache`],
    [`langchain.schema.callbacks.base`, `RetrieverManagerMixin`, `aibaba-ai-core.callbacks`, `RetrieverManagerMixin`],
    [`langchain.schema.callbacks.base`, `LLMManagerMixin`, `aibaba-ai-core.callbacks`, `LLMManagerMixin`],
    [`langchain.schema.callbacks.base`, `ChainManagerMixin`, `aibaba-ai-core.callbacks`, `ChainManagerMixin`],
    [`langchain.schema.callbacks.base`, `ToolManagerMixin`, `aibaba-ai-core.callbacks`, `ToolManagerMixin`],
    [`langchain.schema.callbacks.base`, `CallbackManagerMixin`, `aibaba-ai-core.callbacks`, `CallbackManagerMixin`],
    [`langchain.schema.callbacks.base`, `RunManagerMixin`, `aibaba-ai-core.callbacks`, `RunManagerMixin`],
    [`langchain.schema.callbacks.base`, `BaseCallbackHandler`, `aibaba-ai-core.callbacks`, `BaseCallbackHandler`],
    [`langchain.schema.callbacks.base`, `AsyncCallbackHandler`, `aibaba-ai-core.callbacks`, `AsyncCallbackHandler`],
    [`langchain.schema.callbacks.base`, `BaseCallbackManager`, `aibaba-ai-core.callbacks`, `BaseCallbackManager`],
    [`langchain.schema.callbacks.manager`, `tracing_enabled`, `aibaba-ai-core.tracers.context`, `tracing_enabled`],
    [`langchain.schema.callbacks.manager`, `tracing_v2_enabled`, `aibaba-ai-core.tracers.context`, `tracing_v2_enabled`],
    [`langchain.schema.callbacks.manager`, `collect_runs`, `aibaba-ai-core.tracers.context`, `collect_runs`],
    [`langchain.schema.callbacks.manager`, `trace_as_chain_group`, `aibaba-ai-core.callbacks.manager`, `trace_as_chain_group`],
    [`langchain.schema.callbacks.manager`, `handle_event`, `aibaba-ai-core.callbacks.manager`, `handle_event`],
    [`langchain.schema.callbacks.manager`, `BaseRunManager`, `aibaba-ai-core.callbacks`, `BaseRunManager`],
    [`langchain.schema.callbacks.manager`, `RunManager`, `aibaba-ai-core.callbacks`, `RunManager`],
    [`langchain.schema.callbacks.manager`, `ParentRunManager`, `aibaba-ai-core.callbacks`, `ParentRunManager`],
    [`langchain.schema.callbacks.manager`, `AsyncRunManager`, `aibaba-ai-core.callbacks`, `AsyncRunManager`],
    [`langchain.schema.callbacks.manager`, `AsyncParentRunManager`, `aibaba-ai-core.callbacks`, `AsyncParentRunManager`],
    [`langchain.schema.callbacks.manager`, `CallbackManagerForLLMRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForLLMRun`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManagerForLLMRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForLLMRun`],
    [`langchain.schema.callbacks.manager`, `CallbackManagerForChainRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForChainRun`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManagerForChainRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForChainRun`],
    [`langchain.schema.callbacks.manager`, `CallbackManagerForToolRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForToolRun`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManagerForToolRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForToolRun`],
    [`langchain.schema.callbacks.manager`, `CallbackManagerForRetrieverRun`, `aibaba-ai-core.callbacks`, `CallbackManagerForRetrieverRun`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManagerForRetrieverRun`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForRetrieverRun`],
    [`langchain.schema.callbacks.manager`, `CallbackManager`, `aibaba-ai-core.callbacks`, `CallbackManager`],
    [`langchain.schema.callbacks.manager`, `CallbackManagerForChainGroup`, `aibaba-ai-core.callbacks`, `CallbackManagerForChainGroup`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManager`, `aibaba-ai-core.callbacks`, `AsyncCallbackManager`],
    [`langchain.schema.callbacks.manager`, `AsyncCallbackManagerForChainGroup`, `aibaba-ai-core.callbacks`, `AsyncCallbackManagerForChainGroup`],
    [`langchain.schema.callbacks.manager`, `register_configure_hook`, `aibaba-ai-core.tracers.context`, `register_configure_hook`],
    [`langchain.schema.callbacks.manager`, `env_var_is_set`, `aibaba-ai-core.utils.env`, `env_var_is_set`],
    [`langchain.schema.callbacks.stdout`, `StdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StdOutCallbackHandler`],
    [`langchain.schema.callbacks.streaming_stdout`, `StreamingStdOutCallbackHandler`, `aibaba-ai-core.callbacks`, `StreamingStdOutCallbackHandler`],
    [`langchain.schema.callbacks.tracers.base`, `TracerException`, `aibaba-ai-core.exceptions`, `TracerException`],
    [`langchain.schema.callbacks.tracers.base`, `BaseTracer`, `aibaba-ai-core.tracers`, `BaseTracer`],
    [`langchain.schema.callbacks.tracers.evaluation`, `wait_for_all_evaluators`, `aibaba-ai-core.tracers.evaluation`, `wait_for_all_evaluators`],
    [`langchain.schema.callbacks.tracers.evaluation`, `EvaluatorCallbackHandler`, `aibaba-ai-core.tracers`, `EvaluatorCallbackHandler`],
    [`langchain.schema.callbacks.tracers.langchain`, `log_error_once`, `aibaba-ai-core.tracers.langchain`, `log_error_once`],
    [`langchain.schema.callbacks.tracers.langchain`, `wait_for_all_tracers`, `aibaba-ai-core.tracers.langchain`, `wait_for_all_tracers`],
    [`langchain.schema.callbacks.tracers.langchain`, `get_client`, `aibaba-ai-core.tracers.langchain`, `get_client`],
    [`langchain.schema.callbacks.tracers.langchain`, `AI Agents ForceTracer`, `aibaba-ai-core.tracers`, `AI Agents ForceTracer`],
    [`langchain.schema.callbacks.tracers.langchain_v1`, `get_headers`, `aibaba-ai-core.tracers.langchain_v1`, `get_headers`],
    [`langchain.schema.callbacks.tracers.langchain_v1`, `AI Agents ForceTracerV1`, `aibaba-ai-core.tracers.langchain_v1`, `AI Agents ForceTracerV1`],
    [`langchain.schema.callbacks.tracers.log_stream`, `LogEntry`, `aibaba-ai-core.tracers.log_stream`, `LogEntry`],
    [`langchain.schema.callbacks.tracers.log_stream`, `RunState`, `aibaba-ai-core.tracers.log_stream`, `RunState`],
    [`langchain.schema.callbacks.tracers.log_stream`, `RunLogPatch`, `aibaba-ai-core.tracers`, `RunLogPatch`],
    [`langchain.schema.callbacks.tracers.log_stream`, `RunLog`, `aibaba-ai-core.tracers`, `RunLog`],
    [`langchain.schema.callbacks.tracers.log_stream`, `LogStreamCallbackHandler`, `aibaba-ai-core.tracers`, `LogStreamCallbackHandler`],
    [`langchain.schema.callbacks.tracers.root_listeners`, `RootListenersTracer`, `aibaba-ai-core.tracers.root_listeners`, `RootListenersTracer`],
    [`langchain.schema.callbacks.tracers.run_collector`, `RunCollectorCallbackHandler`, `aibaba-ai-core.tracers.run_collector`, `RunCollectorCallbackHandler`],
    [`langchain.schema.callbacks.tracers.schemas`, `RunTypeEnum`, `aibaba-ai-core.tracers.schemas`, `RunTypeEnum`],
    [`langchain.schema.callbacks.tracers.schemas`, `TracerSessionV1Base`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1Base`],
    [`langchain.schema.callbacks.tracers.schemas`, `TracerSessionV1Create`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1Create`],
    [`langchain.schema.callbacks.tracers.schemas`, `TracerSessionV1`, `aibaba-ai-core.tracers.schemas`, `TracerSessionV1`],
    [`langchain.schema.callbacks.tracers.schemas`, `TracerSessionBase`, `aibaba-ai-core.tracers.schemas`, `TracerSessionBase`],
    [`langchain.schema.callbacks.tracers.schemas`, `TracerSession`, `aibaba-ai-core.tracers.schemas`, `TracerSession`],
    [`langchain.schema.callbacks.tracers.schemas`, `BaseRun`, `aibaba-ai-core.tracers.schemas`, `BaseRun`],
    [`langchain.schema.callbacks.tracers.schemas`, `LLMRun`, `aibaba-ai-core.tracers.schemas`, `LLMRun`],
    [`langchain.schema.callbacks.tracers.schemas`, `ChainRun`, `aibaba-ai-core.tracers.schemas`, `ChainRun`],
    [`langchain.schema.callbacks.tracers.schemas`, `ToolRun`, `aibaba-ai-core.tracers.schemas`, `ToolRun`],
    [`langchain.schema.callbacks.tracers.schemas`, `Run`, `aibaba-ai-core.tracers`, `Run`],
    [`langchain.schema.callbacks.tracers.stdout`, `try_json_stringify`, `aibaba-ai-core.tracers.stdout`, `try_json_stringify`],
    [`langchain.schema.callbacks.tracers.stdout`, `elapsed`, `aibaba-ai-core.tracers.stdout`, `elapsed`],
    [`langchain.schema.callbacks.tracers.stdout`, `FunctionCallbackHandler`, `aibaba-ai-core.tracers.stdout`, `FunctionCallbackHandler`],
    [`langchain.schema.callbacks.tracers.stdout`, `ConsoleCallbackHandler`, `aibaba-ai-core.tracers`, `ConsoleCallbackHandler`],
    [`langchain.schema.chat`, `ChatSession`, `aibaba-ai-core.chat_sessions`, `ChatSession`],
    [`langchain.schema.chat_history`, `BaseChatMessageHistory`, `aibaba-ai-core.chat_history`, `BaseChatMessageHistory`],
    [`langchain.schema.document`, `Document`, `aibaba-ai-core.documents`, `Document`],
    [`langchain.schema.document`, `BaseDocumentTransformer`, `aibaba-ai-core.documents`, `BaseDocumentTransformer`],
    [`langchain.schema.embeddings`, `Embeddings`, `aibaba-ai-core.embeddings`, `Embeddings`],
    [`langchain.schema.exceptions`, `AI Agents ForceException`, `aibaba-ai-core.exceptions`, `AI Agents ForceException`],
    [`langchain.schema.language_model`, `BaseLanguageModel`, `aibaba-ai-core.language_models`, `BaseLanguageModel`],
    [`langchain.schema.language_model`, `_get_token_ids_default_method`, `aibaba-ai-core.language_models.base`, `_get_token_ids_default_method`],
    [`langchain.schema.memory`, `BaseMemory`, `aibaba-ai-core.memory`, `BaseMemory`],
    [`langchain.schema.messages`, `get_buffer_string`, `aibaba-ai-core.messages`, `get_buffer_string`],
    [`langchain.schema.messages`, `BaseMessage`, `aibaba-ai-core.messages`, `BaseMessage`],
    [`langchain.schema.messages`, `merge_content`, `aibaba-ai-core.messages`, `merge_content`],
    [`langchain.schema.messages`, `BaseMessageChunk`, `aibaba-ai-core.messages`, `BaseMessageChunk`],
    [`langchain.schema.messages`, `HumanMessage`, `aibaba-ai-core.messages`, `HumanMessage`],
    [`langchain.schema.messages`, `HumanMessageChunk`, `aibaba-ai-core.messages`, `HumanMessageChunk`],
    [`langchain.schema.messages`, `AIMessage`, `aibaba-ai-core.messages`, `AIMessage`],
    [`langchain.schema.messages`, `AIMessageChunk`, `aibaba-ai-core.messages`, `AIMessageChunk`],
    [`langchain.schema.messages`, `SystemMessage`, `aibaba-ai-core.messages`, `SystemMessage`],
    [`langchain.schema.messages`, `SystemMessageChunk`, `aibaba-ai-core.messages`, `SystemMessageChunk`],
    [`langchain.schema.messages`, `FunctionMessage`, `aibaba-ai-core.messages`, `FunctionMessage`],
    [`langchain.schema.messages`, `FunctionMessageChunk`, `aibaba-ai-core.messages`, `FunctionMessageChunk`],
    [`langchain.schema.messages`, `ToolMessage`, `aibaba-ai-core.messages`, `ToolMessage`],
    [`langchain.schema.messages`, `ToolMessageChunk`, `aibaba-ai-core.messages`, `ToolMessageChunk`],
    [`langchain.schema.messages`, `ChatMessage`, `aibaba-ai-core.messages`, `ChatMessage`],
    [`langchain.schema.messages`, `ChatMessageChunk`, `aibaba-ai-core.messages`, `ChatMessageChunk`],
    [`langchain.schema.messages`, `messages_to_dict`, `aibaba-ai-core.messages`, `messages_to_dict`],
    [`langchain.schema.messages`, `messages_from_dict`, `aibaba-ai-core.messages`, `messages_from_dict`],
    [`langchain.schema.messages`, `_message_to_dict`, `aibaba-ai-core.messages`, `message_to_dict`],
    [`langchain.schema.messages`, `_message_from_dict`, `aibaba-ai-core.messages`, `_message_from_dict`],
    [`langchain.schema.messages`, `message_to_dict`, `aibaba-ai-core.messages`, `message_to_dict`],
    [`langchain.schema.output`, `Generation`, `aibaba-ai-core.outputs`, `Generation`],
    [`langchain.schema.output`, `GenerationChunk`, `aibaba-ai-core.outputs`, `GenerationChunk`],
    [`langchain.schema.output`, `ChatGeneration`, `aibaba-ai-core.outputs`, `ChatGeneration`],
    [`langchain.schema.output`, `ChatGenerationChunk`, `aibaba-ai-core.outputs`, `ChatGenerationChunk`],
    [`langchain.schema.output`, `RunInfo`, `aibaba-ai-core.outputs`, `RunInfo`],
    [`langchain.schema.output`, `ChatResult`, `aibaba-ai-core.outputs`, `ChatResult`],
    [`langchain.schema.output`, `LLMResult`, `aibaba-ai-core.outputs`, `LLMResult`],
    [`langchain.schema.output_parser`, `BaseLLMOutputParser`, `aibaba-ai-core.output_parsers`, `BaseLLMOutputParser`],
    [`langchain.schema.output_parser`, `BaseGenerationOutputParser`, `aibaba-ai-core.output_parsers`, `BaseGenerationOutputParser`],
    [`langchain.schema.output_parser`, `BaseOutputParser`, `aibaba-ai-core.output_parsers`, `BaseOutputParser`],
    [`langchain.schema.output_parser`, `BaseTransformOutputParser`, `aibaba-ai-core.output_parsers`, `BaseTransformOutputParser`],
    [`langchain.schema.output_parser`, `BaseCumulativeTransformOutputParser`, `aibaba-ai-core.output_parsers`, `BaseCumulativeTransformOutputParser`],
    [`langchain.schema.output_parser`, `NoOpOutputParser`, `aibaba-ai-core.output_parsers`, `StrOutputParser`],
    [`langchain.schema.output_parser`, `StrOutputParser`, `aibaba-ai-core.output_parsers`, `StrOutputParser`],
    [`langchain.schema.output_parser`, `OutputParserException`, `aibaba-ai-core.exceptions`, `OutputParserException`],
    [`langchain.schema.prompt`, `PromptValue`, `aibaba-ai-core.prompt_values`, `PromptValue`],
    [`langchain.schema.prompt_template`, `BasePromptTemplate`, `aibaba-ai-core.prompts`, `BasePromptTemplate`],
    [`langchain.schema.prompt_template`, `format_document`, `aibaba-ai-core.prompts`, `format_document`],
    [`langchain.schema.retriever`, `BaseRetriever`, `aibaba-ai-core.retrievers`, `BaseRetriever`],
    [`langchain.schema.runnable`, `ConfigurableField`, `aibaba-ai-core.runnables`, `ConfigurableField`],
    [`langchain.schema.runnable`, `ConfigurableFieldSingleOption`, `aibaba-ai-core.runnables`, `ConfigurableFieldSingleOption`],
    [`langchain.schema.runnable`, `ConfigurableFieldMultiOption`, `aibaba-ai-core.runnables`, `ConfigurableFieldMultiOption`],
    [`langchain.schema.runnable`, `patch_config`, `aibaba-ai-core.runnables`, `patch_config`],
    [`langchain.schema.runnable`, `RouterInput`, `aibaba-ai-core.runnables`, `RouterInput`],
    [`langchain.schema.runnable`, `RouterRunnable`, `aibaba-ai-core.runnables`, `RouterRunnable`],
    [`langchain.schema.runnable`, `Runnable`, `aibaba-ai-core.runnables`, `Runnable`],
    [`langchain.schema.runnable`, `RunnableSerializable`, `aibaba-ai-core.runnables`, `RunnableSerializable`],
    [`langchain.schema.runnable`, `RunnableBinding`, `aibaba-ai-core.runnables`, `RunnableBinding`],
    [`langchain.schema.runnable`, `RunnableBranch`, `aibaba-ai-core.runnables`, `RunnableBranch`],
    [`langchain.schema.runnable`, `RunnableConfig`, `aibaba-ai-core.runnables`, `RunnableConfig`],
    [`langchain.schema.runnable`, `RunnableGenerator`, `aibaba-ai-core.runnables`, `RunnableGenerator`],
    [`langchain.schema.runnable`, `RunnableLambda`, `aibaba-ai-core.runnables`, `RunnableLambda`],
    [`langchain.schema.runnable`, `RunnableMap`, `aibaba-ai-core.runnables`, `RunnableMap`],
    [`langchain.schema.runnable`, `RunnableParallel`, `aibaba-ai-core.runnables`, `RunnableParallel`],
    [`langchain.schema.runnable`, `RunnablePassthrough`, `aibaba-ai-core.runnables`, `RunnablePassthrough`],
    [`langchain.schema.runnable`, `RunnableSequence`, `aibaba-ai-core.runnables`, `RunnableSequence`],
    [`langchain.schema.runnable`, `RunnableWithFallbacks`, `aibaba-ai-core.runnables`, `RunnableWithFallbacks`],
    [`langchain.schema.runnable.base`, `Runnable`, `aibaba-ai-core.runnables`, `Runnable`],
    [`langchain.schema.runnable.base`, `RunnableSerializable`, `aibaba-ai-core.runnables`, `RunnableSerializable`],
    [`langchain.schema.runnable.base`, `RunnableSequence`, `aibaba-ai-core.runnables`, `RunnableSequence`],
    [`langchain.schema.runnable.base`, `RunnableParallel`, `aibaba-ai-core.runnables`, `RunnableParallel`],
    [`langchain.schema.runnable.base`, `RunnableGenerator`, `aibaba-ai-core.runnables`, `RunnableGenerator`],
    [`langchain.schema.runnable.base`, `RunnableLambda`, `aibaba-ai-core.runnables`, `RunnableLambda`],
    [`langchain.schema.runnable.base`, `RunnableEachBase`, `aibaba-ai-core.runnables.base`, `RunnableEachBase`],
    [`langchain.schema.runnable.base`, `RunnableEach`, `aibaba-ai-core.runnables.base`, `RunnableEach`],
    [`langchain.schema.runnable.base`, `RunnableBindingBase`, `aibaba-ai-core.runnables.base`, `RunnableBindingBase`],
    [`langchain.schema.runnable.base`, `RunnableBinding`, `aibaba-ai-core.runnables`, `RunnableBinding`],
    [`langchain.schema.runnable.base`, `RunnableMap`, `aibaba-ai-core.runnables`, `RunnableMap`],
    [`langchain.schema.runnable.base`, `coerce_to_runnable`, `aibaba-ai-core.runnables.base`, `coerce_to_runnable`],
    [`langchain.schema.runnable.branch`, `RunnableBranch`, `aibaba-ai-core.runnables`, `RunnableBranch`],
    [`langchain.schema.runnable.config`, `EmptyDict`, `aibaba-ai-core.runnables.config`, `EmptyDict`],
    [`langchain.schema.runnable.config`, `RunnableConfig`, `aibaba-ai-core.runnables`, `RunnableConfig`],
    [`langchain.schema.runnable.config`, `ensure_config`, `aibaba-ai-core.runnables`, `ensure_config`],
    [`langchain.schema.runnable.config`, `get_config_list`, `aibaba-ai-core.runnables`, `get_config_list`],
    [`langchain.schema.runnable.config`, `patch_config`, `aibaba-ai-core.runnables`, `patch_config`],
    [`langchain.schema.runnable.config`, `merge_configs`, `aibaba-ai-core.runnables.config`, `merge_configs`],
    [`langchain.schema.runnable.config`, `acall_func_with_variable_args`, `aibaba-ai-core.runnables.config`, `acall_func_with_variable_args`],
    [`langchain.schema.runnable.config`, `call_func_with_variable_args`, `aibaba-ai-core.runnables.config`, `call_func_with_variable_args`],
    [`langchain.schema.runnable.config`, `get_callback_manager_for_config`, `aibaba-ai-core.runnables.config`, `get_callback_manager_for_config`],
    [`langchain.schema.runnable.config`, `get_async_callback_manager_for_config`, `aibaba-ai-core.runnables.config`, `get_async_callback_manager_for_config`],
    [`langchain.schema.runnable.config`, `get_executor_for_config`, `aibaba-ai-core.runnables.config`, `get_executor_for_config`],
    [`langchain.schema.runnable.configurable`, `DynamicRunnable`, `aibaba-ai-core.runnables.configurable`, `DynamicRunnable`],
    [`langchain.schema.runnable.configurable`, `RunnableConfigurableFields`, `aibaba-ai-core.runnables.configurable`, `RunnableConfigurableFields`],
    [`langchain.schema.runnable.configurable`, `StrEnum`, `aibaba-ai-core.runnables.configurable`, `StrEnum`],
    [`langchain.schema.runnable.configurable`, `RunnableConfigurableAlternatives`, `aibaba-ai-core.runnables.configurable`, `RunnableConfigurableAlternatives`],
    [`langchain.schema.runnable.configurable`, `make_options_spec`, `aibaba-ai-core.runnables.configurable`, `make_options_spec`],
    [`langchain.schema.runnable.fallbacks`, `RunnableWithFallbacks`, `aibaba-ai-core.runnables`, `RunnableWithFallbacks`],
    [`langchain.schema.runnable.history`, `RunnableWithMessageHistory`, `aibaba-ai-core.runnables.history`, `RunnableWithMessageHistory`],
    [`langchain.schema.runnable.passthrough`, `aidentity`, `aibaba-ai-core.runnables.passthrough`, `aidentity`],
    [`langchain.schema.runnable.passthrough`, `identity`, `aibaba-ai-core.runnables.passthrough`, `identity`],
    [`langchain.schema.runnable.passthrough`, `RunnablePassthrough`, `aibaba-ai-core.runnables`, `RunnablePassthrough`],
    [`langchain.schema.runnable.passthrough`, `RunnableAssign`, `aibaba-ai-core.runnables`, `RunnableAssign`],
    [`langchain.schema.runnable.retry`, `RunnableRetry`, `aibaba-ai-core.runnables.retry`, `RunnableRetry`],
    [`langchain.schema.runnable.router`, `RouterInput`, `aibaba-ai-core.runnables`, `RouterInput`],
    [`langchain.schema.runnable.router`, `RouterRunnable`, `aibaba-ai-core.runnables`, `RouterRunnable`],
    [`langchain.schema.runnable.utils`, `accepts_run_manager`, `aibaba-ai-core.runnables.utils`, `accepts_run_manager`],
    [`langchain.schema.runnable.utils`, `accepts_config`, `aibaba-ai-core.runnables.utils`, `accepts_config`],
    [`langchain.schema.runnable.utils`, `IsLocalDict`, `aibaba-ai-core.runnables.utils`, `IsLocalDict`],
    [`langchain.schema.runnable.utils`, `IsFunctionArgDict`, `aibaba-ai-core.runnables.utils`, `IsFunctionArgDict`],
    [`langchain.schema.runnable.utils`, `GetLambdaSource`, `aibaba-ai-core.runnables.utils`, `GetLambdaSource`],
    [`langchain.schema.runnable.utils`, `get_function_first_arg_dict_keys`, `aibaba-ai-core.runnables.utils`, `get_function_first_arg_dict_keys`],
    [`langchain.schema.runnable.utils`, `get_lambda_source`, `aibaba-ai-core.runnables.utils`, `get_lambda_source`],
    [`langchain.schema.runnable.utils`, `indent_lines_after_first`, `aibaba-ai-core.runnables.utils`, `indent_lines_after_first`],
    [`langchain.schema.runnable.utils`, `AddableDict`, `aibaba-ai-core.runnables`, `AddableDict`],
    [`langchain.schema.runnable.utils`, `SupportsAdd`, `aibaba-ai-core.runnables.utils`, `SupportsAdd`],
    [`langchain.schema.runnable.utils`, `add`, `aibaba-ai-core.runnables`, `add`],
    [`langchain.schema.runnable.utils`, `ConfigurableField`, `aibaba-ai-core.runnables`, `ConfigurableField`],
    [`langchain.schema.runnable.utils`, `ConfigurableFieldSingleOption`, `aibaba-ai-core.runnables`, `ConfigurableFieldSingleOption`],
    [`langchain.schema.runnable.utils`, `ConfigurableFieldMultiOption`, `aibaba-ai-core.runnables`, `ConfigurableFieldMultiOption`],
    [`langchain.schema.runnable.utils`, `ConfigurableFieldSpec`, `aibaba-ai-core.runnables`, `ConfigurableFieldSpec`],
    [`langchain.schema.runnable.utils`, `get_unique_config_specs`, `aibaba-ai-core.runnables.utils`, `get_unique_config_specs`],
    [`langchain.schema.runnable.utils`, `aadd`, `aibaba-ai-core.runnables`, `aadd`],
    [`langchain.schema.runnable.utils`, `gated_coro`, `aibaba-ai-core.runnables.utils`, `gated_coro`],
    [`langchain.schema.runnable.utils`, `gather_with_concurrency`, `aibaba-ai-core.runnables.utils`, `gather_with_concurrency`],
    [`langchain.schema.storage`, `BaseStore`, `aibaba-ai-core.stores`, `BaseStore`],
    [`langchain.schema.vectorstore`, `VectorStore`, `aibaba-ai-core.vectorstores`, `VectorStore`],
    [`langchain.schema.vectorstore`, `VectorStoreRetriever`, `aibaba-ai-core.vectorstores`, `VectorStoreRetriever`],
    [`langchain.tools`, `BaseTool`, `aibaba-ai-core.tools`, `BaseTool`],
    [`langchain.tools`, `StructuredTool`, `aibaba-ai-core.tools`, `StructuredTool`],
    [`langchain.tools`, `Tool`, `aibaba-ai-core.tools`, `Tool`],
    [`langchain.tools`, `format_tool_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `format_tool_to_openai_function`],
    [`langchain.tools`, `tool`, `aibaba-ai-core.tools`, `tool`],
    [`langchain.tools.base`, `SchemaAnnotationError`, `aibaba-ai-core.tools`, `SchemaAnnotationError`],
    [`langchain.tools.base`, `create_schema_from_function`, `aibaba-ai-core.tools`, `create_schema_from_function`],
    [`langchain.tools.base`, `ToolException`, `aibaba-ai-core.tools`, `ToolException`],
    [`langchain.tools.base`, `BaseTool`, `aibaba-ai-core.tools`, `BaseTool`],
    [`langchain.tools.base`, `Tool`, `aibaba-ai-core.tools`, `Tool`],
    [`langchain.tools.base`, `StructuredTool`, `aibaba-ai-core.tools`, `StructuredTool`],
    [`langchain.tools.base`, `tool`, `aibaba-ai-core.tools`, `tool`],
    [`langchain.tools.convert_to_openai`, `format_tool_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `format_tool_to_openai_function`],
    [`langchain.tools.render`, `format_tool_to_openai_tool`, `aibaba-ai-core.utils.function_calling`, `format_tool_to_openai_tool`],
    [`langchain.tools.render`, `format_tool_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `format_tool_to_openai_function`],
    [`langchain.utilities.loading`, `try_load_from_hub`, `aibaba-ai-core.utils`, `try_load_from_hub`],
    [`langchain.utils`, `StrictFormatter`, `aibaba-ai-core.utils`, `StrictFormatter`],
    [`langchain.utils`, `check_package_version`, `aibaba-ai-core.utils`, `check_package_version`],
    [`langchain.utils`, `comma_list`, `aibaba-ai-core.utils`, `comma_list`],
    [`langchain.utils`, `convert_to_secret_str`, `aibaba-ai-core.utils`, `convert_to_secret_str`],
    [`langchain.utils`, `get_bolded_text`, `aibaba-ai-core.utils`, `get_bolded_text`],
    [`langchain.utils`, `get_color_mapping`, `aibaba-ai-core.utils`, `get_color_mapping`],
    [`langchain.utils`, `get_colored_text`, `aibaba-ai-core.utils`, `get_colored_text`],
    [`langchain.utils`, `get_from_dict_or_env`, `aibaba-ai-core.utils`, `get_from_dict_or_env`],
    [`langchain.utils`, `get_from_env`, `aibaba-ai-core.utils`, `get_from_env`],
    [`langchain.utils`, `get_pydantic_field_names`, `aibaba-ai-core.utils`, `get_pydantic_field_names`],
    [`langchain.utils`, `guard_import`, `aibaba-ai-core.utils`, `guard_import`],
    [`langchain.utils`, `mock_now`, `aibaba-ai-core.utils`, `mock_now`],
    [`langchain.utils`, `print_text`, `aibaba-ai-core.utils`, `print_text`],
    [`langchain.utils`, `raise_for_status_with_text`, `aibaba-ai-core.utils`, `raise_for_status_with_text`],
    [`langchain.utils`, `stringify_dict`, `aibaba-ai-core.utils`, `stringify_dict`],
    [`langchain.utils`, `stringify_value`, `aibaba-ai-core.utils`, `stringify_value`],
    [`langchain.utils`, `xor_args`, `aibaba-ai-core.utils`, `xor_args`],
    [`langchain.utils.aiter`, `py_anext`, `aibaba-ai-core.utils.aiter`, `py_anext`],
    [`langchain.utils.aiter`, `NoLock`, `aibaba-ai-core.utils.aiter`, `NoLock`],
    [`langchain.utils.aiter`, `Tee`, `aibaba-ai-core.utils.aiter`, `Tee`],
    [`langchain.utils.env`, `get_from_dict_or_env`, `aibaba-ai-core.utils`, `get_from_dict_or_env`],
    [`langchain.utils.env`, `get_from_env`, `aibaba-ai-core.utils`, `get_from_env`],
    [`langchain.utils.formatting`, `StrictFormatter`, `aibaba-ai-core.utils`, `StrictFormatter`],
    [`langchain.utils.html`, `find_all_links`, `aibaba-ai-core.utils.html`, `find_all_links`],
    [`langchain.utils.html`, `extract_sub_links`, `aibaba-ai-core.utils.html`, `extract_sub_links`],
    [`langchain.utils.input`, `get_color_mapping`, `aibaba-ai-core.utils`, `get_color_mapping`],
    [`langchain.utils.input`, `get_colored_text`, `aibaba-ai-core.utils`, `get_colored_text`],
    [`langchain.utils.input`, `get_bolded_text`, `aibaba-ai-core.utils`, `get_bolded_text`],
    [`langchain.utils.input`, `print_text`, `aibaba-ai-core.utils`, `print_text`],
    [`langchain.utils.iter`, `NoLock`, `aibaba-ai-core.utils.iter`, `NoLock`],
    [`langchain.utils.iter`, `tee_peer`, `aibaba-ai-core.utils.iter`, `tee_peer`],
    [`langchain.utils.iter`, `Tee`, `aibaba-ai-core.utils.iter`, `Tee`],
    [`langchain.utils.iter`, `batch_iterate`, `aibaba-ai-core.utils.iter`, `batch_iterate`],
    [`langchain.utils.json_schema`, `_retrieve_ref`, `aibaba-ai-core.utils.json_schema`, `_retrieve_ref`],
    [`langchain.utils.json_schema`, `_dereference_refs_helper`, `aibaba-ai-core.utils.json_schema`, `_dereference_refs_helper`],
    [`langchain.utils.json_schema`, `_infer_skip_keys`, `aibaba-ai-core.utils.json_schema`, `_infer_skip_keys`],
    [`langchain.utils.json_schema`, `dereference_refs`, `aibaba-ai-core.utils.json_schema`, `dereference_refs`],
    [`langchain.utils.loading`, `try_load_from_hub`, `aibaba-ai-core.utils`, `try_load_from_hub`],
    [`langchain.utils.openai_functions`, `FunctionDescription`, `aibaba-ai-core.utils.function_calling`, `FunctionDescription`],
    [`langchain.utils.openai_functions`, `ToolDescription`, `aibaba-ai-core.utils.function_calling`, `ToolDescription`],
    [`langchain.utils.openai_functions`, `convert_pydantic_to_openai_function`, `aibaba-ai-core.utils.function_calling`, `convert_pydantic_to_openai_function`],
    [`langchain.utils.openai_functions`, `convert_pydantic_to_openai_tool`, `aibaba-ai-core.utils.function_calling`, `convert_pydantic_to_openai_tool`],
    [`langchain.utils.pydantic`, `get_pydantic_major_version`, `aibaba-ai-core.utils.pydantic`, `get_pydantic_major_version`],
    [`langchain.utils.strings`, `stringify_value`, `aibaba-ai-core.utils`, `stringify_value`],
    [`langchain.utils.strings`, `stringify_dict`, `aibaba-ai-core.utils`, `stringify_dict`],
    [`langchain.utils.strings`, `comma_list`, `aibaba-ai-core.utils`, `comma_list`],
    [`langchain.utils.utils`, `xor_args`, `aibaba-ai-core.utils`, `xor_args`],
    [`langchain.utils.utils`, `raise_for_status_with_text`, `aibaba-ai-core.utils`, `raise_for_status_with_text`],
    [`langchain.utils.utils`, `mock_now`, `aibaba-ai-core.utils`, `mock_now`],
    [`langchain.utils.utils`, `guard_import`, `aibaba-ai-core.utils`, `guard_import`],
    [`langchain.utils.utils`, `check_package_version`, `aibaba-ai-core.utils`, `check_package_version`],
    [`langchain.utils.utils`, `get_pydantic_field_names`, `aibaba-ai-core.utils`, `get_pydantic_field_names`],
    [`langchain.utils.utils`, `build_extra_kwargs`, `aibaba-ai-core.utils`, `build_extra_kwargs`],
    [`langchain.utils.utils`, `convert_to_secret_str`, `aibaba-ai-core.utils`, `convert_to_secret_str`],
    [`langchain.vectorstores`, `VectorStore`, `aibaba-ai-core.vectorstores`, `VectorStore`],
    [`langchain.vectorstores.base`, `VectorStore`, `aibaba-ai-core.vectorstores`, `VectorStore`],
    [`langchain.vectorstores.base`, `VectorStoreRetriever`, `aibaba-ai-core.vectorstores`, `VectorStoreRetriever`],
    [`langchain.vectorstores.singlestoredb`, `SingleStoreDBRetriever`, `aibaba-ai-core.vectorstores`, `VectorStoreRetriever`]
  ])
}

// Add this for invoking directly
langchain_migrate_aiagentforce_to_core()
