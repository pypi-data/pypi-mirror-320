[project]
name = "uvmono"
version = "0.3.8"
description = "Add your description here"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Jens Peder Meldgaard", email = "JensPederM@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "fire>=0.7.0",
    "jinja2",
    "mergedeep>=1.3.4",
    "pre-commit>=4.0.1",
    "rich>=13.9.4",
    "tomli-w>=1.1.0",
]

[project.scripts]
uvmono = "uvmono:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = ["packages", ".docker", ".github", ".devcontainer"]

[tool.uv.workspace]
members = [
    "packages/package-a",
    "packages/package-b",
    "packages/package-c",
    "packages/package-d",
    "develop-eggs",
]

[dependency-groups]
dev = [
    "commitizen>=4.1.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.1",
]

[tool.pytest.ini_options]
addopts = """
--cov-report=term \
--cov-report=xml:coverage.xml \
--cov=uvmono \
-ra
-vv"""

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.commitizen]
name = "cz_customize"
use_shortcuts = true
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
bump_message = "bump: uvmono version $current_version â†’ $new_version"
tag_format = "uvmono-$version"

[tool.commitizen.customize]
message_template = "{{change_type}}(uvmono): {{message}}"
example = "feature: this feature enable customize through config file"
schema = "<change_type>: <body>"
schema_pattern = "(feature|bug fix):(\\s.*)"
bump_pattern = "^(break|new|fix|hotfix)"
bump_map = { "break" = "MAJOR", "new" = "MINOR", "fix" = "PATCH", "hotfix" = "PATCH" }
change_type_order = ["BREAKING CHANGE", "feat", "fix", "refactor", "perf"]
commit_parser = "^(?P<change_type>feature|bug fix):\\s(?P<message>.*)?"
changelog_pattern = "^(feature|bug fix)?(!)?"
change_type_map = { "feature" = "Feat", "bug fix" = "Fix" }

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    { key = "x", value = "fix", name = "fix: A bug fix. Correlates with PATCH in SemVer" },
    { key = "f", value = "feat", name = "feat: A new feature. Correlates with MINOR in SemVer" },
    { key = "d", value = "docs", name = "docs: Documentation only changes" },
    { key = "s", value = "style", name = "style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)" },
    { key = "r", value = "refactor", name = "refactor: A code change that neither fixes a bug nor adds a feature" },
    { key = "p", value = "perf", name = "perf: A code change that improves performance" },
    { key = "t", value = "test", name = "test: Adding missing or correcting existing tests" },
    { key = "b", value = "build", name = "build: Changes that affect the build system or external dependencies (example scopes: pip, docker, npm)" },
    { key = "c", value = "ci", name = "ci: Changes to CI configuration files and scripts (example scopes: GitLabCI)" },
]
message = "Select the type of change you are committing"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Message:"
