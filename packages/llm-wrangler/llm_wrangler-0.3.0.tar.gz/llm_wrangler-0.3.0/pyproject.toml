[tool.poetry]
name = "llm-wrangler"
version = "0.3.0"
description = "LLM utilities for handling inputs and outputs."
authors = ["Luke Miloszewski <lukemiloszewski@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/lukemiloszewski/llm-wrangler"
repository = "https://github.com/lukemiloszewski/llm-wrangler"
classifiers = [
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.urls]
Changelog = "https://github.com/lukemiloszewski/llm-wrangler/releases"

[tool.poetry.dependencies]
typer = "^0.6.1"
python = ">=3.11.0,<3.12.0"

[tool.poetry.group.dev.dependencies]
mkdocs-material = "^8.4.2"
pytest = "^7.0.0"
pytest-asyncio = "^0.19.0"
pytest-cov = "^3.0.0"
rich = "^12.5.1"
ruff = "^0.1.8"

[tool.poetry.scripts]
llm-wrangler = "llm_wrangler.main:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
lint.ignore = [
    "E501",  # line too long, handled by black
    "E731",  # lambda assignment
    "UP007", # use `X | Y` for type annotations
]
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = ["emcd"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.coverage.paths]
source = ["src"]
tests = ["tests"]

[tool.coverage.run]
branch = true
source = ["llm_wrangler"]

[tool.coverage.report]
show_missing = true
fail_under = 100
omit = [
  "*/*init*",
]
