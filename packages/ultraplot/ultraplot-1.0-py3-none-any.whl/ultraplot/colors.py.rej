diff a/ultraplot/colors.py b/ultraplot/colors.py	(rejected hunks)
@@ -41,135 +41,136 @@ from .internals import (
 from .utils import set_alpha, to_hex, to_rgb, to_rgba, to_xyz, to_xyza

 __all__ = [
-    'DiscreteColormap',
-    'ContinuousColormap',
-    'PerceptualColormap',
-    'DiscreteNorm',
-    'DivergingNorm',
-    'SegmentedNorm',
-    'ColorDatabase',
-    'ColormapDatabase',
-    'ListedColormap',  # deprecated
-    'LinearSegmentedColormap',  # deprecated
-    'PerceptuallyUniformColormap',  # deprecated
-    'LinearSegmentedNorm',  # deprecated
+    "DiscreteColormap",
+    "ContinuousColormap",
+    "PerceptualColormap",
+    "DiscreteNorm",
+    "DivergingNorm",
+    "SegmentedNorm",
+    "ColorDatabase",
+    "ColormapDatabase",
+    "ListedColormap",  # deprecated
+    "LinearSegmentedColormap",  # deprecated
+    "PerceptuallyUniformColormap",  # deprecated
+    "LinearSegmentedNorm",  # deprecated
 ]

 # Default colormap properties
-DEFAULT_NAME = '_no_name'
-DEFAULT_SPACE = 'hsl'
+DEFAULT_NAME = "_no_name"
+DEFAULT_SPACE = "hsl"

 # Color regexes
 # NOTE: We do not compile hex regex because config.py needs this surrounded by \A\Z
-_regex_hex = r'#(?:[0-9a-fA-F]{3,4}){2}'  # 6-8 digit hex
+_regex_hex = r"#(?:[0-9a-fA-F]{3,4}){2}"  # 6-8 digit hex
 REGEX_HEX_MULTI = re.compile(_regex_hex)
-REGEX_HEX_SINGLE = re.compile(rf'\A{_regex_hex}\Z')
-REGEX_ADJUST = re.compile(r'\A(light|dark|medium|pale|charcoal)?\s*(gr[ea]y[0-9]?)?\Z')
+REGEX_HEX_SINGLE = re.compile(rf"\A{_regex_hex}\Z")
+REGEX_ADJUST = re.compile(r"\A(light|dark|medium|pale|charcoal)?\s*(gr[ea]y[0-9]?)?\Z")

 # Colormap constants
 CMAPS_CYCLIC = tuple(  # cyclic colormaps loaded from rgb files
-    key.lower() for key in (
-        'MonoCycle',
-        'twilight',
-        'Phase',
-        'romaO',
-        'brocO',
-        'corkO',
-        'vikO',
-        'bamO',
+    key.lower()
+    for key in (
+        "MonoCycle",
+        "twilight",
+        "Phase",
+        "romaO",
+        "brocO",
+        "corkO",
+        "vikO",
+        "bamO",
     )
 )
 CMAPS_DIVERGING = {  # mirrored dictionary mapping for reversed names
     key.lower(): value.lower()
     for key1, key2 in (
-        ('BR', 'RB'),
-        ('NegPos', 'PosNeg'),
-        ('CoolWarm', 'WarmCool'),
-        ('ColdHot', 'HotCold'),
-        ('DryWet', 'WetDry'),
-        ('PiYG', 'GYPi'),
-        ('PRGn', 'GnRP'),
-        ('BrBG', 'GBBr'),
-        ('PuOr', 'OrPu'),
-        ('RdGy', 'GyRd'),
-        ('RdBu', 'BuRd'),
-        ('RdYlBu', 'BuYlRd'),
-        ('RdYlGn', 'GnYlRd'),
+        ("BR", "RB"),
+        ("NegPos", "PosNeg"),
+        ("CoolWarm", "WarmCool"),
+        ("ColdHot", "HotCold"),
+        ("DryWet", "WetDry"),
+        ("PiYG", "GYPi"),
+        ("PRGn", "GnRP"),
+        ("BrBG", "GBBr"),
+        ("PuOr", "OrPu"),
+        ("RdGy", "GyRd"),
+        ("RdBu", "BuRd"),
+        ("RdYlBu", "BuYlRd"),
+        ("RdYlGn", "GnYlRd"),
     )
     for key, value in ((key1, key2), (key2, key1))
 }
 for _cmap_diverging in (  # remaining diverging cmaps (see PlotAxes._parse_cmap)
-    'Div',
-    'Vlag',
-    'Spectral',
-    'Balance',
-    'Delta',
-    'Curl',
-    'roma',
-    'broc',
-    'cork',
-    'vik',
-    'bam',
-    'lisbon',
-    'tofino',
-    'berlin',
-    'vanimo',
+    "Div",
+    "Vlag",
+    "Spectral",
+    "Balance",
+    "Delta",
+    "Curl",
+    "roma",
+    "broc",
+    "cork",
+    "vik",
+    "bam",
+    "lisbon",
+    "tofino",
+    "berlin",
+    "vanimo",
 ):
     CMAPS_DIVERGING[_cmap_diverging.lower()] = _cmap_diverging.lower()
 CMAPS_REMOVED = {
-    'Blue0': '0.6.0',
-    'Cool': '0.6.0',
-    'Warm': '0.6.0',
-    'Hot': '0.6.0',
-    'Floral': '0.6.0',
-    'Contrast': '0.6.0',
-    'Sharp': '0.6.0',
-    'Viz': '0.6.0',
+    "Blue0": "0.6.0",
+    "Cool": "0.6.0",
+    "Warm": "0.6.0",
+    "Hot": "0.6.0",
+    "Floral": "0.6.0",
+    "Contrast": "0.6.0",
+    "Sharp": "0.6.0",
+    "Viz": "0.6.0",
 }
 CMAPS_RENAMED = {
-    'GrayCycle': ('MonoCycle', '0.6.0'),
-    'Blue1': ('Blues1', '0.7.0'),
-    'Blue2': ('Blues2', '0.7.0'),
-    'Blue3': ('Blues3', '0.7.0'),
-    'Blue4': ('Blues4', '0.7.0'),
-    'Blue5': ('Blues5', '0.7.0'),
-    'Blue6': ('Blues6', '0.7.0'),
-    'Blue7': ('Blues7', '0.7.0'),
-    'Blue8': ('Blues8', '0.7.0'),
-    'Blue9': ('Blues9', '0.7.0'),
-    'Green1': ('Greens1', '0.7.0'),
-    'Green2': ('Greens2', '0.7.0'),
-    'Green3': ('Greens3', '0.7.0'),
-    'Green4': ('Greens4', '0.7.0'),
-    'Green5': ('Greens5', '0.7.0'),
-    'Green6': ('Greens6', '0.7.0'),
-    'Green7': ('Greens7', '0.7.0'),
-    'Green8': ('Greens8', '0.7.0'),
-    'Orange1': ('Yellows1', '0.7.0'),
-    'Orange2': ('Yellows2', '0.7.0'),
-    'Orange3': ('Yellows3', '0.7.0'),
-    'Orange4': ('Oranges2', '0.7.0'),
-    'Orange5': ('Oranges1', '0.7.0'),
-    'Orange6': ('Oranges3', '0.7.0'),
-    'Orange7': ('Oranges4', '0.7.0'),
-    'Orange8': ('Yellows4', '0.7.0'),
-    'Brown1': ('Browns1', '0.7.0'),
-    'Brown2': ('Browns2', '0.7.0'),
-    'Brown3': ('Browns3', '0.7.0'),
-    'Brown4': ('Browns4', '0.7.0'),
-    'Brown5': ('Browns5', '0.7.0'),
-    'Brown6': ('Browns6', '0.7.0'),
-    'Brown7': ('Browns7', '0.7.0'),
-    'Brown8': ('Browns8', '0.7.0'),
-    'Brown9': ('Browns9', '0.7.0'),
-    'RedPurple1': ('Reds1', '0.7.0'),
-    'RedPurple2': ('Reds2', '0.7.0'),
-    'RedPurple3': ('Reds3', '0.7.0'),
-    'RedPurple4': ('Reds4', '0.7.0'),
-    'RedPurple5': ('Reds5', '0.7.0'),
-    'RedPurple6': ('Purples1', '0.7.0'),
-    'RedPurple7': ('Purples2', '0.7.0'),
-    'RedPurple8': ('Purples3', '0.7.0'),
+    "GrayCycle": ("MonoCycle", "0.6.0"),
+    "Blue1": ("Blues1", "0.7.0"),
+    "Blue2": ("Blues2", "0.7.0"),
+    "Blue3": ("Blues3", "0.7.0"),
+    "Blue4": ("Blues4", "0.7.0"),
+    "Blue5": ("Blues5", "0.7.0"),
+    "Blue6": ("Blues6", "0.7.0"),
+    "Blue7": ("Blues7", "0.7.0"),
+    "Blue8": ("Blues8", "0.7.0"),
+    "Blue9": ("Blues9", "0.7.0"),
+    "Green1": ("Greens1", "0.7.0"),
+    "Green2": ("Greens2", "0.7.0"),
+    "Green3": ("Greens3", "0.7.0"),
+    "Green4": ("Greens4", "0.7.0"),
+    "Green5": ("Greens5", "0.7.0"),
+    "Green6": ("Greens6", "0.7.0"),
+    "Green7": ("Greens7", "0.7.0"),
+    "Green8": ("Greens8", "0.7.0"),
+    "Orange1": ("Yellows1", "0.7.0"),
+    "Orange2": ("Yellows2", "0.7.0"),
+    "Orange3": ("Yellows3", "0.7.0"),
+    "Orange4": ("Oranges2", "0.7.0"),
+    "Orange5": ("Oranges1", "0.7.0"),
+    "Orange6": ("Oranges3", "0.7.0"),
+    "Orange7": ("Oranges4", "0.7.0"),
+    "Orange8": ("Yellows4", "0.7.0"),
+    "Brown1": ("Browns1", "0.7.0"),
+    "Brown2": ("Browns2", "0.7.0"),
+    "Brown3": ("Browns3", "0.7.0"),
+    "Brown4": ("Browns4", "0.7.0"),
+    "Brown5": ("Browns5", "0.7.0"),
+    "Brown6": ("Browns6", "0.7.0"),
+    "Brown7": ("Browns7", "0.7.0"),
+    "Brown8": ("Browns8", "0.7.0"),
+    "Brown9": ("Browns9", "0.7.0"),
+    "RedPurple1": ("Reds1", "0.7.0"),
+    "RedPurple2": ("Reds2", "0.7.0"),
+    "RedPurple3": ("Reds3", "0.7.0"),
+    "RedPurple4": ("Reds4", "0.7.0"),
+    "RedPurple5": ("Reds5", "0.7.0"),
+    "RedPurple6": ("Purples1", "0.7.0"),
+    "RedPurple7": ("Purples2", "0.7.0"),
+    "RedPurple8": ("Purples3", "0.7.0"),
 }

 # Color constants
