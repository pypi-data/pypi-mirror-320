apiVersion: v1
kind: Secret
metadata:
  name: pull-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: $BASE64
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kcli
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kcli-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: kcli
    namespace: default
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: Pod
metadata:
  name: kubevirt-kcli
  namespace: default
spec:
  restartPolicy: Never
  serviceAccountName: kcli
  containers:
  - name: deploy-cluster
    image: quay.io/karmab/kcli:latest
    env:
    - name: CLUSTER
      value: "testk8"
    - name: DOMAIN
      value: "karmalabs.corp"
    - name: NUMCPUS
      value: "16"
    - name: MEMORY
      value: "24576"
    - name: SERVICE_NETWORK_IPV4
      value: "173.28.0.0/16"
    - name: CLUSTER_NETWORK_IPV4
      value: "11.128.0.0/14"
    - name: PYTHONUNBUFFERED
      value: "true"
    volumeMounts:
    - name: pull-secret
      mountPath: "/etc/pull-secret"
      readOnly: true
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 0
    command:
    - "/bin/bash"
    - "-c"
    - |
      #/bin/bash
      export HOME=/root
      export PATH=/:/usr/local/bin:$PATH
      ssh-keygen -qt rsa -N '' -f /root/.ssh/id_rsa
      NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
      kcli -n $NAMESPACE create cluster openshift -P pull_secret=/etc/pull-secret/pull-secret -P sno_vm=true -P numcpus=$NUMCPUS -P memory=$MEMORY -P service_network_ipv4=$SERVICE_NETWORK_IPV4 -P cluster_network_ipv4=$CLUSTER_NETWORK_IPV4 -P domain=$DOMAIN -P force=true $CLUSTER
      sed -i "s/api.$CLUSTER.$DOMAIN:6443/api.$CLUSTER.$DOMAIN/" /root/.kcli/clusters/$CLUSTER/auth/kubeconfig
      oc create secret generic kubeconfig-$CLUSTER --from-file=kubeconfig=/root/.kcli/clusters/$CLUSTER/auth/kubeconfig
      oc create route passthrough --service=$CLUSTER-sno-api --hostname=api.$CLUSTER.$DOMAIN
  volumes:
  - name: pull-secret
    secret:
      secretName: pull-secret
