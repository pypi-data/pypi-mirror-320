"use strict";(self.webpackChunk_jupyter_shared_docprovider_extension=self.webpackChunk_jupyter_shared_docprovider_extension||[]).push([[672],{672:(e,t,s)=>{s.r(t),s.d(t,{SharedDrive:()=>_,WebrtcProvider:()=>h});var r=s(262),i=s(482),n=s(602),o=s(597),a=s(358);class h{constructor(e){this._onSync=e=>{e.synced&&this._ready.resolve()},this._ready=new r.PromiseDelegate,this._isDisposed=!1,this._path=e.path,this._contentType=e.contentType,this._format=e.format,this._sharedModel=e.model,this._awareness=e.model.awareness,this._yWebrtcProvider=null,this._signalingServers=e.signalingServers;const t=e.user;t.ready.then((()=>{this._onUserChanged(t)})).catch((e=>console.error(e))),t.userChanged.connect(this._onUserChanged,this),this._connect().catch((e=>console.warn(e)))}get isDisposed(){return this._isDisposed}get ready(){return this._ready.promise}dispose(){this.isDisposed||(this._isDisposed=!0,this._yWebrtcProvider?.destroy(),n.Signal.clearData(this))}async _connect(){this._yWebrtcProvider=new i.WebrtcProvider(`${this._format}:${this._contentType}:${this._path}}`,this._sharedModel.ydoc,{signaling:this._signalingServers,awareness:this._awareness}),this._yWebrtcProvider.on("synced",this._onSync)}_onUserChanged(e){this._awareness.setLocalStateField("user",e.identity)}}class c{constructor(e){this._parts=e.split("/"),""===this._parts[this._parts.length-1]&&this._parts.pop()}get parts(){return this._parts}get parent(){return this._parts.slice(0,this._parts.length-1).join("/")}get name(){return this._parts[this._parts.length-1]}}var d=s(206);class l{constructor(){this._ydoc=new d.Doc,this._yroot=this._ydoc.getMap("root")}get ydoc(){return this._ydoc}_newDir(){return new d.Map}exists(e){if(""===e)return!0;const t=new c(e);return this.get(t.parent).has(t.name)}isDir(e){return"string"!=typeof this.get(e)}getId(e){const t=this.get(e);if("string"!=typeof t)throw new Error(`Not a file: ${e}`);return t}listDir(e){const t=new Map,s=this.get(e);if("string"==typeof s)throw new Error(`Not a directory: ${e}`);for(const[e,r]of s){const s="string"!=typeof r;t.set(e,{isDir:s})}return t}get(e){if(""===e)return this._yroot;let t=this._yroot;const s=new c(e).parts;let r="";const i=s.length-1;for(let e=0;e<s.length;e++){const n=s[e];if(!t.has(n))throw new Error(`No entry "${n}" in "${r}"`);if(t=t.get(n),"string"!=typeof t)r=""===r?n:`${r}/${n}`;else if(e<i)throw new Error(`Entry "${n}" in "${r}" is not a directory.`)}return t}newUntitled(e,t,s){t=t??"",s=s??"";let r=0,i="";const n=this.get(t).toJSON();for(;""===i;){const e=`shared${r}${s}`;e in n?r+=1:i=e}const o=new c(t).parts;o.push(i);const a=o.join("/");return e?this.createDirectory(a):this.createFile(a),a}createFile(e){const t=new c(e);this.get(t.parent).set(t.name,r.UUID.uuid4())}createDirectory(e){const t=new c(e);this.get(t.parent).set(t.name,this._newDir())}delete(e){const t=new c(e);if(0===t.parts.length)throw new Error("Cannot delete root directory");this.get(t.parent).delete(t.name)}move(e,t){const s=new c(e),r=new c(t);if(0===s.parts.length)throw new Error("Cannot move root directory");if(0===r.parts.length)throw new Error("Cannot move to root directory");const i=this.get(s.parent),n=this.get(r.parent);let o=i.get(s.name);"string"!=typeof o&&(o=o.clone()),this.delete(e),n.set(r.name,o)}}var p=s(516);const y=JSON.parse(o.PageConfig.getOption("signalingServers"));class _{constructor(e,t,s,c,d){this._onSync=e=>{e.synced&&(this._ready.resolve(),this._fileSystemProvider?.off("synced",this._onSync))},this._onCreate=e=>{if("string"!=typeof e.format)return this.sharedModelFactory.documentFactories.get(e.contentType)(e);const t=this._ydrive.getId(e.path),s=`${e.format}:${e.contentType}:${t}`,r=this._fileProviders.get(s);if(r)return r.sharedModel;const i=this.sharedModelFactory.documentFactories.get(e.contentType)(e);i.changed.connect(((e,t)=>{t.stateChange||i.ystate.set("dirty",!1)}));const n=new h({url:"",path:t,format:e.format,contentType:e.contentType,model:i,user:this._user,translator:this._trans,signalingServers:this._signalingServers});return this._fileProviders.set(s,{provider:n,sharedModel:i}),i.disposed.connect((()=>{const e=this._fileProviders.get(s);e&&(e.provider.dispose(),this._fileProviders.delete(s))})),new p.nS(t,i.ydoc).on("synced",(()=>{console.log(`content from the database is loaded for: ${t}`)})),i},this._fileChanged=new n.Signal(this),this._isDisposed=!1,this._ydrive=new l,this._ready=new r.PromiseDelegate,this._signalingServers=[],this._user=e.serviceManager.user,this._defaultFileBrowser=t,this._trans=s,this._globalAwareness=c,this._fileProviders=new Map,this.sharedModelFactory=new g(this._onCreate),this.serverSettings=a.ServerConnection.makeSettings(),y.forEach((e=>{e.startsWith("ws://")||e.startsWith("wss://")||e.startsWith("http://")||e.startsWith("https://")?this._signalingServers.push(e):this._signalingServers.push(o.URLExt.join(this.serverSettings.wsUrl,e))})),this.name=d,this._app=e,this._fileSystemProvider=new i.WebrtcProvider("fileSystem",this._ydrive.ydoc,{signaling:this._signalingServers,awareness:this._globalAwareness||void 0}),this._fileSystemProvider.on("synced",this._onSync),new p.nS("",this._ydrive.ydoc).on("synced",(()=>{console.log("content from the database is loaded for file system")}))}get providers(){const e=new Map;for(const t in this._fileProviders)e.set(t,this._fileProviders.get(t).provider);return e}async getDownloadUrl(e){return""}async delete(e){this._ydrive.delete(e)}async restoreCheckpoint(e,t){}async deleteCheckpoint(e,t){}async exportFile(e){const t=this._app.shell.currentWidget.context.contentsModel.path.slice(this.name.length+1),s=this._app.shell.currentWidget.context.contentsModel.type,r=this._app.shell.currentWidget.context.contentsModel.format??"text",i=`${r}:${s}:${this._ydrive.getId(t)}`,n=this._fileProviders.get(i),o=n?.sharedModel.getSource();if(n){const t={type:s,format:r,content:o};await this._defaultFileBrowser.model.manager.services.contents.save(e,t)}}async importFile(e,t){const s=await this._defaultFileBrowser.model.manager.services.contents.get(e,{content:!0});this._ydrive.exists(t)&&this._ydrive.isDir(t)&&(t=""===t?s.name:t+"/"+s.name),this._ydrive.createFile(t);const r=this.sharedModelFactory.createNew({path:t,format:s.format,contentType:s.type,collaborative:!0});r&&r.setSource(s.content)}async newUntitled(e={}){let t="",s=!1;"directory"===e.type?s=!0:t="notebook"===e.type?".ipynb":".txt";const r=this._ydrive.newUntitled(s,e.path,t),i={name:new c(r).name,path:r,type:e.type??"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null};return this._fileChanged.emit({type:"new",oldValue:null,newValue:i}),i}async rename(e,t){return this._ydrive.move(e,t),{name:new c(t).name,path:t,type:"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null}}async copy(e,t){throw new Error("Copy/paste not supported")}async createCheckpoint(e){return{id:"",last_modified:""}}async listCheckpoints(e){return[]}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._fileProviders.forEach((e=>e.provider.dispose())),this._fileProviders.clear(),this._isDisposed=!0,n.Signal.clearData(this))}async get(e,t){let s;if(await this._ready,!this._ydrive.isDir(e))return{name:new c(e).name,path:e,type:"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null};const r=[];for(const[t,s]of this._ydrive.listDir(e)){const i=s.isDir?"directory":"file";r.push({name:t,path:`${e}/${t}`,type:i,writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null})}return s={name:new c(e).name,path:e,type:"directory",writable:!0,created:"",last_modified:"",mimetype:"",content:r,format:null},s}async save(e,t={}){const s={type:t.type,format:t.format,content:!1};return this.get(e,s)}}class g{constructor(e){this._onCreate=e,this.documentFactories=new Map}registerDocumentFactory(e,t){if(this.documentFactories.has(e))throw new Error(`The content type ${e} already exists`);this.documentFactories.set(e,t)}createNew(e){if("string"==typeof e.format){if(this.documentFactories.has(e.contentType))return this._onCreate(e)}else console.warn(`Only defined format are supported; got ${e.format}.`)}}}}]);