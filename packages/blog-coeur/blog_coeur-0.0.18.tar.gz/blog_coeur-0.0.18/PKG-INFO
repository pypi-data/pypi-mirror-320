Metadata-Version: 2.1
Name: blog-coeur
Version: 0.0.18
Summary: Coeur - static site management
Home-page: https://github.com/sr2ds/coeur
Author: David Silva
Author-email: srdavidsilva@gmail.com
Requires-Python: >=3.10,<3.14
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: atproto (>=0.0.55,<0.0.56)
Requires-Dist: beautifulsoup4 (>=4.12.3,<5.0.0)
Requires-Dist: fastapi (>=0.115.5,<0.116.0)
Requires-Dist: instagrapi (>=2.1.2,<3.0.0)
Requires-Dist: jinja2 (>=3.1.4,<4.0.0)
Requires-Dist: lxml (>=5.3.0,<6.0.0)
Requires-Dist: minify-html (>=0.15.0,<0.16.0)
Requires-Dist: mistune (>=3.0.2,<4.0.0)
Requires-Dist: openai (>=1.51.2,<2.0.0)
Requires-Dist: pillow (>=11.0.0,<12.0.0)
Requires-Dist: psutil (>=5.9.8,<6.0.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: python-slugify (>=8.0.4,<9.0.0)
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Requires-Dist: sqladmin (>=0.20.1,<0.21.0)
Requires-Dist: sqlalchemy (>=2.0.30,<3.0.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Requires-Dist: typer[all] (>=0.12.3,<0.13.0)
Requires-Dist: uvicorn (>=0.32.0,<0.33.0)
Requires-Dist: watchdog (>=4.0.1,<5.0.0)
Project-URL: Repository, https://github.com/sr2ds/coeur
Description-Content-Type: text/markdown

# Coeur - static site management

Coeur is just another Python tool to generate static sites with thousands of pages, with a bit of extra power.

## Name explanation

"cœur" is a French word for "core" or "heart".

This tool is called Coeur for two personal reasons: 1. it will be the core of my blog-farm; 2. one of my favorite places is the Sacre ***Cœur*** in Paris.

## How to install

Coeur is a common python package, you can install from pypi:

```sh
pip install --user blog-coeur
```

The command to be used is `blog-coeur` and get `help` to start to use:

```sh
blog-coeur --help
```

## Module SSG - Static Site Generator

The `ssg` module in **Coeur** allows you to create a static website from a `sqlite` database and import content from markdown files.

### How to Use

#### Create Your Coeur App

To start a new project, run the `create` command:

```
blog-coeur ssg create my-blog
```

#### Development Server

Run a simple local server to build your blog:

```
blog-coeur ssg server --max-posts=1000 --port=8081
```

#### Admin Web Panel

Manage your blog’s posts through a simple web interface:

```
blog-coeur ssg admin
```

Go to: `http://localhost:8000/admin`

#### Build Static Site

Build your blog with the `build` command:

```
blog-coeur ssg build
```

The blog will be generated in the `public` folder.

#### Markdown Import

To import your markdown files from Zola Framework to Coeur:

```
blog-coeur ssg markdown-to-db "./content"
```

### SSG Features

- Import markdown files from Zola Framework
- Basic blog template based on Zolarwind
- HTML Minification
- Sitemap generation with pagination
- Hot reload
- Post management via SQLAlchemyAdmin dashboard (partial)

 ### TODO List

- [ ] Custom templates (themes)
    - [ ] Documentation about templates
- [ ] Support to use post Tags
- [ ] Hot reload v2 - add websocket to auto-refresh the html in the browser
- [ ] Manage posts - fixes for multiple databases


## Module CMP - Content Machine Processor

The CMP module was designed to simplify content creation powered by the OpenAI API.

### How to Use

The content will be created as posts inside the blog's SQLite database, which is generated by the ssg module. It's important to start your project using the ssg command.

Assuming you already have the blog created with Coeur, you need to set up your OpenAI key in the `.env` file and then you can use the cmp module as follows:

```
blog-coeur cmp title-to-post "Aguas de Lindóia" --custom-prompt="Create a full article about the city, need to be funny and talking in a positive way about the place"
```

The first parameter is required and will be the title of the post.

It is highly recommended to use a custom-prompt to enhance your experience and get better results. This prompt can be in any language.

You can also set the `img-url` parameter to include an image in the post. This needs to be a valid image URL, such as one hosted on S3.


## Module PDS – Post Distribution Service

This module will help us to automatically publish the blog posts on social media.

```
blog-coeur pds publish [OPTIONS] CHANNELS:{instagram}...
```

# Do you want to help?

This is an open-source project, and I need help to make it better.

If you are a developer, feel free to contact me to work on items from my personal roadmap, or you can suggest something new. Be free, let's do it together.

If you are a company, contact me to support the growth of my project. I'm open to improve it for specifics new use-cases.
