[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "miutil/_dist_ver.py"
write_to_template = "__version__ = '{version}'\n"

[tool.setuptools.packages.find]
exclude = ["tests"]

[project.urls]
documentation = "https://github.com/AMYPAD/miutil/#miutil"
repository = "https://github.com/AMYPAD/miutil"
changelog = "https://github.com/AMYPAD/miutil/releases"

[project]
name = "miutil"
dynamic = ["version"]
maintainers = [{name = "Casper da Costa-Luis", email = "casper.dcl@physics.org"}]
description = "Medical imaging utilities for the AMYPAD and NiftyPET projects"
readme = "README.rst"
requires-python = ">=3.7"
keywords = ["fMRI", "PET", "SPECT", "EEG", "MEG"]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Environment :: GPU",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Education",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Other Scripting Engines",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Installation/Setup",
    "Topic :: Utilities"]
dependencies = ["tqdm>=4.40.0"]

[project.optional-dependencies]
dev = ["pytest>=6", "pytest-cov", "pytest-timeout", "pytest-xdist"]
nii = ["nibabel>=4.0", "numpy"]
plot = ["matplotlib", "numpy", "scipy"]
cuda = ["argopt", "pynvml"]
web = ["requests"]
mbeautify = ["argopt", "tqdm>=4.42.0", "requests"]  # web

[project.scripts]
cuinfo = "miutil.cuinfo:main"
mbeautify = "miutil.mlab.beautify:main"

[tool.flake8]
max_line_length = 99
extend_ignore = ["E261"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs"]

[tool.yapf]
spaces_before_comment = [15, 20]
arithmetic_precedence_indication = true
allow_split_before_dict_value = false
coalesce_brackets = true
column_limit = 99
each_dict_entry_on_separate_line = false
space_between_ending_comma_and_closing_bracket = false
split_before_named_assigns = false
split_before_closing_bracket = false
blank_line_before_nested_class_or_def = false

[tool.isort]
profile = "black"
line_length = 99
multi_line_output = 4
known_first_party = ["miutil", "tests"]

[tool.pytest.ini_options]
minversion = "6.0"
timeout = 15
log_level = "INFO"
python_files = ["tests/test_*.py"]
testpaths = ["tests"]
addopts = "-v --tb=short -rxs -W=error --log-level=debug -n=auto --durations=0 --cov=miutil --cov-report=term-missing --cov-report=xml"
