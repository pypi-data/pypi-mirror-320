# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from seerep.pb import camera_intrinsics_pb2 as camera__intrinsics__pb2
from seerep.pb import camera_intrinsics_query_pb2 as camera__intrinsics__query__pb2
from seerep.pb import server_response_pb2 as server__response__pb2


class CameraIntrinsicsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCameraIntrinsics = channel.unary_unary(
                '/seerep.pb.CameraIntrinsicsService/GetCameraIntrinsics',
                request_serializer=camera__intrinsics__query__pb2.CameraIntrinsicsQuery.SerializeToString,
                response_deserializer=camera__intrinsics__pb2.CameraIntrinsics.FromString,
                )
        self.TransferCameraIntrinsics = channel.unary_unary(
                '/seerep.pb.CameraIntrinsicsService/TransferCameraIntrinsics',
                request_serializer=camera__intrinsics__pb2.CameraIntrinsics.SerializeToString,
                response_deserializer=server__response__pb2.ServerResponse.FromString,
                )


class CameraIntrinsicsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCameraIntrinsics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferCameraIntrinsics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraIntrinsicsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCameraIntrinsics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraIntrinsics,
                    request_deserializer=camera__intrinsics__query__pb2.CameraIntrinsicsQuery.FromString,
                    response_serializer=camera__intrinsics__pb2.CameraIntrinsics.SerializeToString,
            ),
            'TransferCameraIntrinsics': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferCameraIntrinsics,
                    request_deserializer=camera__intrinsics__pb2.CameraIntrinsics.FromString,
                    response_serializer=server__response__pb2.ServerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'seerep.pb.CameraIntrinsicsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CameraIntrinsicsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCameraIntrinsics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/seerep.pb.CameraIntrinsicsService/GetCameraIntrinsics',
            camera__intrinsics__query__pb2.CameraIntrinsicsQuery.SerializeToString,
            camera__intrinsics__pb2.CameraIntrinsics.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferCameraIntrinsics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/seerep.pb.CameraIntrinsicsService/TransferCameraIntrinsics',
            camera__intrinsics__pb2.CameraIntrinsics.SerializeToString,
            server__response__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
