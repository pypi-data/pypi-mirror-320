# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from seerep.pb import frame_query_pb2 as frame__query__pb2
from seerep.pb import server_response_pb2 as server__response__pb2
from seerep.pb import string_vector_pb2 as string__vector__pb2
from seerep.pb import transform_stamped_pb2 as transform__stamped__pb2
from seerep.pb import transform_stamped_query_pb2 as transform__stamped__query__pb2


class TfServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransferTransformStamped = channel.unary_unary(
                '/seerep.pb.TfService/TransferTransformStamped',
                request_serializer=transform__stamped__pb2.TransformStamped.SerializeToString,
                response_deserializer=server__response__pb2.ServerResponse.FromString,
                )
        self.GetFrames = channel.unary_unary(
                '/seerep.pb.TfService/GetFrames',
                request_serializer=frame__query__pb2.FrameQuery.SerializeToString,
                response_deserializer=string__vector__pb2.StringVector.FromString,
                )
        self.GetTransformStamped = channel.unary_unary(
                '/seerep.pb.TfService/GetTransformStamped',
                request_serializer=transform__stamped__query__pb2.TransformStampedQuery.SerializeToString,
                response_deserializer=transform__stamped__pb2.TransformStamped.FromString,
                )


class TfServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TransferTransformStamped(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransformStamped(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TfServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransferTransformStamped': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferTransformStamped,
                    request_deserializer=transform__stamped__pb2.TransformStamped.FromString,
                    response_serializer=server__response__pb2.ServerResponse.SerializeToString,
            ),
            'GetFrames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrames,
                    request_deserializer=frame__query__pb2.FrameQuery.FromString,
                    response_serializer=string__vector__pb2.StringVector.SerializeToString,
            ),
            'GetTransformStamped': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransformStamped,
                    request_deserializer=transform__stamped__query__pb2.TransformStampedQuery.FromString,
                    response_serializer=transform__stamped__pb2.TransformStamped.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'seerep.pb.TfService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TfService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TransferTransformStamped(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/seerep.pb.TfService/TransferTransformStamped',
            transform__stamped__pb2.TransformStamped.SerializeToString,
            server__response__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/seerep.pb.TfService/GetFrames',
            frame__query__pb2.FrameQuery.SerializeToString,
            string__vector__pb2.StringVector.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransformStamped(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/seerep.pb.TfService/GetTransformStamped',
            transform__stamped__query__pb2.TransformStampedQuery.SerializeToString,
            transform__stamped__pb2.TransformStamped.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
