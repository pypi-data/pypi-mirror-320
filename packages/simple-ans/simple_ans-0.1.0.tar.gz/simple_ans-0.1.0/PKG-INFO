Metadata-Version: 2.2
Name: simple_ans
Version: 0.1.0
Summary: Simple ANS (Asymmetric Numeral Systems) implementation
Home-page: https://github.com/magland/simple_ans
Author: Jeremy Magland
Author-email: jmagland@flatironinstitute.org
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.19.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# simple_ans

A Python package for Asymmetric Numeral Systems (ANS) encoding/decoding using a simple C++ implementation.

The algorithm is based on [this guide](https://graphallthethings.com/posts/streaming-ans-explained/).

## Installation

First, install the required dependencies:

```bash
pip install pybind11 numpy
```

Then install the package:

```bash
pip install .
```

## Usage

```python
import numpy as np
from simple_ans import ans_encode, ans_decode

# Create a signal to encode (uint32 array)
signal = np.array([0, 1, 2, 1, 0], dtype=np.uint32)

# Encode (automatically determines optimal symbol counts)
encoded = ans_encode(signal)

# Decode
decoded = ans_decode(encoded)

# Verify
assert np.all(decoded == signal)
```

