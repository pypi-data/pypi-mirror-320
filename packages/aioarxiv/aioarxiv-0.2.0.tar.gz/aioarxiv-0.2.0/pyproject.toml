[project]
name = "aioarxiv"
version = "0.2.0"
description = "arxiv Parse library"
authors = [
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "loguru~=0.7",
    "pydantic>=2.9.2",
    "aiohttp>=3.10.10",
    "tenacity>=9.0.0",
    "aiofiles>=24.1.0",
    "platformdirs>=4.3.6",
    "tzdata>=2024.2",
    "pydantic-settings>=2.7.1",
]
requires-python = ">=3.9"
readme = "README.md"

[project.license]
text = "MIT"

[project.package]
include = [
    "aioarxiv",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov-report=term-missing --ignore=.venv/"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
exclude = [
    "typings/*/",
]
select = [
    "F",
    "W",
    "E",
    "I",
    "UP",
    "ASYNC",
    "B",
    "C4",
    "DTZ",
    "T10",
    "T20",
    "PYI",
    "PT",
    "Q",
    "SIM",
    "TID",
    "PLE",
    "NPY",
    "RUF",
]
ignore = [
    "E402",
    "B008",
    "RUF001",
    "RUF002",
    "RUF003",
    "ISC001",
]

[tool.ruff.lint.isort]
length-sort = false
force-sort-within-sections = true
known-first-party = [
    "aioarxiv",
    "tests/*",
]
extra-standard-library = [
    "typing_extensions",
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.format]
line-ending = "lf"

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
venv = ".venv"
typeCheckingMode = "standard"
disableBytesTypePromotions = true

[[tool.pyright.executionEnvironments]]
root = "./tests"
extraPaths = [
    "./",
]

[[tool.pyright.executionEnvironments]]
root = "./"

[tool.pdm]
distribution = true

[tool.coverage.run]
omit = [
    ".venv/*",
]

[dependency-groups]
test = [
    "pytest-cov~=5.0",
    "pytest-xdist~=3.6",
    "pytest-asyncio~=0.23",
    "pytest-mock>=3.14.0",
]
dev = [
    "pyright[nodejs]>=1.1.391",
    "ruff>=0.8",
    "pre-commit~=4.0",
    "bump-my-version>=0.28.1",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
