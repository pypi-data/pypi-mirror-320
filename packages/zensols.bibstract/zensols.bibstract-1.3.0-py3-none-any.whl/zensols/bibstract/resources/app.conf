[cli]
# the list of applications to invoke on start up
apps = list: ${cli_config_default:apps}, show_config_cli, app
# declare sections to remove
cleanups = list: ${cli_config_default:cleanups}, show_config_cli, app

[import]
config_files = list:
    resource(zensols.util): resources/default.conf,
    resource(zensols.util): resources/escape.conf,
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf

[config_import]
# the test configuration file needs interpolates the following sections
references = list: app, package, conf_esc, default

[config_imp]
type = import
config_files = list:
    ^{override},
    ^{config_path},
    resource(zensols.bibstract): resources/default.conf,
    ^{config_path},
    resource(zensols.bibstract): resources/converters.conf,
    resource(zensols.bibstract): resources/obj.conf,
    ^{config_path}

[app]
class_name = zensols.bibstract.Exporter
converter_library = instance: converter_library
log_name = ${package:name}

[app_decorator]
mnemonic_overrides= dict: {
  'print_bibtex_ids': 'showbib',
  'print_texfile_refs': 'showtex',
  'print_extracted_ids': 'showextract',
  'print_entry': 'entry'}
option_includes = dict: {
  'libpath', 'output', 'inverse',
  'package_regex', 'no_extension'}
option_overrides = dict: {
  'output': {'long_name': 'output', 'short_name': 'o'},
  'package_regex': {'long_name': 'filter', 'short_name': 'f'},
  'no_extension': {'long_name': 'noext', 'short_name': None}}
