[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sleep-even"
version = "0.1.0"
description = "Is even?"
authors = ["Micael Jarniac <micael@jarniac.dev>"]
license = "MIT"
readme = "docs/README.md"
packages = [{include = "sleep_even", from = "src"}]
homepage = "https://github.com/MicaelJarniac/sleep-even"
repository = "https://github.com/MicaelJarniac/sleep-even"
documentation = "https://sleep-even.readthedocs.io"
classifiers = [
  # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9"


[tool.poetry.group.tests.dependencies]
coverage = "^7.2.7"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-benchmark = "^4.0.0"

[tool.poetry.group.benchmarking.dependencies]
asv = "^0.5.1"
virtualenv = "^20.24.3"

[tool.poetry.group.docs.dependencies]
furo = "^2023.5.20"
myst-parser = "^2.0.0"
Sphinx = "^7.0.1"
sphinxcontrib-spelling = "^8.0.0"

[tool.poetry.group.typing.dependencies]
# Typing stubs go here
mypy = "^1.4.0"
nox = "^2023.4.22"
pytest = "^7.4.0"
pytest-benchmark = "^4.0.0"

[tool.poetry.group.linting.dependencies]
ruff = "^0.5.0"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3.3.3"

[tool.poetry.group.dev.dependencies]
nox = "^2023.4.22"
python-semantic-release = "^8.0.2"

[tool.poetry.urls]
"Changelog" = "https://github.com/MicaelJarniac/sleep-even/blob/main/docs/CHANGELOG.md"
"Bug Tracker" = "https://github.com/MicaelJarniac/sleep-even/issues"

[tool.ruff]
# https://beta.ruff.rs/docs/rules
line-length = 88  # Default
force-exclude = true
src = ["src"]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203",
  "D213",
]
unfixable = ["ERA001"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
files = ["src", "docs", "tests", "noxfile.py"]
exclude = [".venv"]
enable_error_code = [
  "ignore-without-code"
]
strict = true
warn_unused_ignores = false  # true
show_column_numbers = true
# show_error_context = true
# pretty = true

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = """
  python -m pip install build~=0.10.0
  python -m build .
"""

[tool.semantic_release.changelog]
changelog_file = "docs/CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.rc]
match = "rc"
prerelease = true
prerelease_token = "rc"

[tool.coverage.run]
source = ["src"]
command_line = "-m pytest"

[tool.pytest.ini_options]
# addopts = "--cov"

[tool.cruft]
skip = [
  "src",
  "tests",
  "benchmarks",
  ".asv",
  "poetry.lock",
]
