# coding: utf-8

"""
    Moneyball

    Provides company-focused insights based on Live Data

    The version of the OpenAPI document: 1.0.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_moneyball_client_staging.models.post_reports_tenure_by_cohort200_response_inner import PostReportsTenureByCohort200ResponseInner

class TestPostReportsTenureByCohort200ResponseInner(unittest.TestCase):
    """PostReportsTenureByCohort200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostReportsTenureByCohort200ResponseInner:
        """Test PostReportsTenureByCohort200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostReportsTenureByCohort200ResponseInner`
        """
        model = PostReportsTenureByCohort200ResponseInner()
        if include_optional:
            return PostReportsTenureByCohort200ResponseInner(
                count_employees = 56,
                key = 56,
                group_values = [
                    ldt_moneyball_client_staging.models.post_reports_tenure_by_cohort_200_response_inner_group_values_inner.post_reports_tenure_by_cohort_200_response_inner_group_values_inner(
                        name = '', 
                        value = '', )
                    ]
            )
        else:
            return PostReportsTenureByCohort200ResponseInner(
                count_employees = 56,
                key = 56,
                group_values = [
                    ldt_moneyball_client_staging.models.post_reports_tenure_by_cohort_200_response_inner_group_values_inner.post_reports_tenure_by_cohort_200_response_inner_group_values_inner(
                        name = '', 
                        value = '', )
                    ],
        )
        """

    def testPostReportsTenureByCohort200ResponseInner(self):
        """Test PostReportsTenureByCohort200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
