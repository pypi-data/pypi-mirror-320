# coding: utf-8

"""
    Moneyball

    Provides company-focused insights based on Live Data

    The version of the OpenAPI document: 1.0.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_moneyball_client_staging.models.cp_tenure_current_response_total import CPTenureCurrentResponseTotal

class TestCPTenureCurrentResponseTotal(unittest.TestCase):
    """CPTenureCurrentResponseTotal unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CPTenureCurrentResponseTotal:
        """Test CPTenureCurrentResponseTotal
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CPTenureCurrentResponseTotal`
        """
        model = CPTenureCurrentResponseTotal()
        if include_optional:
            return CPTenureCurrentResponseTotal(
                by_month = [
                    ldt_moneyball_client_staging.models.cp_tenure_current_response_total_by_month_inner.CPTenureCurrentResponse_total_by_month_inner(
                        month = '', 
                        avg = 1.337, )
                    ],
                avg = 1.337,
                sample_size = 1.337
            )
        else:
            return CPTenureCurrentResponseTotal(
                by_month = [
                    ldt_moneyball_client_staging.models.cp_tenure_current_response_total_by_month_inner.CPTenureCurrentResponse_total_by_month_inner(
                        month = '', 
                        avg = 1.337, )
                    ],
                avg = 1.337,
                sample_size = 1.337,
        )
        """

    def testCPTenureCurrentResponseTotal(self):
        """Test CPTenureCurrentResponseTotal"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
