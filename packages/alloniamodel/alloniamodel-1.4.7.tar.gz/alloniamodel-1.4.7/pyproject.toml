[tool.poetry]
name = "alloniamodel"
version = "1.4.7"
description = "Class that wraps the notion of AI model to include an automatic persistence of trained models, with a complete history of their trainings and the associated metrics"
authors = ["ALLONIA"]
readme = "README.md"

[tool.poetry.dependencies]
allonias3 = { version = "^1.7.0", extras = ["datatypehandler"] }
python = "^3.9"
scikit-learn = "^1.5.2"
setuptools = "^75.1.0"

[tool.poetry.group.dev.dependencies]
pytest-mock = "^3.10.0"
pre-commit = "^3.3.3"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
pytest-env = "^1.1.3"
pytest-xdist = "^3.5.0"
expects = "^0.9.0"
ipython = "^8.18.1"
types-requests = "^2.31.0"
pytest-minio-mock = { git="https://github.com/cottephi/pytest-minio-mock.git", branch="master" }
ruff = "0.6.3"
bandit = "1.7.9"
pandoc = "^2.3"


[tool.poetry.group.docs.dependencies]
sphinx-autodoc-typehints = {version = "^2.4.1", python = ">=3.10"}
sphinx = {version = "^8.0.2", python = ">=3.10"}
sphinxcontrib-mermaid = {version = "^0.9.2", python = ">=3.10"}
pydata_sphinx_theme = {version = "^0.15.4", python = ">=3.10"}
sphinx_mdinclude = {version = "^0.6.2", python = ">=3.10"}
sphinx_copybutton = {version = "^0.5.2", python = ">=3.10"}
nbsphinx = {version = "^0.9.5", python = ">=3.10"}
sphinx-gallery = {version = "^0.17.1", python = ">=3.10"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "."
cache_dir = ".cache/pytest_cache"
testpaths = ['tests']
markers = [
    "second: mark test that should run after others"
]
addopts = [
    "--cov-report=term",
    "--cov-report=html",
    "--cov-report=xml",
    "--numprocesses=auto",
    "--dist=load",
    "--force-sugar",
]
required_plugins = [
    "pytest-env>=1.1.3",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
]
env = [
    "USER_TOKEN_ID=3d8f116e06586b0e",
    "USER_TOKEN_SECRET=fad8ac6f54d0f0f0c877d11af8124610",
    "TRACK_ID=b3568fd7-20c5-4d32-a488-9c34e49aa23d",
]

[tool.coverage.run]
# Branches mode has an issue, it's why we don't have 100% coverage for now:
# https://github.com/nedbat/coveragepy/issues/605
branch = true
omit = [
    "alloniamodel/errors.py",
    "tests/*",
]

[tool.coverage.report]
precision = 2

[tool.ruff]
exclude = [
    ".git",
    ".eggs",
    ".gitlab",
    ".idea",
    ".mypy_cache",
    ".ruff_cache",
    ".vscode",
    "__pycache__",
    "dist",
    "docs",
    "htmlcov",
    ".venv",
]
line-length = 80
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",
    "ANN",
    "TD",
    "FIX",
    "COM812",
    "ISC001",
    "PT001",
    "TRY003",
    "EM101",
    "EM102",
    "TRY201",
    "G004",
    "SIM105",
    "BLE001",
    "B008",
    "FBT001",
    "TID252",
    "PLR2004",
    "TRY002",
    "FBT002",
    "FBT003",
    "S608", # Already catched by bandit.
    "S310", # same
    "S301", # same
    "DTZ005",
    "ERA001",
    "UP007",  # need to be backward-compatible with python3.9
    "UP038",  # same
    "B905",  # same
    "UP035",  # same
    "PT019",  # sounds good, doesn't work in python3.9
    "T201",  # I like prints in pytests
    "SLF001",
]

fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pylint]
max-args = 9

[tool.ruff.lint.mccabe]
max-complexity = 13

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["SLF001", "PLR0913", "PT007", "PGH003"]

[tool.bandit]
exclude_dirs = [
    "tests",
    ".venv",
]
