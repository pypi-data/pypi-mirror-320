import os

from streamlit_blockly.config import RELEASE

try:
    import streamlit.components.v1 as components
except ImportError:
    raise ImportError("Please install required dependencies using: pip install barfi[streamlit]")

_RELEASE = RELEASE

# Declare a Streamlit component. `declare_component` returns a function
# that is used to create instances of the component. We're naming this
# function "_component_func", with an underscore prefix, because we don't want
# to expose it directly to users. Instead, we will create a custom wrapper
# function, below, that will serve as our component's public API.

# It's worth noting that this call to `declare_component` is the
# *only thing* you need to do to create the binding between Streamlit and
# your component frontend. Everything else we do in this file is simply a
# best practice.

if not _RELEASE:
    _component_func = components.declare_component(
        "st_blockly",
        url="http://localhost:3001",
    )
else:
    st_barfi_dir = os.path.dirname(os.path.abspath(__file__))
    build_dir = os.path.join(st_barfi_dir, "static")
    _component_func = components.declare_component("st_blockly", path=build_dir)

# Create a wrapper function for the component. This is an optional
# best practice - we could simply expose the component function returned by
# `declare_component` and call it done. The wrapper allows us to customize
# our component's API: we can pre-process its input args, post-process its
# output value, and add a docstring for users.

# We use the special "key" argument to assign a fixed identity to this
# component instance. By default, when a component's arguments change,
# it is considered a new instance and will be re-mounted on the frontend
# and lose its current state. In this case, we want to vary the component's
# "name" argument without having it get recreated.


def st_blockly(
    grid=None,
    trashcan=True,
    zoom=None,
    toolbox=None,
    generator_language="JavaScript",
    show_button=False,
    width="100%",
    height="500px",
    border="1px solid #ccc",
    box_sizing="border-box",
    key=None,
):
    """
    Create a new instance of the Blockly Streamlit component.

    Parameters
    ----------
    grid: dict or None
        A dictionary specifying grid settings (e.g., spacing, length, color, snap).
    trashcan: bool
        Whether to enable the trashcan feature in the Blockly workspace.
    zoom: dict or None
        A dictionary specifying zoom settings (e.g., controls, wheel, startScale, maxScale, minScale, scaleSpeed).
    toolbox: str or None
        A string containing the XML definition of the Blockly toolbox.
    generator_language: str
        The programming language for the code generator (e.g., "JavaScript", "Python", "Lua", "Dart", "PHP").
    width: str
        CSS width of the Blockly workspace (default: "100%").
    height: str
        CSS height of the Blockly workspace (default: "500px").
    border: str
        CSS border of the Blockly workspace (default: "1px solid #ccc").
    box_sizing: str
        CSS box-sizing of the Blockly workspace (default: "border-box").
    key: str or None
        An optional key that uniquely identifies this component.

    Returns
    -------
    str
        The code generated by the Blockly workspace in the selected generator language.
    """
    component_value = _component_func(
        grid=grid,
        trashcan=trashcan,
        zoom=zoom,
        toolbox=toolbox,
        GeneratorLanguage=generator_language,
        showButton=show_button,
        width=width,
        height=height,
        border=border,
        boxSizing=box_sizing,
        key=key,
        default="",
    )
    return component_value
