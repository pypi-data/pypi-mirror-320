from .checklist import ChecklistClassifier2
from .list import ListEvaluator


def evaluate(spec: dict, input: any, output: any):
    """
    Evaluate an output against a specification.

    Args:
        spec: The evaluation specification from the task.
        input: The input to the task.
        output: The output generated by the task.

    Returns:
        A dictionary containing the evaluation result.
    """
    # Set the minimum score required to pass
    min_score = spec.get('min_score', 1.0)

    context = spec.get('context', '')

    evaluator = None
    if 'checklist' in spec:
        evaluator = ChecklistClassifier2(context=context)
        result = evaluator(output, spec['checklist'], input=input)
    elif 'list' in spec:
        evaluator = ListEvaluator(spec['list'])
        result = evaluator(output)
    else:
        raise ValueError("No evaluator specified")

    return {
        'score': result['score'] if isinstance(result, dict) else result.score,
        'passed': (
            result['score'] if isinstance(result, dict) else result.score
        ) >= min_score,
        'details': result['metadata'] if isinstance(result, dict) else result.metadata
    }
