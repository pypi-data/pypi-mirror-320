Metadata-Version: 2.4
Name: milkpay.cryptopay
Version: 1.1.2
Summary: A lightweight CryptoPay SDK
Project-URL: Repository, https://github.com/py-stollen/milkpay-cryptopay
Project-URL: Documentation, https://help.crypt.bot/crypto-pay-api
Author-email: wakaree <nullmatawasoradesu@gmail.com>
Maintainer-email: wakaree <nullmatawasoradesu@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: asyncio,client,crypto,cryptobot,cryptopay,payments,wrapper
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.9
Requires-Dist: pydantic<2.10,>=2.4.1
Requires-Dist: stollen<1.0,>=0.2.1
Provides-Extra: dev
Requires-Dist: black~=24.8.0; extra == 'dev'
Requires-Dist: mypy~=1.11.1; extra == 'dev'
Requires-Dist: pre-commit~=3.8.0; extra == 'dev'
Requires-Dist: ruff~=0.6.1; extra == 'dev'
Description-Content-Type: text/x-rst


#################
milkpay-cryptopay
#################

**milkpay** is a set of lightweight crypto payment system SDKs.

Installation
------------

..  code-block:: bash

    pip install -U milkpay-cryptopay

Simple example
--------------

.. code-block:: python

    import asyncio
    import logging
    import uuid
    from typing import Final

    from milkpay.cryptopay import Cryptopay
    from milkpay.cryptopay.enums import Asset

    API_TOKEN: Final[str] = "API_TOKEN_HERE"


    async def main() -> None:
        logging.basicConfig(level=logging.DEBUG)
        async with Cryptopay(
            api_token=API_TOKEN,
            production=False,
            force_detailed_errors=True,
        ) as cryptopay:
            logging.info(
                await cryptopay.transfer(
                    user_id=5945468457,
                    asset=Asset.USDT,
                    amount=1.1,
                    spend_id=int(uuid.uuid4()),
                )
            )


    if __name__ == "__main__":
        asyncio.run(main())

