{"version":3,"sources":["StreamlitContainerWidth.tsx","index.tsx"],"names":["withStreamlitConnection","props","useState","prevWidth","setprevWidth","useEffect","timeout","roundedWidth","Math","round","width","setTimeout","Streamlit","setComponentValue","clearTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAuCeA,eAxBiB,SAACC,GAC/B,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,qBAAU,WAER,IAGMC,EAHAC,EAA+C,IAAhCC,KAAKC,MAAMR,EAAMS,MAAQ,KAE9C,GAAIH,IAAiBJ,EAQnB,OALAG,EAAUK,YAAW,WACnBC,IAAUC,kBAAkB,CAAEH,MAAOH,IACrCH,EAAaG,KACZ,KAEI,WACLO,aAAaR,MAGhB,CAACL,EAAMS,MAAOP,IAEV,QChCTY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.da71244e.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport {\n  useEffect,\n  useState\n} from \"react\"\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\n\nconst StreamlitContainerWidth = (props: ComponentProps) => {\n  const [prevWidth, setprevWidth] = useState(0);\n\n  useEffect(() => {\n    // Round width to the nearest 100\n    const roundedWidth = Math.round(props.width / 100) * 100;\n\n    if (roundedWidth !== prevWidth) {\n      let timeout: ReturnType<typeof setTimeout>;\n\n      timeout = setTimeout(() => {\n        Streamlit.setComponentValue({ width: roundedWidth });\n        setprevWidth(roundedWidth);\n      }, 100);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [props.width, prevWidth]);\n\n  return null;\n}\n\nexport default withStreamlitConnection(StreamlitContainerWidth);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitContainerWidth from \"./StreamlitContainerWidth\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitContainerWidth />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}