# This file is autogenerated by maturin v1.6.0
# To update, run
#
#    maturin generate-ci github
#
name: maturin-CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          # I don't need the exotic stuff let's just get this working!
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          # - runner: ubuntu-latest
            # target: armv7
          # - runner: ubuntu-latest
            # target: s390x
          # - runner: ubuntu-latest
            # target: ppc64le
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          # - 'pypy3.10'
          # '3.13'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          # python-version: '<3.13' # for now due to PyO3 gil issue...
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          # args: --release --out dist --find-interpreter
          args: --release --out dist -i ${{ matrix.python-version}}
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-${{ matrix.python-version }}
          path: dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install corrosiffpy[test] --find-links dist --force-reinstall
          pip install pytest
          pytest tests
        env:
          DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}
      - name: pytest
        # numpy2 fails to build on armv7?, test gets killed on aarch partway through for some reason?
        if: ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'aarch64' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip pytest
          run: |
            set -e
            pip3 install corrosiffpy[test] --find-links dist --force-reinstall
            pytest tests
          env: |
            DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
            DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
            DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
            DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - 'pypy3.10'
          # '3.13'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          # python-version: '<3.13' # for now due to PyO3 gil issue...
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          # args: --release --out dist --find-interpreter
          args: --release --out dist -i ${{ matrix.python-version}}
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}-${{ matrix.python-version }}
          path: dist
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') && !startsWith(matrix.platform.target, 'arm')}}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.platform.target }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          install: |
            apk add py3-virtualenv
          run: |
            set -e
            python3 -m virtualenv .venv
            source .venv/bin/activate
            pip install pytest
            pip install corrosiffpy[test] --find-links dist --force-reinstall
            pytest tests
          env: |
            DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
            DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
            DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
            DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}-${{ strategy.job-index }}
          path: dist
      # - name: Set Swap Space
      #   uses: pierotofy/set-swap-space@v1.0
      #   with:
      #     swap-size-gb: 20
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          echo "::warning title=PyTests-Skipped::Pytests skipped on Windows due to low memory allocation"
        # run: |
        #   set -e
        #   python3 -m venv .venv
        #   source .venv/Scripts/activate
        #   pip install corrosiffpy[test] --find-links dist --force-reinstall
        #   pip install pytest
        #   pytest tests
        env:
          DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}-${{ matrix.platform.target }}-${{ strategy.job-index }}
          path: dist
      - name: pytest
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install corrosiffpy[test] --find-links dist --force-reinstall
          pip install pytest
          pytest tests
        env:
          DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}
        

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    needs: [linux, musllinux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: List artifacts
        run: ls -lR
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing --non-interactive wheels-*/*
