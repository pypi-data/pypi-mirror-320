# Code generated by TRAC

import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa


@_dc.dataclass
class _ConfigFile:

    config: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)


@_dc.dataclass
class PluginConfig:

    protocol: "str" = ""

    publicProperties: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)

    properties: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)

    secrets: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)


@_dc.dataclass
class PlatformInfo:

    environment: "str" = ""

    production: "bool" = False

    deploymentInfo: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)


@_dc.dataclass
class AuthenticationConfig:

    jwtIssuer: "str" = ""

    jwtExpiry: "int" = 0

    jwtLimit: "int" = 0

    jwtRefresh: "int" = 0

    provider: "PluginConfig" = _dc.field(default_factory=lambda: PluginConfig())

    loginPath: "_tp.Optional[str]" = None

    refreshPath: "_tp.Optional[str]" = None

    returnPath: "_tp.Optional[str]" = None

    disableAuth: "bool" = False

    disableSigning: "bool" = False

    systemUserId: "str" = ""

    systemUserName: "str" = ""

    systemTicketDuration: "int" = 0

    systemTicketRefresh: "int" = 0

    externalSystems: "_tp.Dict[str, PluginConfig]" = _dc.field(default_factory=dict)


@_dc.dataclass
class StorageConfig:

    buckets: "_tp.Dict[str, PluginConfig]" = _dc.field(default_factory=dict)

    """TODO: Rename "buckets" as "internal" for 0.7"""

    external: "_tp.Dict[str, PluginConfig]" = _dc.field(default_factory=dict)

    defaultBucket: "str" = ""

    defaultFormat: "str" = ""


@_dc.dataclass
class ServiceConfig:

    enabled: "_tp.Optional[bool]" = None

    alias: "str" = ""

    port: "int" = 0

    properties: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)
