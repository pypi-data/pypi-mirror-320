{"version":3,"file":"8657.6d66b88881356440fa91.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Bucket/Code.js","webpack://quilt-navigator/./app/embed/Dir.js","webpack://quilt-navigator/./app/embed/getCrumbs.js"],"sourcesContent":["import hljs from 'highlight.js'\nimport 'highlight.js/styles/default.css'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\nimport * as Lab from '@material-ui/lab'\n\nimport * as Notifications from 'containers/Notifications'\nimport copyToClipboard from 'utils/clipboard'\n\nimport Section from './Section'\n\nfunction highlight(lang, str) {\n  if (lang && hljs.getLanguage(lang)) {\n    try {\n      const { value } = hljs.highlight(str, { language: lang })\n      // eslint-disable-next-line react/no-danger\n      return <span dangerouslySetInnerHTML={{ __html: value }} />\n    } catch (err) {\n      // istanbul ignore next\n      console.error(err) // eslint-disable-line no-console\n    }\n  }\n  return str\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    marginBottom: t.spacing(-2),\n    marginLeft: t.spacing(3),\n    marginTop: t.spacing(-2),\n  },\n  btn: {\n    height: 32,\n  },\n  code: {\n    fontFamily: t.typography.monospace.fontFamily,\n    fontSize: t.typography.body2.fontSize,\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'pre',\n  },\n}))\n\n// children: [{ label: str, contents: str, hl: lang }]\nexport default function Code({ defaultSelected = 0, children, ...props }) {\n  const classes = useStyles()\n  const { push } = Notifications.use()\n\n  const [selectedIndex, select] = React.useState(defaultSelected)\n  const handleChange = React.useCallback(\n    (e, newIdx) => {\n      e.stopPropagation()\n      if (newIdx == null) return\n      select(newIdx)\n    },\n    [select],\n  )\n\n  const selected = children[selectedIndex]\n\n  const handleCopy = React.useCallback(\n    (e) => {\n      e.stopPropagation()\n      copyToClipboard(selected.contents)\n      push('Code has been copied to clipboard')\n    },\n    [selected.contents, push],\n  )\n\n  return (\n    <Section\n      icon=\"code\"\n      heading=\"Code\"\n      extraSummary={({ expanded }) => (\n        <M.Fade in={expanded}>\n          <div className={classes.container}>\n            <Lab.ToggleButtonGroup\n              size=\"small\"\n              value={selectedIndex}\n              exclusive\n              onChange={handleChange}\n            >\n              {children.map(({ label }, idx) => (\n                <Lab.ToggleButton value={idx} key={label} className={classes.btn}>\n                  {label}\n                </Lab.ToggleButton>\n              ))}\n            </Lab.ToggleButtonGroup>\n            <M.Box ml={1} />\n            <M.IconButton onClick={handleCopy} title=\"Copy to clipboard\">\n              <M.Icon style={{ fontSize: 18 }}>file_copy</M.Icon>\n            </M.IconButton>\n          </div>\n        </M.Fade>\n      )}\n      {...props}\n    >\n      <div className={classes.code}>{highlight(selected.hl, selected.contents)}</div>\n    </Section>\n  )\n}\n","import { basename } from 'path'\n\nimport dedent from 'dedent'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nimport { copyWithoutSpaces, render as renderCrumbs } from 'components/BreadCrumbs'\nimport * as AWS from 'utils/AWS'\nimport AsyncResult from 'utils/AsyncResult'\nimport * as Config from 'utils/Config'\nimport { useData } from 'utils/Data'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport parseSearch from 'utils/parseSearch'\nimport * as s3paths from 'utils/s3paths'\n\nimport Code from 'containers/Bucket/Code'\nimport * as FileView from 'containers/Bucket/FileView'\nimport { Listing, PrefixFilter } from 'containers/Bucket/Listing'\nimport Summary from 'containers/Bucket/Summary'\nimport { displayError } from 'containers/Bucket/errors'\nimport * as requests from 'containers/Bucket/requests'\n\nimport * as EmbedConfig from './EmbedConfig'\nimport getCrumbs from './getCrumbs'\n\nconst formatListing = ({ urls, scope }, r) => {\n  const dirs = r.dirs.map((name) => ({\n    type: 'dir',\n    name: s3paths.ensureNoSlash(s3paths.withoutPrefix(r.path, name)),\n    to: urls.bucketDir(r.bucket, name),\n  }))\n  const files = r.files.map(({ key, size, modified, archived }) => ({\n    type: 'file',\n    name: basename(key),\n    to: urls.bucketFile(r.bucket, key),\n    size,\n    modified,\n    archived,\n  }))\n  const items = [...dirs, ...files]\n  if (r.path !== '' && r.path !== scope && !r.prefix) {\n    items.unshift({\n      type: 'dir',\n      name: '..',\n      to: urls.bucketDir(r.bucket, s3paths.up(r.path)),\n    })\n  }\n  // filter-out files with same name as one of dirs\n  return R.uniqBy(R.prop('name'), items)\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  crumbs: {\n    ...t.typography.body1,\n    maxWidth: '100%',\n    overflowWrap: 'break-word',\n  },\n}))\n\nexport default function Dir({\n  match: {\n    params: { bucket, path: encodedPath = '' },\n  },\n  location: l,\n}) {\n  const cfg = EmbedConfig.use()\n  const { noDownload } = Config.use()\n  const classes = useStyles()\n  const { urls } = NamedRoutes.use()\n  const history = useHistory()\n  const s3 = AWS.S3.use()\n  const { prefix } = parseSearch(l.search)\n  const path = s3paths.decode(encodedPath)\n  const dest = path ? basename(path) : bucket\n\n  const code = React.useMemo(\n    () => [\n      {\n        label: 'Python',\n        hl: 'python',\n        contents: dedent`\n          import quilt3 as q3\n          b = q3.Bucket(\"s3://${bucket}\")\n          # list files\n          b.ls(\"${path}\")\n          # download\n          b.fetch(\"${path}\", \"./${dest}\")\n        `,\n      },\n      {\n        label: 'CLI',\n        hl: 'bash',\n        contents: dedent`\n          # list files\n          aws s3 ls \"s3://${bucket}/${path}\"\n          # download\n          aws s3 cp --recursive \"s3://${bucket}/${path}\" \"./${dest}\"\n        `,\n      },\n    ],\n    [bucket, path, dest],\n  )\n\n  const [prev, setPrev] = React.useState(null)\n\n  React.useLayoutEffect(() => {\n    // reset accumulated results when path and/or prefix change\n    setPrev(null)\n  }, [path, prefix])\n\n  const data = useData(requests.bucketListing, {\n    s3,\n    bucket,\n    path,\n    prefix,\n    prev,\n  })\n\n  const loadMore = React.useCallback(() => {\n    AsyncResult.case(\n      {\n        Ok: (res) => {\n          // this triggers a re-render and fetching of next page of results\n          if (res.continuationToken) setPrev(res)\n        },\n        _: () => {},\n      },\n      data.result,\n    )\n  }, [data.result, setPrev])\n\n  const setPrefix = React.useCallback(\n    (newPrefix) => {\n      history.push(urls.bucketDir(bucket, path, newPrefix))\n    },\n    [history, urls, bucket, path],\n  )\n\n  return (\n    <M.Box pt={2} pb={4}>\n      <M.Box display=\"flex\" alignItems=\"flex-start\" mb={2}>\n        <div className={classes.crumbs} onCopy={copyWithoutSpaces}>\n          {renderCrumbs(getCrumbs({ bucket, path, urls, scope: cfg.scope }))}\n        </div>\n        <M.Box flexGrow={1} />\n        {!noDownload && (\n          <FileView.ZipDownloadForm\n            suffix={`dir/${bucket}/${path}`}\n            label=\"Download directory\"\n            newTab\n          />\n        )}\n      </M.Box>\n\n      {!cfg.hideCode && <Code gutterBottom>{code}</Code>}\n\n      {data.case({\n        Err: displayError(),\n        Init: () => null,\n        _: (x) => {\n          const res = AsyncResult.getPrevResult(x)\n\n          if (!res) return <M.CircularProgress />\n\n          const items = formatListing({ urls, scope: cfg.scope }, res)\n\n          const locked = !AsyncResult.Ok.is(x)\n\n          return (\n            <>\n              <Listing\n                items={items}\n                locked={locked}\n                loadMore={loadMore}\n                truncated={res.truncated}\n                prefixFilter={res.prefix}\n                toolbarContents={\n                  <PrefixFilter\n                    key={`${res.bucket}/${res.path}`}\n                    prefix={res.prefix}\n                    setPrefix={setPrefix}\n                  />\n                }\n              />\n              <Summary files={res.files} path={path} />\n            </>\n          )\n        },\n      })}\n    </M.Box>\n  )\n}\n","import { basename } from 'path'\n\nimport * as R from 'ramda'\nimport * as React from 'react'\n\nimport { Crumb } from 'components/BreadCrumbs'\nimport * as s3paths from 'utils/s3paths'\n\nexport default ({ bucket, path, urls, scope, excludeBase = false }) => {\n  const scoped = scope && path.startsWith(scope)\n  const scopedPath = scoped ? path.substring(scope.length) : path\n  const root = { label: scoped ? basename(scope) : 'ROOT', path: '' }\n  const start = excludeBase ? s3paths.up(scopedPath) : scopedPath\n  const items = [root, ...s3paths.getBreadCrumbs(start)].map(({ label, path: segPath }) =>\n    Crumb.Segment({\n      label,\n      to:\n        segPath === scopedPath\n          ? undefined\n          : urls.bucketDir(bucket, `${scoped ? scope : ''}${segPath}`),\n    }),\n  )\n  const interspersed = R.intersperse(Crumb.Sep(<>&nbsp;/ </>), items)\n  return excludeBase ? [...interspersed, Crumb.Sep(<>&nbsp;/</>)] : interspersed\n}\n"],"names":["useStyles","t","container","alignItems","display","marginBottom","spacing","marginLeft","marginTop","btn","height","code","fontFamily","typography","monospace","fontSize","body2","overflowX","overflowY","whiteSpace","Code","defaultSelected","children","props","classes","push","selectedIndex","select","handleChange","e","newIdx","stopPropagation","selected","handleCopy","contents","icon","heading","extraSummary","expanded","in","className","size","value","exclusive","onChange","map","idx","label","key","ml","onClick","title","style","lang","str","language","dangerouslySetInnerHTML","__html","err","console","error","highlight","hl","crumbs","body1","maxWidth","overflowWrap","Dir","params","bucket","path","encodedPath","l","cfg","noDownload","urls","history","s3","prefix","search","dest","basename","prev","setPrev","data","loadMore","Ok","res","continuationToken","_","result","setPrefix","newPrefix","bucketDir","pt","pb","mb","onCopy","scope","flexGrow","suffix","newTab","hideCode","gutterBottom","case","Err","Init","x","items","r","dirs","name","type","to","files","modified","archived","bucketFile","unshift","formatListing","locked","truncated","prefixFilter","toolbarContents","excludeBase","scoped","startsWith","scopedPath","substring","length","root","start","segPath","undefined","interspersed"],"sourceRoot":""}