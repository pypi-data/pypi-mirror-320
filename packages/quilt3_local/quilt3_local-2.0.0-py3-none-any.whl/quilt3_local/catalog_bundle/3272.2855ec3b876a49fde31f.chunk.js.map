{"version":3,"file":"3272.2855ec3b876a49fde31f.chunk.js","mappings":"uNASMA,EAAY,KAAa,SAACC,GAAM,OACpCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,MAAO,QAETC,OAAQ,CACNC,UAAWN,EAAEO,QAAQ,IAPa,IAkBvB,SAASC,EAA2B,G,IACjDC,EAAQ,WACRC,EAAQ,WACRC,EAAY,eACZC,EAAK,QACLC,EAAM,SAEAC,EAAUf,IACVgB,EAAW,WAAc,WAAM,eAAoBF,EAApB,GAA6B,CAACA,IAC7D,EAAsB,WAC1BD,EAAQ,CAACA,GAAS,IADbP,EAAM,KAAEW,EAAS,KAGlB,EAAoB,WAAe,IAAWL,IAA7CM,EAAK,KAAEC,EAAQ,KAChBC,EAAe,eACnB,SAACC,GACCJ,EAAUD,EAASK,IACnBF,EAASE,GACTV,EAAS,IAAeU,GAC1B,GACA,CAACV,EAAUK,IAEb,OACE,uBAAKM,UAAWP,EAAQb,MACtB,gBAAC,IAAU,CACTQ,SAAUA,EACVJ,OAAQA,EACRiB,eAAa,EACbZ,SAAUS,EACVF,MAAOA,EACPJ,OAAQA,IAEV,gBAAC,IAAoB,CAACQ,UAAWP,EAAQT,OAAQO,MAAOP,IAG9D,C","sources":["webpack://quilt-navigator/./app/components/FileEditor/QuiltConfigEditor/QuiltConfigEditor.tsx"],"sourcesContent":["import type { ErrorObject } from 'ajv'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport JsonEditor from 'components/JsonEditor'\nimport JsonValidationErrors from 'components/JsonValidationErrors'\nimport { JsonSchema, makeSchemaValidator } from 'utils/json-schema'\nimport * as YAML from 'utils/yaml'\n\nconst useStyles = M.makeStyles((t) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n  errors: {\n    marginTop: t.spacing(1),\n  },\n}))\n\nexport interface QuiltConfigEditorProps {\n  disabled?: boolean\n  onChange: (value: string) => void\n  initialValue?: string\n  error: Error | null\n}\n\nexport default function QuiltConfigEditorSuspended({\n  disabled,\n  onChange,\n  initialValue,\n  error,\n  schema,\n}: QuiltConfigEditorProps & { schema?: JsonSchema }) {\n  const classes = useStyles()\n  const validate = React.useMemo(() => makeSchemaValidator(schema), [schema])\n  const [errors, setErrors] = React.useState<(Error | ErrorObject)[]>(\n    error ? [error] : [],\n  )\n  const [value, setValue] = React.useState(YAML.parse(initialValue))\n  const handleChange = React.useCallback(\n    (json) => {\n      setErrors(validate(json))\n      setValue(json)\n      onChange(YAML.stringify(json))\n    },\n    [onChange, validate],\n  )\n  return (\n    <div className={classes.root}>\n      <JsonEditor\n        disabled={disabled}\n        errors={errors}\n        multiColumned\n        onChange={handleChange}\n        value={value}\n        schema={schema}\n      />\n      <JsonValidationErrors className={classes.errors} error={errors} />\n    </div>\n  )\n}\n"],"names":["useStyles","t","root","display","flexDirection","width","errors","marginTop","spacing","QuiltConfigEditorSuspended","disabled","onChange","initialValue","error","schema","classes","validate","setErrors","value","setValue","handleChange","json","className","multiColumned"],"sourceRoot":""}