!   Graphics demo

    script Graphics-Demo

    rectangle BlueRect
    ellipse RedEllipse
    ellipse GreenCircle
    image Image
    variable Spec
    variable UpDown
    variable Steps
    variable Step
    variable Left
    variable Bottom
    variable DX
    variable DY
    variable B
    variable L
    variable N
    variable X
    variable Y

!    debug step

    create window title `Graphics demo` at 300 300 size 640 480 fill color 255 255 200

    load Spec from `json/graphics-demo.json`
    render spec Spec

    attach BlueRect to `bluerect`
    on click BlueRect print `Click Blue`
    attach RedEllipse to `redellipse`
    on click RedEllipse print `Click Red`
    attach GreenCircle to `greencircle`
    on click GreenCircle print `Click Green`
    attach Image to `dawn`
    on click Image print ` Click Image`

    fork to FlashGreen

    gosub to InitEllipse
    clear UpDown
    put 0 into N
    while true
    begin
        if UpDown
        begin
            if N is less than 200
            begin
                move BlueRect by -1 -1
            end
            else
            begin
                put 0 into N
                clear UpDown
            end
        end
        else
        begin
            if N is less than 200
            begin
                move BlueRect by 1 1
            end
            else
            begin
                put 0 into N
                set UpDown
            end
        end
        increment N
        gosub to MoveEllipse
        wait 1 tick
    end
    close window
    exit

InitEllipse:
    put attribute `left` of RedEllipse into Left
    put attribute `bottom` of RedEllipse into Bottom
    put random 340 into X
    put random 280 into Y
    add 50 to X
    add 50 to Y
    take Left from X giving DX
    take Bottom from Y giving DY
    put 20 into Steps
    put 0 into Step
    return

MoveEllipse:
    multiply DX by Step giving X
    divide X by Steps
    add X to Left giving L
    multiply DY by Step giving Y
    divide Y by Steps
    add Y to Bottom giving B
    move RedEllipse to L B
    increment Step
    if Step is Steps gosub to InitEllipse
    return

FlashGreen:
    while true
    begin
        wait 50 ticks
        hide GreenCircle
        wait 50 ticks
        show GreenCircle
    end
