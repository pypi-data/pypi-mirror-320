[project]
name = "FoxDotChord"
description = "Chords for use in renardo or FoxDot"
version = "0.0.12b1"
authors = [{ name = "taconi", email = "igor.taconi@protonmail.com" }]
maintainers = [{ name = "taconi", email = "igor.taconi@protonmail.com" }]
license = { text = "GPL-3.0-or-later" }
readme = "README.md"
keywords = [
  "FoxDot",
  "foxdot",
  "renardo",
  "chord",
  "algorave",
  "live-coding",
  "music",
  "patterns",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Utilities",
  "Topic :: Artistic Software",
  "Topic :: Multimedia :: Sound/Audio",
]

requires-python = ">=3.9,<4.0"
dependencies = []

[project.urls]
Homepage = "https://codeberg.org/taconi/FoxDotChord"
Documentation = "https://foxdotchord.readthedocs.io"
Repository = "https://codeberg.org/taconi/FoxDotChord"
"Contributor Guide" = "https://foxdotchord.readthedocs.io/contributing"
Changelog = "https://foxdotchord.readthedocs.io/changelog/"
Issues = "https://codeberg.org/taconi/FoxDotChord/issues"

[tool.poetry]
packages = [{ include = "FoxDotChord" }]

[tool.poetry.group.dev.dependencies]
towncrier = "^24.8.0"
nox = "^2024.10.9"
pre-commit = "^4.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.39"
mkdocstrings-python = "^1.11.1"
mkdocs-static-i18n = { extras = ["material"], version = "^1.2.3" }

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-clarity = "^1.0.1"
pytest-cov = "^5.0.0"
pytest-sugar = "^1.0.0"

[tool.poetry.group.foxdot]
optional = true
[tool.poetry.group.foxdot.dependencies]
foxdot = { git = "https://gitlab.com/iShapeNoise/foxdot", rev = "3bca8560" }

[tool.poetry.group.renardo]
optional = true
[tool.poetry.group.renardo.dependencies]
renardo = ">=1.0.0.dev13"

[tool.poetry.group.style.dependencies]
autoflake = "^2.3.1"
pyproject-flake8 = "^7.0.0"
black = "^24.10.0"
isort = "^5.13.2"
mypy = "^1.11.2"

[tool.autoflake]
remove_rhs_for_unused_variables = true
remove_all_unused_imports = true
remove_unused_variables = true
remove_duplicate_keys = true

[tool.flake8]
max-complexity = 10

[tool.black]
line-length = 79
target-version = ["py39", "py310", "py311", "py312", "py313"]
skip-string-normalization = true

[tool.isort]
# py_version = "313"
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
addopts = "-vv --diff-symbols --cache-clear --cov-report html --cov-report term --cov-config pyproject.toml --cov=FoxDotChord/ --doctest-modules"
filterwarnings = ["ignore::DeprecationWarning"]
markers = ["major", "chromatic", "notes"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",

  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",

  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.towncrier]
package = "FoxDotChord"
directory = "docs/en/changelog.d"
filename = "docs/en/changelog.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://codeberg.org/taconi/FoxDotChord/src/tag/{version}) - {project_date}"
issue_format = "[#{issue}](https://codeberg.org/taconi/FoxDotChord/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = ":shield: Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = ":fire: Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = ":hourglass: Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = ":sparkles: Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = ":twisted_rightwards_arrows: Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = ":bug: Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = ":books: Documentation"
showcontent = true

[build-system]
requires = ["poetry-core (>=2.0.1,<3.0)"]
build-backend = "poetry.core.masonry.api"
