Metadata-Version: 2.3
Name: langchain-fmp-data
Version: 0.1.0
Summary: An integration package connecting FmpData and LangChain
Home-page: https://github.com/langchain-ai/langchain
License: MIT
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: faiss-cpu (>=1.9.0.post1,<2.0.0)
Requires-Dist: fmp-data[langchain] (>=0.3.1,<0.4.0)
Requires-Dist: langchain (>=0.3.14,<0.4.0)
Requires-Dist: langchain-community (>=0.3.14,<0.4.0)
Requires-Dist: langchain-core (>=0.3.15,<0.4.0)
Requires-Dist: langchain-openai (>=0.3.0,<0.4.0)
Requires-Dist: langgraph (>=0.2.62,<0.3.0)
Project-URL: Repository, https://github.com/langchain-ai/langchain
Project-URL: Release Notes, https://github.com/langchain-ai/langchain/releases?q=tag%3A%22fmp-data%3D%3D0%22&expanded=true
Project-URL: Source Code, https://github.com/langchain-ai/langchain/tree/master/libs/partners/fmp-data
Description-Content-Type: text/markdown

# langchain-fmp-data

This package contains the LangChain integration with FMPData

## Installation

```bash
pip install -U langchain-fmp-data
```

## ToolBox

You can pass a natural language query indicating what type of tools you want to have. ToolKit return list of num_results tools that best match your query.

OpenAI is used for getting embedding so we can run similarity search on tools.

```python
import os
from langchain_fmp_data import FMPDataToolkit

os.environ["FMP_API_KEY"] = "your-fmp-api-key" # pragma: allowlist secret
os.environ["OPENAI_API_KEY"] = "your-openai-api-key" # pragma: allowlist secret

query = "Stock market prices, fundamental and technical data"

fmp_toolkit = FMPDataToolkit(query=query, num_results=10)

tools = fmp_toolkit.get_tools()
```

## Tool

Tool gives you a lang-graph based agent that can answer your questions. Under the hood, the agent retrieve tools relevant to your query and call Open AI to answer your question.

```python
import os
from langchain_fmp_data import FMPDataTool

os.environ["FMP_API_KEY"] = "your-fmp-api-key" # pragma: allowlist secret
os.environ["OPENAI_API_KEY"] = "your-openai-api-key" # pragma: allowlist secret

query = "What is the latest price of Bitcoin?"

tool = FMPDataTool()

response = tool.invoke({"query": query})
print(response)
```

