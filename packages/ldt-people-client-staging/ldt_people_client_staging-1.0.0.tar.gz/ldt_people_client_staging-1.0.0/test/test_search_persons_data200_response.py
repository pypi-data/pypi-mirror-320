# coding: utf-8

"""
    Live Data People API

    This API provides information about people as observed by Live Data

    The version of the OpenAPI document: 1.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_people_client_staging.models.search_persons_data200_response import SearchPersonsData200Response

class TestSearchPersonsData200Response(unittest.TestCase):
    """SearchPersonsData200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchPersonsData200Response:
        """Test SearchPersonsData200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchPersonsData200Response`
        """
        model = SearchPersonsData200Response()
        if include_optional:
            return SearchPersonsData200Response(
                people = [
                    ldt_people_client_staging.models.person.Person(
                        id = '', 
                        created_at = '', 
                        info_change_detected_at = '', 
                        title_change_detected_at = '', 
                        company_change_detected_at = '', 
                        position = ldt_people_client_staging.models.job.Job(
                            title = '', 
                            level = 'C-Team', 
                            function = 'Banking and Wealth Management', 
                            started_at = '', 
                            started_at_year_only = True, 
                            ended_at = '', 
                            ended_at_year_only = True, 
                            location = '', 
                            email = '', 
                            email_status = 'valid', 
                            direct_dial_number = '', 
                            company = ldt_people_client_staging.models.company.Company(
                                id = '', 
                                name = '', 
                                location = '', 
                                linkedin = '', 
                                ticker = '', 
                                type = 'Privately Held', 
                                address = '', 
                                country = '', 
                                domain = '', 
                                employee_count = 1.337, 
                                industry = '', 
                                sic_codes = [
                                    ''
                                    ], 
                                ultimate_parent = ldt_people_client_staging.models.ultimate_parent_company.UltimateParentCompany(
                                    id = '', 
                                    name = '', 
                                    linkedin = '', 
                                    ticker = '', 
                                    domain = '', ), ), 
                            location_details = ldt_people_client_staging.models.location_details.LocationDetails(
                                country = '', 
                                country_code = '', 
                                region = '', 
                                region_abbreviation = '', 
                                locality = '', 
                                county = '', 
                                postal_code = '', 
                                msa = '', 
                                lat = '', 
                                lon = '', 
                                fips_code = '', 
                                raw = '', ), 
                            duration = 56, 
                            company_tenure = 56, 
                            is_first_at_company = True, 
                            is_last_at_company = True, ), 
                        jobs = [
                            ldt_people_client_staging.models.job.Job(
                                title = '', 
                                level = 'C-Team', 
                                function = 'Banking and Wealth Management', 
                                started_at = '', 
                                started_at_year_only = True, 
                                ended_at = '', 
                                ended_at_year_only = True, 
                                location = '', 
                                email = '', 
                                email_status = 'valid', 
                                direct_dial_number = '', 
                                duration = 56, 
                                company_tenure = 56, 
                                is_first_at_company = True, 
                                is_last_at_company = True, )
                            ], 
                        education = [
                            ldt_people_client_staging.models.person_education_inner.Person_education_inner(
                                school = '', 
                                field = '', 
                                degree = '', 
                                started_at = '', 
                                ended_at = '', )
                            ], 
                        first_name = '', 
                        last_name = '', 
                        name = '', 
                        linkedin = '', 
                        country = '', 
                        connections = 56, 
                        location = '', 
                        cell_phone_number = '', 
                        location_details = ldt_people_client_staging.models.location_details.LocationDetails(
                            country = '', 
                            country_code = '', 
                            region = '', 
                            region_abbreviation = '', 
                            locality = '', 
                            county = '', 
                            postal_code = '', 
                            msa = '', 
                            lat = '', 
                            lon = '', 
                            fips_code = '', 
                            raw = '', ), 
                        employment_status = 'employed', )
                    ],
                pagination_token = '',
                count = 56,
                aggs = [
                    ldt_people_client_staging.models.agg_response.AggResponse(
                        id = '', 
                        field = '', 
                        buckets = [
                            ldt_people_client_staging.models.agg_response_buckets_inner.AggResponse_buckets_inner(
                                value = '', 
                                count = 1.337, )
                            ], 
                        other = 1.337, )
                    ]
            )
        else:
            return SearchPersonsData200Response(
        )
        """

    def testSearchPersonsData200Response(self):
        """Test SearchPersonsData200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
