[tool.poetry]
name = "pepperpy-ai"
version = "0.1.0"
description = "A flexible AI library with modular provider support"
authors = ["Felipe Pimentel <felipe@pepperpy.ai>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "pepperpy_ai" }]
repository = "https://github.com/pimentel/pepperpy-ai"
documentation = "https://docs.pepperpy.ai"
keywords = ["ai", "llm", "nlp", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.11.11"
click = "^8.1.8"
requests = "^2.32.3"

# Test dependencies (required for development and CI)
pytest = "^7.4.4"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
numpy = "^2.2.1"

# Optional dependencies for providers
openai = { version = "1.59.6", optional = true }
anthropic = { version = "0.42.0", optional = true }

# Optional dependencies for capabilities
sentence-transformers = { version = "3.3.1", optional = true }

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.13.2"
ruff = "^0.9.1"
mypy = "^1.14.1"
bandit = "^1.8.0"
pre-commit = "^4.0.1"

[tool.poetry.extras]
openai = ["openai"]
anthropic = ["anthropic"]
rag = ["numpy", "sentence-transformers"]
all-providers = ["openai", "anthropic"]
all-capabilities = ["numpy", "sentence-transformers"]
complete = ["openai", "anthropic", "numpy", "sentence-transformers"]
dev = ["black", "isort", "ruff", "mypy", "bandit", "pre-commit"]

[tool.poetry.scripts]
pepperpy = "pepperpy_ai.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py312"
select = ["E", "F", "B", "W", "I", "N", "D", "UP", "ANN", "RUF"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
