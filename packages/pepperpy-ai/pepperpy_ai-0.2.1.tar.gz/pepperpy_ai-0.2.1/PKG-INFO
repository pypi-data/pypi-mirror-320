Metadata-Version: 2.3
Name: pepperpy-ai
Version: 0.2.1
Summary: A flexible AI library with modular provider support
License: MIT
Keywords: ai,llm,nlp,machine-learning
Author: Felipe Pimentel
Author-email: felipe@pepperpy.ai
Requires-Python: >=3.12,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Provides-Extra: all-capabilities
Provides-Extra: all-providers
Provides-Extra: anthropic
Provides-Extra: complete
Provides-Extra: openai
Provides-Extra: rag
Requires-Dist: aiohttp (>=3.11.11,<4.0.0)
Requires-Dist: anthropic (==0.42.0) ; extra == "anthropic" or extra == "all-providers" or extra == "complete"
Requires-Dist: async-generator (>=1.10,<2.0)
Requires-Dist: click (>=8.1.8,<9.0.0)
Requires-Dist: numpy (==2.2.1) ; extra == "rag" or extra == "all-capabilities" or extra == "complete"
Requires-Dist: openai (==1.59.7) ; extra == "openai" or extra == "all-providers" or extra == "complete"
Requires-Dist: pepperpy-core
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Requires-Dist: sentence-transformers (==3.3.1) ; extra == "rag" or extra == "all-capabilities" or extra == "complete"
Project-URL: Documentation, https://docs.pepperpy.ai
Project-URL: Repository, https://github.com/pimentel/pepperpy-ai
Description-Content-Type: text/markdown

# PepperPy AI

A flexible AI library with modular provider support.

## Installation

PepperPy AI uses a modular dependency system to keep the base package lightweight. You only need to install the dependencies for the features you plan to use.

### Basic Installation

```bash
# Using pip
pip install pepperpy-ai

# Using Poetry
poetry add pepperpy-ai
```

### Optional Features

Install only what you need:

```bash
# OpenRouter support is available out of the box!
pip install pepperpy-ai

# Optional providers requiring additional dependencies:
pip install pepperpy-ai[openai]      # For OpenAI
pip install pepperpy-ai[anthropic]   # For Anthropic
pip install pepperpy-ai[all-providers]  # For all providers

# Install with RAG support
pip install pepperpy-ai[rag]

# Install everything
pip install pepperpy-ai[complete]
```

Using Poetry:
```bash
# OpenRouter support is available out of the box!
poetry add pepperpy-ai

# Optional providers requiring additional dependencies:
poetry add pepperpy-ai[openai]      # For OpenAI
poetry add pepperpy-ai[anthropic]   # For Anthropic
poetry add pepperpy-ai[all-providers]  # For all providers

# Install with RAG support
poetry add pepperpy-ai[rag]

# Install everything
poetry add pepperpy-ai[complete]
```

## Development Setup

For development, you'll need additional dependencies. We use Poetry groups to manage these:

```bash
# Clone the repository
git clone https://github.com/pimentel/pepperpy-ai.git
cd pepperpy-ai

# Install Poetry if you haven't already
curl -sSL https://install.python-poetry.org | python3 -

# Install with development dependencies
poetry install --with dev,test,docs

# Run tests
poetry run pytest

# Run linters
poetry run ruff check .
poetry run mypy .

# Format code
poetry run black .
poetry run isort .
```

## Project Structure

The project uses a modular dependency system:

- **Core Dependencies**: Minimal set of required packages
- **Optional Features**: Additional capabilities through extras
- **Development Tools**: Linting, formatting, and testing (dev group)
- **Test Framework**: Testing tools and dependencies (test group)
- **Documentation**: Documentation building tools (docs group)

This structure ensures that users only install what they need, while developers have access to all necessary tools.

## Contributing

1. Fork the repository
2. Install development dependencies: `poetry install --with dev,test,docs`
3. Create a feature branch
4. Make your changes
5. Run tests and linters
6. Submit a pull request

## License

MIT License - see LICENSE file for details.

