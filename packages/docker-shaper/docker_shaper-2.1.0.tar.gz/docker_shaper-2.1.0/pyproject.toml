[tool.poetry]
name = "docker-shaper"
version = "2.1.0"
description = "Keeps Docker resources in shape based on rules and usage"
authors = [
  "Frans FÃ¼rst <frans.fuerst@checkmk.com>",
  "Jonas Scharpf <jonas.scharpf@checkmk.com>",
  "Niko Wenselowski <niko.wenselowski@checkmk.com>",
  "Timotheus Bachinger <timotheus.bachinger@checkmk.com>"
]
# repository = "https://github.com/Checkmk/docker-shaper"
readme = "README.md"
packages = [
  {include = "docker_shaper/**/*.py"},
]
exclude = ["docker_shaper/out"]

[tool.poetry.scripts]
docker-shaper = 'docker_shaper.server:main'
dockermon = 'docker_shaper.headless_examples.dockermon:main'

[tool.poetry.dependencies]
python = "^3.10.4"
aiodocker = "^0"

pytz = "^2023.3.post1"
apparat = "^0.0.8"
pydantic = "^2.4"
rich = "^13"
textual = "^0"
psutil = "^5.9.8"

trickkiste = "^0.2.1"
#trickkiste  = {path = "/home/frafue/_HOME/trickkiste", develop = true}

[tool.poetry.group.dev.dependencies]
pytest = "*"
mypy = "*"
ruff = "*"
twine = "*"
yamllint = "*"
pytest-cov = "*"
pre-commit = "*"
snippets2changelog = "^1.6.0"
poetry-dynamic-versioning = "^1.3.0"
types-python-dateutil = "*"
types-psutil = "*"

# https://github.com/mtkennerly/poetry-dynamic-versioning/tree/v1.3.0
# > poetry self add "poetry-dynamic-versioning[plugin]"
# it is not enough to add it to the projects pyproject.toml file
[tool.poetry-dynamic-versioning]
enable = false
format-jinja-imports = [
  { module = "subprocess", item = "check_output" },
]
format-jinja = """{{ check_output(["python3", "-c", "from pathlib import Path; exec(Path('docker_shaper/version.py').read_text()); print(__version__)"]).decode().strip() }}"""
# format-jinja = "{{ env.get('PROJECT_VERSION') }}"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = ["C", "E", "F", "I", "W", "C90", "PL", "PLR"]
ignore = [
    "C401", # Unnecessary generator
    "C417", # Unnecessary "map" usage
    "C901", # "main" is too complex
    # "E402", # module level import not on top of the file
    "E501", # line too long, 100s of fails. Fixable.

    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
]

[tool.ruff.lint.per-file-ignores]
"docker_shaper/headless_examples/docker_prune.py" = ["E731"]

[tool.mypy]
python_version = "3.10"
strict="True"
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = [
    '\.venv',
    'docker_shaper/headless_examples',
]
mypy_path="typeshed"
