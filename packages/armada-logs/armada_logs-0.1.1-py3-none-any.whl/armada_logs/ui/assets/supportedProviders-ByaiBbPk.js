import{Y as O,r as k,E as B,a9 as f,g as v,a3 as I,j as e,B as V,a as M,b as P,$ as Q,a0 as n,ab as g,ah as U,ai as z,aj as K,ak as R,a1 as G,ac as J,L as Z,ad as Y,a2 as $,u as ee,t as F,s as re,C as te,a4 as ae,G as oe,al as ne,am as ce,an as T,ao as le,O as de}from"./index-Be3uPtkT.js";import{l as ue,F as me}from"./logo_microsoft-CP2bHIYw.js";const c={required:{value:!0,message:ae.fieldRequired}};function se({handleSubmit:s,itemId:r}){const[i,t]=k.useState(""),a=B({mutationFn:async l=>{var m,u;const o=(u=(m=y.getProviderByType(f.LDAP))==null?void 0:m.validate)==null?void 0:u.route;if(!o)throw new Error("Validate LDAP provider - API route does not exist");return v.post(o,l).then(()=>t("Success"))},onError:l=>t(oe(l).message)});return e.jsxs(P,{className:"flex items-center mt-2",children:[e.jsx(Y,{className:"btn-neutral btn-sm me-2",onClick:s(l=>a.mutate({config:l,item_id:r})),children:"Check Connectivity"}),e.jsx(ne,{isPending:a.isPending,state:a.isSuccess?"success":"error",children:i})]})}function ie(){return e.jsxs(z,{className:"collapse-arrow",type:"checkbox",children:[e.jsx(K,{children:"Information"}),e.jsx(R,{className:"prose",children:e.jsxs(ce,{children:[e.jsx(T,{children:"The LDAP server supports only LDAP (unencrypted) and LDAPS (encrypted) protocols"}),e.jsx(T,{children:"Simple Bind is the only supported authentication method"}),e.jsx(T,{children:"To ensure proper certificate verification for LDAPS connections, the CA certificate used to sign the server's certificate must be imported into the system's CA certificate store."})]})})]})}function pe({callback:s}){var p,h,d,b,C,_,L,S,D,w,A,N,q;const{register:r,handleSubmit:i,formState:{errors:t},setError:a,watch:l,setValue:o}=O({defaultValues:{is_enabled:!0,port:389,cn:"mail",is_connection_secure:!1,is_certificate_validation_enabled:!0,search_filter:"(&(objectCategory=person)(objectClass=user)(!(userAccountControl:1.2.840.113556.1.4.803:=2))(%a=%u))"}}),m=l("is_connection_secure");k.useEffect(()=>{o("port",m?636:389)},[m,o]);const u=B({mutationFn:async x=>{var j;const E=(j=y.getProviderByType(f.LDAP))==null?void 0:j.create.route;if(!E)throw Error("Create LDAP provider - API route does not exist");return v.post(E,x)},onSuccess:()=>s(),onError:x=>a(...I(x))});return e.jsxs(V,{children:[e.jsx(M,{children:"Create LDAP authentication provider"}),e.jsxs(P,{className:"lg:max-w-3xl",children:[e.jsx(ie,{}),e.jsxs(Q,{onSubmit:i(x=>u.mutate(x)),children:[e.jsx(n,{...r("name",c),error:(p=t.name)==null?void 0:p.message,title:"Name",required:!0}),e.jsx(n,{...r("description"),error:(h=t.description)==null?void 0:h.message,title:"Description"}),e.jsx(n,{...r("server",c),error:(d=t.server)==null?void 0:d.message,title:"Server IP / FQDN",required:!0}),e.jsx(n,{...r("port",c),error:(b=t.port)==null?void 0:b.message,title:"Port",required:!0}),e.jsxs(P,{className:"flex items-center",children:[e.jsx(g,{...r("is_connection_secure"),error:(C=t.is_connection_secure)==null?void 0:C.message,title:"SSL",titlePosition:"after"}),e.jsx(U,{message:"Switch between LDAP and LDAPS protocols"})]}),e.jsxs(P,{className:"flex items-center",children:[e.jsx(g,{...r("is_certificate_validation_enabled"),error:(_=t.is_certificate_validation_enabled)==null?void 0:_.message,title:"Validate Certificate",titlePosition:"after"}),e.jsx(U,{message:"Validate server certificate if SSL is enabled"})]}),e.jsx(n,{...r("cn",c),error:(L=t.cn)==null?void 0:L.message,title:"Common Name",description:"Attribute to use for authentication (login)",required:!0}),e.jsx(n,{...r("base",c),error:(S=t.base)==null?void 0:S.message,title:"Base DN",placeholder:"OU=users,DC=example,DC=com",description:"Search for users only in this OU",required:!0}),e.jsx(n,{...r("user",c),error:(D=t.user)==null?void 0:D.message,title:"User",placeholder:"CN=service_account,OU=users,DC=example,DC=com",required:!0}),e.jsx(n,{...r("password",c),error:(w=t.password)==null?void 0:w.message,type:"password",title:"Password",required:!0}),e.jsxs(z,{className:"collapse-arrow mt-4",type:"checkbox",children:[e.jsx(K,{children:"Additional settings"}),e.jsxs(R,{children:[" ",e.jsx(n,{...r("search_filter",c),error:(A=t.search_filter)==null?void 0:A.message,title:"Search Filter",required:!0,description:"Specify the search filter where '%a' will be replaced with the common name and '%u' with the value. Use this to customize the query."})]})]}),e.jsx(g,{...r("is_enabled"),error:(N=t.is_enabled)==null?void 0:N.message,title:"Enabled",titlePosition:"after"}),e.jsx(se,{handleSubmit:i}),e.jsx(G,{children:(q=t.root)==null?void 0:q.message}),e.jsxs(J,{children:[e.jsx(Z,{to:"..",children:e.jsx(Y,{type:"button",className:"me-4 btn-neutral",children:"Discard"})}),e.jsx($,{className:"btn-primary",isPending:u.isPending,children:"Create"})]})]})]})]})}function he({id:s,values:r,callback:i,className:t}){var b,C,_,L,S,D,w,A,N,q,x,E;const{register:a,handleSubmit:l,formState:{errors:o},setError:m,watch:u,setValue:p}=O({defaultValues:r}),h=u("is_connection_secure");k.useEffect(()=>{p("port",h?636:389)},[h,p]);const d=B({mutationFn:j=>v.put(F(y.getProviderByType(f.LDAP).update.route,s),j),onSuccess:()=>i(),onError:j=>m(...I(j))});return e.jsxs(Q,{className:t,onSubmit:l(j=>d.mutate(j)),children:[e.jsx(n,{...a("name"),disabled:!0,title:"Name",required:!0}),e.jsx(n,{...a("description"),error:(b=o.description)==null?void 0:b.message,title:"Description"}),e.jsx(n,{...a("server",c),error:(C=o.server)==null?void 0:C.message,title:"Server IP / FQDN",required:!0}),e.jsx(n,{...a("port",c),error:(_=o.port)==null?void 0:_.message,title:"Port",required:!0}),e.jsxs(P,{className:"flex items-center",children:[e.jsx(g,{...a("is_connection_secure"),error:(L=o.is_connection_secure)==null?void 0:L.message,title:"SSL",titlePosition:"after"}),e.jsx(U,{message:"Switch between LDAP and LDAPS protocols"})]}),e.jsxs(P,{className:"flex items-center",children:[e.jsx(g,{...a("is_certificate_validation_enabled"),error:(S=o.is_certificate_validation_enabled)==null?void 0:S.message,title:"Validate Certificate",titlePosition:"after"}),e.jsx(U,{message:"Validate server certificate if SSL is enabled"})]}),e.jsx(n,{...a("cn",c),error:(D=o.cn)==null?void 0:D.message,title:"Common Name",description:"Attribute to use for authentication (login)",required:!0}),e.jsx(n,{...a("base",c),error:(w=o.base)==null?void 0:w.message,title:"Base DN",placeholder:"OU=users,DC=example,DC=com",description:"Search for users only in this OU",required:!0}),e.jsx(n,{...a("user",c),error:(A=o.user)==null?void 0:A.message,title:"User",placeholder:"CN=service_account,OU=users,DC=example,DC=com",required:!0}),e.jsx(n,{...a("password",c),error:(N=o.password)==null?void 0:N.message,type:"password",title:"Password",required:!0}),e.jsxs(z,{className:"collapse-arrow mt-4",type:"checkbox",children:[e.jsx(K,{children:"Additional settings"}),e.jsxs(R,{children:[" ",e.jsx(n,{...a("search_filter",c),error:(q=o.search_filter)==null?void 0:q.message,title:"Search Filter",required:!0,description:"Specify the search filter where '%a' will be replaced with the common name and '%u' with the value. Use this to customize the query."})]})]}),e.jsx(g,{...a("is_enabled"),error:(x=o.is_enabled)==null?void 0:x.message,title:"Enabled",titlePosition:"after"}),e.jsx(se,{handleSubmit:l,itemId:s}),e.jsx(G,{children:(E=o.root)==null?void 0:E.message}),e.jsxs(J,{children:[e.jsx(Z,{to:"..",children:e.jsx(Y,{type:"button",className:"me-4 btn-neutral",children:"Cancel"})}),e.jsx($,{isPending:d.isPending,className:"btn-primary",children:"Save Changes"})]})]})}function xe({id:s,callback:r}){const i=ee({queryKey:["providers",s],queryFn:()=>v.get(F(y.getProviderByType(f.LDAP).get.route,s)).then(t=>t.data)});return i.isError?e.jsx(re,{error:i.error}):i.isPending?e.jsx(te,{}):i.data?e.jsxs(V,{className:"lg:max-w-3xl",children:[e.jsx(M,{children:"Update LDAP authentication provider"}),e.jsx(ie,{}),e.jsx(he,{id:s,values:i.data,callback:r})]}):null}function je({id:s,values:r,callback:i,className:t}){var p,h;const{register:a,handleSubmit:l,formState:{errors:o},setError:m}=O({defaultValues:r}),u=B({mutationFn:d=>v.put(F(y.getProviderByType(f.LOCAL).update.route,s),d),onSuccess:()=>i(),onError:d=>m(...I(d))});return e.jsxs(Q,{className:t,onSubmit:l(d=>u.mutate(d)),children:[e.jsx(n,{...a("name"),disabled:!0,title:"Name",required:!0}),e.jsx(n,{...a("description"),disabled:!0,title:"Description"}),e.jsx(g,{...a("is_enabled"),error:(p=o.is_enabled)==null?void 0:p.message,title:"Enabled",titlePosition:"after"}),e.jsx(G,{children:(h=o.root)==null?void 0:h.message}),e.jsxs(J,{children:[e.jsx(le,{to:"..",children:"Cancel"}),e.jsx($,{isPending:u.isPending,className:"btn-primary",children:"Save Changes"})]})]})}function fe({id:s,callback:r}){const i=ee({queryKey:["providers",s],queryFn:()=>v.get(F(y.getProviderByType(f.LOCAL).get.route,s)).then(t=>t.data)});return i.isError?e.jsx(re,{error:i.error}):i.isPending?e.jsx(te,{}):i.data?e.jsxs(V,{children:[e.jsx(M,{children:"Update local authentication provider"}),e.jsx(je,{id:s,values:i.data,className:"lg:max-w-3xl",callback:r})]}):null}const H="h-10 w-10";function W(s,r,i,t){return{get:{route:s,component:void 0},delete:{route:s,component:void 0},create:{route:s,component:i},update:{route:s,component:r},validate:t?{component:void 0,route:F(s,"validate")}:void 0}}const X=[{id:f.LDAP,name:"LDAP",description:"LDAP (Lightweight Directory Access Protocol)",...W("/api/providers/ldap",xe,pe,!0),icon:e.jsx(de,{className:H,src:ue})},{id:f.LOCAL,name:"Local",description:"",...W("/api/providers/local",fe),icon:e.jsx(me,{className:"stroke-red-700 shrink-0 "+H})}],y={getProviderByType(s){return X.find(r=>r.id===s)},getAllProviders(){return X}};export{y as a};
