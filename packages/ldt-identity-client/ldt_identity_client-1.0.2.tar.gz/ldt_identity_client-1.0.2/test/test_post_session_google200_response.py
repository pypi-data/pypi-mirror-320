# coding: utf-8

"""
    Live Data Identity API

    Manage your Live Data organization and user access to your resources

    The version of the OpenAPI document: 1.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_identity_client.models.post_session_google200_response import PostSessionGoogle200Response

class TestPostSessionGoogle200Response(unittest.TestCase):
    """PostSessionGoogle200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostSessionGoogle200Response:
        """Test PostSessionGoogle200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostSessionGoogle200Response`
        """
        model = PostSessionGoogle200Response()
        if include_optional:
            return PostSessionGoogle200Response(
                access_token = '',
                refresh_token = '',
                expires_at = '',
                user = ldt_identity_client.models.user.user(
                    id = '', 
                    name = '', 
                    email = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'active', 
                    type = 'identity#user', 
                    is_validated = True, 
                    source = '', ),
                orgs = [
                    ldt_identity_client.models.post_session_google_200_response_orgs_inner.post_session_google_200_response_orgs_inner(
                        id = '', 
                        name = '', 
                        role = '', 
                        settings = ldt_identity_client.models.settings.settings(), 
                        customer_id = '', 
                        contacts_count = '', 
                        status = '', 
                        created_at = '', )
                    ],
                services = [
                    ldt_identity_client.models.post_session_google_200_response_services_inner.post_session_google_200_response_services_inner(
                        id = '', 
                        name = '', 
                        role = '', 
                        created_at = '', )
                    ]
            )
        else:
            return PostSessionGoogle200Response(
                access_token = '',
                refresh_token = '',
                expires_at = '',
                user = ldt_identity_client.models.user.user(
                    id = '', 
                    name = '', 
                    email = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'active', 
                    type = 'identity#user', 
                    is_validated = True, 
                    source = '', ),
        )
        """

    def testPostSessionGoogle200Response(self):
        """Test PostSessionGoogle200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
