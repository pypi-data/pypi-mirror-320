# coding: utf-8

"""
    Live Data Identity API

    Manage your Live Data organization and user access to your resources

    The version of the OpenAPI document: 1.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_identity_client.models.update_service_account_roles200_response import UpdateServiceAccountRoles200Response

class TestUpdateServiceAccountRoles200Response(unittest.TestCase):
    """UpdateServiceAccountRoles200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateServiceAccountRoles200Response:
        """Test UpdateServiceAccountRoles200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateServiceAccountRoles200Response`
        """
        model = UpdateServiceAccountRoles200Response()
        if include_optional:
            return UpdateServiceAccountRoles200Response(
                service_account = ldt_identity_client.models.update_service_account_roles_200_response_service_account.update_service_account_roles_200_response_serviceAccount(
                    id = '', 
                    name = '', 
                    created_at = '', 
                    type = 'identity#serviceAccount', ),
                org = ldt_identity_client.models.org.org(
                    id = '', 
                    name = '', 
                    type = 'identity#org', 
                    created_at = '', 
                    settings = {
                        'key' : null
                        }, 
                    status = 'active', 
                    customer_id = '', ),
                role = ldt_identity_client.models.create_service_account_200_response_role.create_service_account_200_response_role(
                    name = '', 
                    type = '', )
            )
        else:
            return UpdateServiceAccountRoles200Response(
                service_account = ldt_identity_client.models.update_service_account_roles_200_response_service_account.update_service_account_roles_200_response_serviceAccount(
                    id = '', 
                    name = '', 
                    created_at = '', 
                    type = 'identity#serviceAccount', ),
                org = ldt_identity_client.models.org.org(
                    id = '', 
                    name = '', 
                    type = 'identity#org', 
                    created_at = '', 
                    settings = {
                        'key' : null
                        }, 
                    status = 'active', 
                    customer_id = '', ),
                role = ldt_identity_client.models.create_service_account_200_response_role.create_service_account_200_response_role(
                    name = '', 
                    type = '', ),
        )
        """

    def testUpdateServiceAccountRoles200Response(self):
        """Test UpdateServiceAccountRoles200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
