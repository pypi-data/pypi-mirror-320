# coding: utf-8

"""
    Live Data Identity API

    Manage your Live Data organization and user access to your resources

    The version of the OpenAPI document: 1.0
    Contact: support@livedatatechnologies.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ldt_identity_client.models.regenerate_client_secret200_response import RegenerateClientSecret200Response

class TestRegenerateClientSecret200Response(unittest.TestCase):
    """RegenerateClientSecret200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegenerateClientSecret200Response:
        """Test RegenerateClientSecret200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegenerateClientSecret200Response`
        """
        model = RegenerateClientSecret200Response()
        if include_optional:
            return RegenerateClientSecret200Response(
                service_account = ldt_identity_client.models.service_account.ServiceAccount(
                    client_id = '', 
                    name = '', 
                    created_at = '', 
                    type = '', 
                    client_secret = '', ),
                org = ldt_identity_client.models.org.org(
                    id = '', 
                    name = '', 
                    type = 'identity#org', 
                    created_at = '', 
                    settings = {
                        'key' : null
                        }, 
                    status = 'active', 
                    customer_id = '', ),
                role = ldt_identity_client.models.get_service_accounts_200_response_inner_role.get_service_accounts_200_response_inner_role(
                    name = '', 
                    type = '', ),
                created_by = ldt_identity_client.models.user.user(
                    id = '', 
                    name = '', 
                    email = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'active', 
                    type = 'identity#user', 
                    is_validated = True, 
                    source = '', )
            )
        else:
            return RegenerateClientSecret200Response(
                service_account = ldt_identity_client.models.service_account.ServiceAccount(
                    client_id = '', 
                    name = '', 
                    created_at = '', 
                    type = '', 
                    client_secret = '', ),
                org = ldt_identity_client.models.org.org(
                    id = '', 
                    name = '', 
                    type = 'identity#org', 
                    created_at = '', 
                    settings = {
                        'key' : null
                        }, 
                    status = 'active', 
                    customer_id = '', ),
        )
        """

    def testRegenerateClientSecret200Response(self):
        """Test RegenerateClientSecret200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
