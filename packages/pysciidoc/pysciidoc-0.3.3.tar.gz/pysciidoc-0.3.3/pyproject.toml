[project]
name = "pysciidoc"
description = "autogenerate asciidoc api documenation from docstrings"
readme = "README.md"
requires-python = ">=3.10"
dependencies = ["click>=8.1.7"]
dynamic = ["version"]

[project.scripts]
pysciidoc = "pysciidoc.main:main"

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "src/**/*.pyi", "testing/**/*.py"]


# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".devenv",
]


# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["D101", "D102"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "0.6"
testpaths = ["tests"]
addopts = ["--import-mode=importlib"]
norecursedirs = [".git", ".direnv"]
python_files = ["*_test.py", "test_*.py"]


[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage>=7.6.9",
    "ipython>=8.31.0",
    "mypy>=1.13.0",
    "nox>=2024.10.9",
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "ruff>=0.8.3",
    "towncrier>=24.8.0",
]
lint = ["ruff>=0.8.3"]
lsp = ["pylsp-mypy>=0.6.9", "pylsp-rope>=0.1.17", "python-lsp-server>=1.12.0"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
package = ["src/pysciidoc"]



[tool.coverage.run]
omit = ["testing/**/*.py"]
source = ["src/pysciidoc"]
command_line = "-m pytest"


[tool.towncrier]
name = "pysciidoc"
filename = "CHANGES.md"
package = "pysciidoc"
package_dir = "src"
underlines = ["", "", ""]

title_format = "## [{version}](https://github.com/glencoe/pycolint/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/glencoe/pycolint/issues/{issue})"


[tool.mypy]
python_version = "3.10"
warn_return_any = true
packages = ["pysciidoc"]
