[MASTER]

# Specify a configuration file.
ignore=git
ignore-patterns=
persistent=yes
load-plugins=
jobs=4
unsafe-load-any-extension=no
extension-pkg-whitelist=


[MESSAGES CONTROL]

#disable=missing-docstring,invalid-name,too-many-locals,too-many-branches,no-self-use,too-many-nested-blocks,too-many-arguments,superfluous-parens,redefined-variable-type,blacklisted-name,bad-mcs-classmethod-argument,abstract-method,protected-access,broad-except,logging-format-interpolation,global-variable-not-assigned,unused-variable,fixme,redefined-outer-name,too-many-format-args,global-statement,arguments-differ,import-error,cyclic-import,attribute-defined-outside-init,unpacking-non-sequence,too-many-instance-attributes,no-member,unused-argument,unexpected-keyword-arg,undefined-loop-variable,unused-import,dangerous-default-value,undefined-loop-variable,fixme

disable=all

enable=bad-indentation,bad-builtin,pointless-statement,bad-continuation,unidiomatic-typecheck,method-hidden,lost-exception,attribute-defined-outside-init,expression-not-assigned,anomalous-backslash-in-string,wildcard-import,unreachable,blacklisted-name,logging-format-interpolation,cylic-import
[REPORTS]
output-format=text
reports=yes

evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[BASIC]

good-names=i,j,k,ex,Run,val,key,item_

# Bad variable names which should always be refused, separated by a comma
# bad-names=foo,bar,baz,toto,tutu,tata

# Include a hint for the correct naming format with invalid-name
include-naming-hint=yes

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=79

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

single-line-if-stmt=no

no-space-check=trailing-comma,dict-separator

max-module-lines=1000
indent-string='    '
indent-after-paren=4
expected-line-ending-format=

[LOGGING]

logging-modules=logging

[MISCELLANEOUS]

notes=FIXME,XXX,TODO

[SIMILARITIES]

min-similarity-lines=10
ignore-comments=yes
ignore-docstrings=yes
ignore-imports=no

[TYPECHECK]

ignore-mixin-members=yes

ignored-modules=
ignored-classes=optparse.Values,thread._local,_thread._local
generated-members=
contextmanager-decorators=contextlib.contextmanager

[VARIABLES]

init-import=no
dummy-variables-rgx=(_+[a-zA-Z0-9]*?$)|dummy
additional-builtins=
callbacks=cb_,_cb
redefining-builtins-modules=six.moves,future.builtins

[CLASSES]

defining-attr-methods=__init__,__new__,setUp
valid-classmethod-first-arg=cls
valid-metaclass-classmethod-first-arg=mcs
exclude-protected=_asdict,_fields,_replace,_source,_make

[DESIGN]

max-args=10
ignored-argument-names=_.*
max-locals=15
max-returns=6
max-branches=12
max-statements=100
max-parents=7
max-attributes=10
min-public-methods=0
max-public-methods=20
max-bool-expr=5

[IMPORTS]

deprecated-modules=optparse

[EXCEPTIONS]

overgeneral-exceptions=Exception
