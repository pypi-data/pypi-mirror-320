# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .values import Values
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class ThreadState(UniversalBaseModel):
    """
    Represents the state of a thread.
    """

    values: Values
    next: typing.List[str]
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    created_at: typing.Optional[str] = None
    parent_checkpoint: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    tasks: typing.List["ThreadTask"]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .thread_task import ThreadTask  # noqa: E402

update_forward_refs(ThreadTask, ThreadState=ThreadState)
update_forward_refs(ThreadState)
