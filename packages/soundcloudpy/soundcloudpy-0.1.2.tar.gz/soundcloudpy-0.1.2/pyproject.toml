[project]
name = "soundcloudpy"
version = "0.1.2"
description = "Client for async connection to the Soundcloud api."
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Giel Janssens", email = "giel@music-assistant.io" },
]
classifiers = [
    "Environment :: Console",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "aiohttp>=3.11.0",
]

[project.license]
text = "Apache-2.0"

[project.optional-dependencies]
test = [
    "black==24.10.0",
    "codespell==2.3.0",
    "isort==5.13.2",
    "mypy==1.14.1",
    "pre-commit==4.0.1",
    "pre-commit-hooks==5.0.0",
    "pylint==3.3.3",
    "pytest==8.3.4",
    "pytest-aiohttp==1.0.5",
    "pytest-cov==6.0.0",
    "ruff==0.8.5",
    "safety==3.2.14",
]

[tool.codespell]
ignore-words-list = "soundcloud"

[tool.setuptools]
platforms = [
    "any",
]
zip-safe = false
packages = [
    "soundcloudpy",
]
include-package-data = true

[tool.setuptools.package-data]
soundcloudpy = [
    "py.typed",
]

[tool.ruff]
fix = true
show-fixes = true
line-length = 100
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN401",
    "D203",
    "D213",
    "D417",
    "FIX002",
    "PLR2004",
    "PD011",
    "S101",
    "TD002",
    "TD003",
    "TD004",
    "COM812",
    "ISC001",
    "BLE001",
    "FBT001",
    "FBT002",
    "FBT003",
    "ANN001",
    "ANN102",
    "ANN201",
    "ANN202",
    "TRY002",
    "PTH103",
    "PTH100",
    "PTH110",
    "PTH111",
    "PTH112",
    "PTH113",
    "PTH118",
    "PTH120",
    "PTH123",
    "PYI034",
    "PYI036",
    "G004",
    "PGH003",
    "DTZ005",
    "S104",
    "S105",
    "S106",
    "SLF001",
    "SIM113",
    "SIM102",
    "PERF401",
    "PERF402",
    "ARG002",
    "S311",
    "TRY301",
    "RET505",
    "PLR0912",
    "B904",
    "TRY401",
    "S324",
    "DTZ006",
    "ERA001",
    "PTH206",
    "C901",
    "PTH119",
    "PTH116",
    "DTZ003",
    "RUF012",
    "S304",
    "DTZ003",
    "RET507",
    "RUF006",
    "TRY300",
    "PTH107",
    "S608",
    "N818",
    "S307",
    "B007",
    "RUF009",
    "ANN204",
    "PTH202",
]
select = [
    "ALL",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pylint]
max-branches = 25
max-returns = 15
max-args = 10
max-statements = 50

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = [
    "soundcloudpy",
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.mypy]
platform = "linux"
python_version = "3.11"
follow_imports = "normal"
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
extension-pkg-whitelist = [
    "orjson",
]
ignore = [
    "tests",
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "id",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "duplicate-code",
    "format",
    "unsubscriptable-object",
    "unused-argument",
    "unspecified-encoding",
    "isinstance-second-argument-not-valid-type",
    "fixme",
    "too-many-return-statements",
    "unsupported-assignment-operation",
    "invalid-name",
    "redefined-outer-name",
    "too-many-statements",
    "deprecated-method",
    "logging-fstring-interpolation",
    "attribute-defined-outside-init",
    "broad-exception-caught",
    "expression-not-assigned",
    "consider-using-f-string",
    "consider-using-with",
    "arguments-renamed",
    "protected-access",
    "too-many-boolean-expressions",
    "raise-missing-from",
    "too-many-locals",
    "abstract-method",
    "unnecessary-lambda",
    "stop-iteration-return",
    "no-else-return",
    "no-else-raise",
    "undefined-loop-variable",
    "too-many-nested-blocks",
    "too-many-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 100

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"
