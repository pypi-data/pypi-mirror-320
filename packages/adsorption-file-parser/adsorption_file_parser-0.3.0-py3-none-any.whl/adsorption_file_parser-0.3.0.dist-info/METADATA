Metadata-Version: 2.1
Name: adsorption_file_parser
Version: 0.3.0
Summary: Collection of parsers for (nearly) all commercial adsorption instrumentation
Author-email: AIF Development Team <mail@pauliacomi.com>
License: MIT License
        
        Copyright (c) 2022, AIF Dev Team
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of
        this software and associated documentation files (the "Software"), to deal in
        the Software without restriction, including without limitation the rights to
        use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
        the Software, and to permit persons to whom the Software is furnished to do so,
        subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
        FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
        COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
        IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
        CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/AIF-development-team/adsorption-file-parser
Project-URL: Repository, https://github.com/AIF-development-team/adsorption-file-parser.git
Project-URL: Documentation, https://adsorption-file-parser.readthedocs.io
Keywords: adsorption,characterization,porous materials,isotherms,sorption
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Chemistry
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: python-dateutil
Requires-Dist: xlrd>=1.1
Requires-Dist: xlwt>=1.3
Requires-Dist: openpyxl
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: yapf; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: flake8-pyproject; extra == "dev"
Requires-Dist: autopep8; extra == "dev"
Requires-Dist: pydocstyle; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"

Adsorption File Parser
======================

A pure python parser to sorption files from various instrumentation manufacturers.
It comes with minimal dependencies and maximum flexibility.

Currently supports files from:

- Micromeritics ('.xls' reports)
- Surface Measurement Systems DVS ('.xlsx' reports)
- 3P instruments ('.xlsx' reports)
- Quantachrome ('.txt' raw isotherm data)
- MicrotracBEL ('.dat', '.xls' and '.csv' files)

.. start-badges

.. list-table::
    :widths: 10 90
    :stub-columns: 1

    * - status
      - | |status| |commits-since|
    * - license
      - | |license|
    * - tests
      - | |GHA| |codecov|
    * - package
      - | |version| |wheel|
        | |supported-versions| |supported-implementations|

.. |status| image:: https://www.repostatus.org/badges/latest/active.svg
    :target: https://www.repostatus.org/#active
    :alt: Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.

.. |commits-since| image:: https://img.shields.io/github/commits-since/AIF-development-team/adsorption-file-parser/latest/develop
    :alt: Commits since latest release
    :target: https://github.com/AIF-development-team/adsorption-file-parser/compare/master...develop

.. |license| image:: https://img.shields.io/badge/License-MIT-yellow.svg
    :target: https://opensource.org/licenses/MIT
    :alt: Project License

.. |GHA| image:: https://github.com/AIF-development-team/adsorption-file-parser/actions/workflows/CI-CD.yaml/badge.svg
    :alt: GHA-CI Build Status
    :target: https://github.com/AIF-development-team/adsorption-file-parser/actions

.. |codecov| image:: https://img.shields.io/codecov/c/github/AIF-development-team/adsorption-file-parser.svg
    :alt: Coverage Status
    :target: https://codecov.io/gh/AIF-development-team/adsorption-file-parser

.. |version| image:: https://img.shields.io/pypi/v/adsorption-file-parser.svg
    :alt: PyPI Package latest release
    :target: https://pypi.org/project/adsorption-file-parser/

.. |wheel| image:: https://img.shields.io/pypi/wheel/adsorption-file-parser.svg
    :alt: PyPI Wheel
    :target: https://pypi.org/project/adsorption-file-parser/

.. |supported-versions| image:: https://img.shields.io/pypi/pyversions/adsorption-file-parser.svg
    :alt: Supported versions
    :target: https://pypi.org/project/adsorption-file-parser/

.. |supported-implementations| image:: https://img.shields.io/pypi/implementation/adsorption-file-parser.svg
    :alt: Supported implementations
    :target: https://pypi.org/project/adsorption-file-parser/

.. end-badges


Installation
============

Install using pip

.. code:: bash

    pip install adsorption-file-parser


Documentation
=============

The main read function returns two dictionaries: a ``meta`` dictionary, which
contains various metadata that is present in the report (date, user, units) and
the ``data`` dictionary, containing lists of individual isotherm data.

.. code:: bash

    from adsorption_file_parser import read
    meta, data = read(
        path="path/to/file",
        manufacturer="manufacturer",
        fmt="supported format"
    )

Bugs or questions?
==================

For any bugs found or feature requests, please open an
`issue <https://github.com/AIF-development-team/adsorption-file-parser/issues/>`__
or, even better, submit a
`pull request <https://github.com/AIF-development-team/adsorption-file-parser/pulls/>`__.
