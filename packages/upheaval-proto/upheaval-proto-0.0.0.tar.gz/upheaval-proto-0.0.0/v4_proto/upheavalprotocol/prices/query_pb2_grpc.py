# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from v4_proto.upheavalprotocol.prices import query_pb2 as upheavalprotocol_dot_prices_dot_query__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in upheavalprotocol/prices/query_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MarketPrice = channel.unary_unary(
                '/upheavalprotocol.prices.Query/MarketPrice',
                request_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceRequest.SerializeToString,
                response_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceResponse.FromString,
                _registered_method=True)
        self.AllMarketPrices = channel.unary_unary(
                '/upheavalprotocol.prices.Query/AllMarketPrices',
                request_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesRequest.SerializeToString,
                response_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesResponse.FromString,
                _registered_method=True)
        self.MarketParam = channel.unary_unary(
                '/upheavalprotocol.prices.Query/MarketParam',
                request_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamRequest.SerializeToString,
                response_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamResponse.FromString,
                _registered_method=True)
        self.AllMarketParams = channel.unary_unary(
                '/upheavalprotocol.prices.Query/AllMarketParams',
                request_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsRequest.SerializeToString,
                response_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsResponse.FromString,
                _registered_method=True)
        self.NextMarketId = channel.unary_unary(
                '/upheavalprotocol.prices.Query/NextMarketId',
                request_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdRequest.SerializeToString,
                response_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdResponse.FromString,
                _registered_method=True)


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def MarketPrice(self, request, context):
        """Queries a MarketPrice by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllMarketPrices(self, request, context):
        """Queries a list of MarketPrice items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketParam(self, request, context):
        """Queries a MarketParam by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllMarketParams(self, request, context):
        """Queries a list of MarketParam items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextMarketId(self, request, context):
        """Queries the next market id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MarketPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketPrice,
                    request_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceRequest.FromString,
                    response_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceResponse.SerializeToString,
            ),
            'AllMarketPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.AllMarketPrices,
                    request_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesRequest.FromString,
                    response_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesResponse.SerializeToString,
            ),
            'MarketParam': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketParam,
                    request_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamRequest.FromString,
                    response_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamResponse.SerializeToString,
            ),
            'AllMarketParams': grpc.unary_unary_rpc_method_handler(
                    servicer.AllMarketParams,
                    request_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsRequest.FromString,
                    response_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsResponse.SerializeToString,
            ),
            'NextMarketId': grpc.unary_unary_rpc_method_handler(
                    servicer.NextMarketId,
                    request_deserializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdRequest.FromString,
                    response_serializer=upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'upheavalprotocol.prices.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('upheavalprotocol.prices.Query', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def MarketPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/upheavalprotocol.prices.Query/MarketPrice',
            upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceRequest.SerializeToString,
            upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketPriceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllMarketPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/upheavalprotocol.prices.Query/AllMarketPrices',
            upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesRequest.SerializeToString,
            upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketPricesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarketParam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/upheavalprotocol.prices.Query/MarketParam',
            upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamRequest.SerializeToString,
            upheavalprotocol_dot_prices_dot_query__pb2.QueryMarketParamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllMarketParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/upheavalprotocol.prices.Query/AllMarketParams',
            upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsRequest.SerializeToString,
            upheavalprotocol_dot_prices_dot_query__pb2.QueryAllMarketParamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NextMarketId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/upheavalprotocol.prices.Query/NextMarketId',
            upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdRequest.SerializeToString,
            upheavalprotocol_dot_prices_dot_query__pb2.QueryNextMarketIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
