Metadata-Version: 2.2
Name: compositionspace
Version: 0.1.3
Summary: APT analysis tools
Author: Alaukik Saxena, Sarath Menon, Mariano Forti, Markus Kühbach
License: BSD 3-Clause License
        
        Copyright (c) 2021, Max-Planck-Institut für Eisenforschung GmbH - Computational Materials Design (CM) Department
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this
          list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice,
          this list of conditions and the following disclaimer in the documentation
          and/or other materials provided with the distribution.
        
        * Neither the name of the copyright holder nor the names of its
          contributors may be used to endorse or promote products derived from
          this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Homepage, https://github.com/eisenforschung/CompositionSpace
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: h5py
Requires-Dist: scikit-learn
Requires-Dist: trimesh
Requires-Dist: ifes_apt_tc_data_modeling>=0.2.1
Requires-Dist: pyyaml
Requires-Dist: flatdict
Requires-Dist: lxml
Requires-Dist: jupyter
Requires-Dist: jupyterlab
Requires-Dist: jupyterlab_h5web
Provides-Extra: dev
Requires-Dist: mypy; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pandas; extra == "dev"
Requires-Dist: matplotlib; extra == "dev"
Requires-Dist: tqdm; extra == "dev"
Requires-Dist: pyevtk; extra == "dev"
Requires-Dist: pyvista; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-timeout; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pip-tools; extra == "dev"

# CompositionSpace
CompositionSpace is a python library for analysis of APT data.

## Installation

### Installation for developers on your local machine into a virtual environment:
```
git clone https://github.com/eisenforschung/CompositionSpace
cd CompositionSpace
git submodule sync --recursive
git submodule update --init --recursive --remote
python -m pip install --upgrade pip
python -m pip install -e ".[dev]"
```
<!--
### Installation for users via [PyPI](https://pypi.org/)

CompositionSpace can be installed using:

```
pip install compositionspace
```-->

<!--
### Installation for users via [Conda](https://anaconda.org/)
It is recommended to install and use `compositionspace` within a conda environment. To see how you can install conda see [here](https://docs.conda.io/projects/conda/en/latest/user-guide/install/).

Once a conda distribution is available, the following steps will help set up an environment to use `compositionspace`. First step is to clone the repository.

```
git clone https://github.com/eisenforschung/CompositionSpace.git
```

After cloning, an environment can be created from the included file-

```
cd CompositionSpace
conda env create -f environment.yml
```

Activate the environment,

```
conda activate compspace
```

then, install `compositionspace` using,

```
python setup.py install
```

The environment is now set up to run compositionspace.
-->

## Getting started
Navigate to tests. Spin up a jupyter notebook and run `FullWorkflow.ipynb`.

[The usa_denton_smith dataset is available here](https://zenodo.org/records/7986279/files/usa_denton_smith_apav_si.zip?download=1)
[Further atom probe datasets for testing are available here](https://dx.doi.org/10.25833/3ge0-y420)

<!--
## Documentation

Documentation is available [here](https://compositionspace.readthedocs.io/en/latest/).
-->
